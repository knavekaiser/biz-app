{"version":3,"file":"static/js/514.b8558e59.chunk.js","mappings":"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","sources":["webpack://cash-app/./src/Views/Dashboard/Inventory/quotes.module.scss?4ca7","Views/Dashboard/Inventory/MasterForm.js","Views/Dashboard/Inventory/Filters.js","Views/Dashboard/Inventory/index.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"content\":\"quotes_content__niBb4\",\"innerWrapper\":\"quotes_innerWrapper__eqA-i\",\"sidebar\":\"quotes_sidebar__J-8f3\",\"addButton\":\"quotes_addButton__u9EdI\",\"btns\":\"quotes_btns__4+XC2\",\"listItem\":\"quotes_listItem__WD70k\",\"label\":\"quotes_label__KbFIm\",\"accountName\":\"quotes_accountName__7d1uP\",\"highlight\":\"quotes_highlight__oAB8h\",\"nestedList\":\"quotes_nestedList__hnP2n\",\"open\":\"quotes_open__1j-GY\",\"innerContent\":\"quotes_innerContent__AASR0\",\"innerContentWrapper\":\"quotes_innerContentWrapper__wL0J2\",\"vouchers\":\"quotes_vouchers__B6a0g\",\"footer\":\"quotes_footer__NlFGZ\",\"analysysPlaceholder\":\"quotes_analysysPlaceholder__WFSHT\",\"entryForm\":\"quotes_entryForm__oFShb\",\"voucherFilters\":\"quotes_voucherFilters__Mobw4\",\"masterFormModal\":\"quotes_masterFormModal__mLMGL\",\"masterForm\":\"quotes_masterForm__peHJD\",\"head\":\"quotes_head__x3HSY\"};","import { useEffect, useState } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { Input, Combobox } from \"Components/elements\";\nimport { useYup, useFetch } from \"hooks\";\nimport { Prompt } from \"Components/modal\";\nimport * as yup from \"yup\";\nimport s from \"./quotes.module.scss\";\nimport { endpoints } from \"config\";\nimport { RiCloseLargeFill } from \"react-icons/ri\";\n\nconst mainSchema = yup.object({\n  name: yup.string().required(\"Please enter a name\"),\n  parent: yup.string(),\n  type: yup\n    .string()\n    .oneOf([\n      \"Cash\",\n      \"Bank\",\n      \"Customers\",\n      \"Suppliers\",\n      \"Sales\",\n      \"Purchase\",\n      \"Stock\",\n      \"null\",\n      \"Tax\",\n      null,\n    ])\n    .nullable(),\n  isGroup: yup.boolean().required(),\n});\n\nconst Form = ({ edit, masters = [], onSuccess }) => {\n  const [entries, setEntries] = useState([]);\n  const {\n    handleSubmit,\n    register,\n    reset,\n    control,\n    setValue,\n    setError,\n    setFocus,\n    clearErrors,\n    formState: { errors },\n  } = useForm({\n    resolver: useYup(mainSchema),\n  });\n\n  const {\n    post: createMaster,\n    put: updateMaster,\n    loading,\n  } = useFetch(endpoints.inventoryMasters + `/${edit?._id || \"\"}`);\n\n  useEffect(() => {\n    const values = {\n      name: edit?.name || \"\",\n      parent: edit?.parent || \"null\",\n      type: edit?.type || \"null\",\n      isGroup: edit?.isGroup ?? true,\n    };\n    if (edit?.openingStocks?.length) {\n      edit?.openingStocks?.forEach((entry, i) => {\n        values[`entries_${i}_branch`] = entry.branch;\n        values[`entries_${i}_amount`] = entry.amount;\n      });\n    } else {\n      values.entries_0_branch = \"\";\n      values.entries_0_amount = \"\";\n    }\n    reset(values);\n    setEntries(\n      edit?.openingStocks?.length\n        ? edit?.openingStocks\n        : [\n            {\n              _id: Math.random().toString(36),\n              name: \"\",\n              amount: \"\",\n            },\n          ]\n    );\n  }, [edit]);\n  return (\n    <form\n      onSubmit={handleSubmit((values) => {\n        if (\n          entries.some((entry, i) => {\n            if (entry.branch && entry.amount) {\n              return false;\n            }\n            if (!entry.branch) {\n              setError(`entries_${i}_branch`, {\n                type: \"custom\",\n                message: \"Name is required.\",\n              });\n            }\n            if (!entry.amount) {\n              setError(`entries_${i}_amount`, {\n                type: \"custom\",\n                message: \"Amount is required.\",\n              });\n            }\n            return true;\n          })\n        ) {\n          return;\n        }\n\n        if (values.parent === \"null\") {\n          values.parent = null;\n        }\n        if (values.type === \"null\") {\n          values.type = null;\n        }\n\n        const payload = {\n          name: values.name,\n          isGroup: values.isGroup,\n          parent: values.parent,\n          type: values.type,\n          openingStocks: entries.map((entry) => ({\n            branch: entry.branch,\n            amount: entry.amount,\n          })),\n        };\n        (edit?._id ? updateMaster : createMaster)(payload)\n          .then(({ data }) => {\n            if (!data.success) {\n              return Prompt({ type: \"error\", message: data.message });\n            }\n            onSuccess(data.data);\n          })\n          .catch((err) => Prompt({ type: \"error\", message: err.message }));\n      })}\n      className={`${s.masterForm} grid gap-1`}\n    >\n      <Input label=\"Name\" {...register(\"name\")} required error={errors.name} />\n\n      <Combobox\n        label=\"Parent\"\n        name=\"parent\"\n        control={control}\n        options={[\n          { label: \"None\", value: \"null\" },\n          ...masters.map((item) => ({ label: item.name, value: item._id })),\n        ]}\n      />\n\n      <Combobox\n        label=\"Type\"\n        name=\"type\"\n        control={control}\n        options={[\n          { label: \"None\", value: \"null\" },\n          { label: \"Cash\", value: \"Cash\" },\n          { label: \"Bank\", value: \"Bank\" },\n          { label: \"Customers\", value: \"Customers\" },\n          { label: \"Suppliers\", value: \"Suppliers\" },\n          { label: \"Sales\", value: \"Sales\" },\n          { label: \"Purchase\", value: \"Purchase\" },\n          { label: \"Stock\", value: \"Stock\" },\n          { label: \"Tax\", value: \"Tax\" },\n        ]}\n      />\n\n      <Combobox\n        label=\"Is Group\"\n        name=\"isGroup\"\n        control={control}\n        formOptions={{ required: true }}\n        options={[\n          { label: \"No\", value: false },\n          { label: \"Yes\", value: true },\n        ]}\n      />\n\n      <h3>Opening Stocks</h3>\n\n      {(entries || []).map((entry, i) => (\n        <div key={entry._id} className={s.entryForm}>\n          <Input\n            label=\"Branch Name\"\n            required\n            {...register(`entries_${i}_branch`)}\n            onChange={(e) => {\n              clearErrors(`entries_${i}_branch`);\n              setEntries((prev) =>\n                prev.map((item) =>\n                  item._id === entry._id\n                    ? { ...item, branch: e.target.value }\n                    : item\n                )\n              );\n            }}\n            error={errors[`entries_${i}_branch`]}\n          />\n          <Input\n            label=\"Amount\"\n            type=\"number\"\n            required\n            {...register(`entries_${i}_amount`)}\n            onChange={(e) => {\n              clearErrors(`entries_${i}_amount`);\n              setEntries((prev) =>\n                prev.map((item) =>\n                  item._id === entry._id\n                    ? { ...item, amount: e.target.value }\n                    : item\n                )\n              );\n            }}\n            error={errors[`entries_${i}_amount`]}\n          />\n\n          {entries?.length > 1 && (\n            <button\n              type=\"button\"\n              onClick={() =>\n                setEntries((prev) =>\n                  prev.filter((item) => item._id !== entry._id)\n                )\n              }\n              className=\"btn clear iconOnly\"\n            >\n              <RiCloseLargeFill />\n            </button>\n          )}\n        </div>\n      ))}\n\n      {!loading && (\n        <button\n          type=\"button\"\n          className=\"btn secondary\"\n          onClick={() => {\n            setValue(`entries_${entries.length}_type`, \"credit\");\n            setEntries((prev) => [\n              ...prev,\n              {\n                _id: Math.random().toString(36),\n                type: \"credit\",\n                accountId: \"\",\n                debit: \"\",\n                credit: \"\",\n              },\n            ]);\n          }}\n        >\n          Add More Stock\n        </button>\n      )}\n\n      <div className=\"btns\">\n        <button className=\"btn\" disabled={loading}>\n          {edit?._id ? \"Update\" : \"Submit\"}\n        </button>\n      </div>\n    </form>\n  );\n};\n\nexport default Form;\n","import { useForm } from \"react-hook-form\";\nimport { Input, Combobox } from \"Components/elements\";\nimport s from \"./quotes.module.scss\";\n\nconst VoucherFilters = ({ filters, setFilters }) => {\n  const {\n    handleSubmit,\n    register,\n    reset,\n    control,\n    formState: { errors },\n  } = useForm();\n\n  return (\n    <form\n      onSubmit={handleSubmit((values) => {\n        const filters = {};\n        if (values.type) {\n          filters.type = values.type;\n        }\n        if (values.startDate && values.endDate) {\n          filters.startDate = values.startDate;\n          filters.endDate = values.endDate;\n        }\n        setFilters(filters);\n      })}\n      className={`${s.voucherFilters} grid gap-1`}\n    >\n      <Combobox\n        label=\"Type\"\n        name=\"type\"\n        control={control}\n        options={[\n          { label: \"Invoice\", value: \"Invoice\" },\n          { label: \"Sales Return\", value: \"Sales Return\" },\n          { label: \"Purchase\", value: \"Purchase\" },\n          { label: \"Purchase Return\", value: \"Purchase Return\" },\n          { label: \"Receipt\", value: \"Receipt\" },\n          { label: \"Payment\", value: \"Payment\" },\n        ]}\n      />\n\n      <Input\n        label=\"Start Date\"\n        type=\"datetime-local\"\n        {...register(\"startDate\")}\n        required\n        error={errors.startDate}\n      />\n      <Input\n        label=\"End Date\"\n        type=\"datetime-local\"\n        {...register(\"endDate\")}\n        required\n        error={errors.endDate}\n      />\n\n      <div className=\"flex gap-1\">\n        <button className=\"btn\">Search</button>\n        <button\n          className=\"btn secondary\"\n          type=\"button\"\n          onClick={() => {\n            reset();\n            setFilters({});\n          }}\n        >\n          Clear\n        </button>\n      </div>\n    </form>\n  );\n};\n\nexport default VoucherFilters;\n","import { useState, useEffect, useMemo, useRef } from \"react\";\nimport { Table, Moment, Tabs } from \"Components/elements\";\nimport { Prompt, Modal } from \"Components/modal\";\nimport s from \"./quotes.module.scss\";\nimport { useFetch } from \"hooks\";\nimport { endpoints } from \"config\";\n\nimport MasterForm from \"./MasterForm\";\nimport {\n  BsDashSquare,\n  BsFillPlusSquareFill,\n  BsList,\n  BsPlusSquare,\n} from \"react-icons/bs\";\nimport { FiEdit3 } from \"react-icons/fi\";\nimport { PiTreeViewBold } from \"react-icons/pi\";\nimport { CgSpinner } from \"react-icons/cg\";\nimport VoucherFilters from \"./Filters\";\n\nconst buildTree = (accounts) => {\n  const accountMap = {};\n  accounts.forEach((account) => {\n    account.children = [];\n    accountMap[account._id] = account;\n  });\n\n  const tree = [];\n\n  accounts.forEach((account) => {\n    if (account.parent) {\n      const parent = accountMap[account.parent];\n      if (parent) {\n        parent.children.push(account);\n      }\n    } else {\n      tree.push(account);\n    }\n  });\n\n  return tree;\n};\n\nconst AccountNode = ({\n  account,\n  setAddMaster,\n  activeGroup,\n  activeLeaf,\n  activeLeavs = [],\n  onClick = () => {},\n}) => {\n  const [children, setChildren] = useState([]);\n  const [open, setOpen] = useState(false);\n  const { get: getMasters, loading } = useFetch(endpoints.inventoryMasters);\n\n  useEffect(() => {\n    if (account.children) {\n      if (\n        account.children.length &&\n        account.totalChildren > account.children.length\n      ) {\n        getMasters({ query: { parent: account._id } })\n          .then(({ data }) => {\n            if (data.success) {\n              setChildren(data.data);\n              setOpen(true);\n            } else {\n              Prompt({ type: \"error\", message: data.message });\n            }\n          })\n          .catch((err) => Prompt({ type: \"error\", message: err.message }));\n      } else {\n        setChildren(account.children);\n        setOpen(account?.isGroup ? account.children.length > 0 : false);\n      }\n    }\n  }, [account.children]);\n\n  return (\n    <li style={{ whiteSpace: \"nowrap\" }} className={s.listItem}>\n      <div className={s.label}>\n        {account.isGroup && (\n          <>\n            {(children?.length || account.totalChildren) > 0 ? (\n              <button\n                onClick={() => {\n                  if (children?.length === account.totalChildren) {\n                    setOpen(!open);\n                  } else {\n                    getMasters({ query: { parent: account._id } })\n                      .then(({ data }) => {\n                        if (data.success) {\n                          setChildren(data.data);\n                          setOpen(true);\n                        } else {\n                          Prompt({ type: \"error\", message: data.message });\n                        }\n                      })\n                      .catch((err) =>\n                        Prompt({ type: \"error\", message: err.message })\n                      );\n                  }\n                }}\n              >\n                {loading ? (\n                  <CgSpinner className=\"spin\" />\n                ) : open ? (\n                  <BsDashSquare />\n                ) : (\n                  <BsPlusSquare />\n                )}\n              </button>\n            ) : (\n              <button\n                style={{\n                  height: \"16px\",\n                  width: \"16px\",\n                  // background: \"none\",\n                  border: \"1px dashed #818181\",\n                  borderRadius: \"2px\",\n                  pointerEvents: \"none\",\n                }}\n              />\n            )}\n          </>\n        )}\n        <strong\n          className={`${s.accountName} ${\n            (account.isGroup && activeGroup === account._id) ||\n            (!account.isGroup && activeLeaf === account._id) ||\n            activeLeavs.includes(account._id)\n              ? s.highlight\n              : \"\"\n          }`}\n          onClick={() => {\n            onClick(account);\n          }}\n        >\n          {account.name}\n        </strong>\n        <div className={s.btns}>\n          <button className={s.addButton} onClick={() => setAddMaster(account)}>\n            <FiEdit3 />\n          </button>\n          {account.isGroup && (\n            <button\n              className={s.addButton}\n              onClick={() =>\n                setAddMaster({ parent: account._id, type: account.type || \"\" })\n              }\n            >\n              <BsFillPlusSquareFill />\n            </button>\n          )}\n        </div>\n      </div>\n      {open && children.length > 0 && (\n        <ul\n          className={`${s.nestedList} ${\n            account.isGroup && activeGroup === account._id ? s.highlight : \"\"\n          }`}\n        >\n          {children.map((child) => (\n            <AccountNode\n              key={child._id}\n              activeGroup={activeGroup}\n              activeLeaf={activeLeaf}\n              activeLeavs={activeLeavs}\n              account={child}\n              setAddMaster={setAddMaster}\n              onClick={onClick}\n            />\n          ))}\n        </ul>\n      )}\n    </li>\n  );\n};\n\nconst Accounting = ({ setSidebarOpen }) => {\n  const [addMaster, setAddMaster] = useState(null);\n  const [masters, setMasters] = useState([]);\n  const [tab, setTab] = useState(\"voucherListing\");\n  const [open, setOpen] = useState(true);\n  const [analysysAcc, setAnalysysAcc] = useState(null);\n  const [ledger, setLedger] = useState({});\n  const [vouchers, setVouchers] = useState([]);\n  const [journalAcc, setJournalAcc] = useState([]);\n\n  const { get: getMasters } = useFetch(endpoints.inventoryMasters);\n\n  const treeData = useMemo(() => buildTree(masters), [masters]);\n\n  useEffect(() => {\n    getMasters({ query: { isGroup: \"true\" } })\n      .then(({ data }) => {\n        if (data.success) {\n          return setMasters(data.data);\n        }\n      })\n      .catch((err) => Prompt({ type: \"error\", message: err.message }));\n  }, []);\n\n  return (\n    <div className={`${s.content} grid gap-1 m-a`}>\n      <div className={`flex ${s.head}`}>\n        <div\n          className={`flex align-center pointer gap_5  ml-1`}\n          onClick={() => setSidebarOpen((prev) => !prev)}\n        >\n          <BsList style={{ fontSize: \"1.75rem\" }} />\n          <h2>Inventory</h2>\n        </div>\n      </div>\n\n      <div className={`${s.innerWrapper} ${open ? s.open : \"\"}`}>\n        <div className={s.sidebar}>\n          <button className={s.addButton} onClick={() => setAddMaster({})}>\n            <BsFillPlusSquareFill />\n          </button>\n          <ul>\n            {masters.length > 0 ? (\n              treeData.map((account) => (\n                <AccountNode\n                  key={account._id}\n                  account={account}\n                  setAddMaster={setAddMaster}\n                  activeGroup={tab === \"analysys\" ? analysysAcc?._id : null}\n                  activeLeaf={tab === \"ledgers\" ? ledger?.account?._id : null}\n                  activeLeavs={\n                    tab === \"journals\" ? journalAcc.map((acc) => acc._id) : []\n                  }\n                  onClick={(account) => {\n                    // if (tab === \"journals\") {\n                    //   if (!account.isGroup) {\n                    //     setJournalAcc((prev) =>\n                    //       prev.some((acc) => acc._id === account._id)\n                    //         ? prev.filter((acc) => acc._id !== account._id)\n                    //         : [...prev, account].filter(\n                    //             (acc, i, arr) =>\n                    //               arr.findIndex(\n                    //                 (item) => item._id === acc._id\n                    //               ) === i\n                    //           )\n                    //     );\n                    //   }\n                    //   return;\n                    // }\n                    // if (account.isGroup) {\n                    //   setAnalysysAcc(account);\n                    //   setTab(\"analysys\");\n                    // } else {\n                    //   const firstRecords = (vouchers || []).filter(\n                    //     (item) => item.accountId === account._id\n                    //   );\n                    //   const otherRecords = (vouchers || []).filter((item) =>\n                    //     firstRecords.some((rec) => rec.rec_id === item.rec_id)\n                    //   );\n                    //   const allRecords = [\n                    //     ...firstRecords,\n                    //     ...otherRecords,\n                    //   ].filter(\n                    //     (obj, index, self) =>\n                    //       index ===\n                    //       self.findIndex(\n                    //         (o) =>\n                    //           o.rec_id === obj.rec_id && o.index === obj.index\n                    //       )\n                    //   );\n                    //   const detailedRows = allRecords\n                    //     .filter((row) => row.accountId !== account._id)\n                    //     .reduce((p, c) => {\n                    //       const index = p.findIndex((item) =>\n                    //         item.some((row) => row.rec_id === c.rec_id)\n                    //       );\n                    //       if (index === -1) {\n                    //         p.push([c]);\n                    //       } else {\n                    //         p[index].push(c);\n                    //       }\n                    //       return p;\n                    //     }, [])\n                    //     .map((item) => {\n                    //       const accRec = allRecords.find(\n                    //         (rec) => rec.rec_id === item[0].rec_id\n                    //       );\n                    //       if (item.length <= 1) {\n                    //         return {\n                    //           ...item[0],\n                    //           debit: accRec.debit,\n                    //           credit: accRec.credit,\n                    //         };\n                    //       } else {\n                    //         return {\n                    //           ...item[0],\n                    //           details: item.map((row) => ({\n                    //             label: row.accountName,\n                    //             value: row.credit || row.debit,\n                    //           })),\n                    //           // credit: item.reduce((p, c) => p + c.credit, 0),\n                    //           // debit: item.reduce((p, c) => p + c.debit, 0),\n                    //           debit: accRec.debit,\n                    //           credit: accRec.credit,\n                    //         };\n                    //       }\n                    //     })\n                    //     .sort((a, b) => (new Date(a) > new Date(b) ? 1 : -1))\n                    //     .sort((a, b) => (a.index > b.index ? 1 : -1))\n                    //     .reduce((p, c) => {\n                    //       if (c.details?.length) {\n                    //         p.push(\n                    //           ...[\n                    //             c,\n                    //             ...c.details.map((item) => ({\n                    //               createdAt: null,\n                    //               no: null,\n                    //               type: null,\n                    //               accountName: (\n                    //                 <p>\n                    //                   {item.label}: {item.value.toFixed(2)}\n                    //                 </p>\n                    //               ),\n                    //               debit: null,\n                    //               credit: null,\n                    //             })),\n                    //           ]\n                    //         );\n                    //       } else {\n                    //         p.push(c);\n                    //       }\n                    //       return p;\n                    //     }, []);\n                    //   setLedger({\n                    //     account,\n                    //     rows: detailedRows,\n                    //   });\n                    //   setTab(\"ledgers\");\n                    // }\n                  }}\n                />\n              ))\n            ) : (\n              <p\n                style={{\n                  marginTop: \"1rem\",\n                  marginBottom: \"1rem\",\n                  textAlign: \"center\",\n                  textWrap: \"balance\",\n                  color: \"#797979\",\n                }}\n              >\n                No accounts have been added yet.\n              </p>\n            )}\n          </ul>\n        </div>\n        <div className={s.innerContent}>\n          <div className=\"flex gap-1 align-center\">\n            <button\n              className=\"btn clear iconOnly\"\n              onClick={() => setOpen(!open)}\n            >\n              <PiTreeViewBold />\n            </button>\n            <Tabs\n              activeTab={tab}\n              tabs={[\n                { label: \"Listing\", value: \"voucherListing\" },\n                // { label: \"Ledgers\", value: \"ledgers\" },\n                // { label: \"Accounting Analysys\", value: \"analysys\" },\n              ]}\n              onChange={(tab) => setTab(tab.value)}\n            />\n          </div>\n          {tab === \"voucherListing\" && (\n            <Vouchers vouchers={vouchers} setVouchers={setVouchers} />\n          )}\n          {tab === \"ledgers\" && (\n            <Ledgers account={ledger?.account} rows={ledger?.rows} />\n          )}\n          {tab === \"analysys\" && <Analysys account={analysysAcc} />}\n          {\n            // tab === \"journals\" && <Journals accounts={journalAcc} />\n          }\n        </div>\n      </div>\n\n      <Modal\n        open={addMaster}\n        head\n        label={`${addMaster?._id ? \"Update\" : \"Add\"} Account`}\n        className={s.masterFormModal}\n        setOpen={() => {\n          setAddMaster(null);\n        }}\n      >\n        <MasterForm\n          edit={addMaster}\n          masters={masters}\n          onSuccess={() => {\n            getMasters({ query: { isGroup: \"true\" } })\n              .then(({ data }) => {\n                if (data.success) {\n                  return setMasters(data.data);\n                }\n              })\n              .catch((err) => Prompt({ type: \"error\", message: err.message }));\n            setAddMaster(false);\n          }}\n        />\n      </Modal>\n    </div>\n  );\n};\n\nconst Vouchers = ({ vouchers, setVouchers }) => {\n  const [filters, setFilters] = useState({});\n  const voucherTableRef = useRef();\n\n  const { get: getVouchers } = useFetch(endpoints.inventoryListing);\n\n  useEffect(() => {\n    getVouchers({ query: filters })\n      .then(({ data }) => {\n        if (data.success) {\n          setVouchers(data.data);\n        } else {\n          Prompt({ type: \"error\", message: data.message });\n        }\n      })\n      .catch((err) => Prompt({ type: \"error\", message: err.message }));\n  }, [filters]);\n\n  return (\n    <div className={s.innerContentWrapper}>\n      <VoucherFilters filters={filters} setFilters={setFilters} />\n      <Table\n        ref={voucherTableRef}\n        countRecord={() =>\n          vouchers.reduce(\n            (p, c, i, arr) => p + (arr[i - 1]?.rec_id !== c.rec_id ? 1 : 0),\n            0\n          )\n        }\n        className={s.vouchers}\n        columns={[\n          { label: \"Date\" },\n          { label: \"No\" },\n          { label: \"Type\" },\n          { label: \"Account Name\" },\n          { label: \"Outward\", className: \"text-right\" },\n          { label: \"Inward\", className: \"text-right\" },\n          // { label: \"Action\" },\n        ]}\n        tfoot={() => (\n          <tfoot>\n            <tr className={s.footer}>\n              <td />\n              <td />\n              <td />\n              <td className=\"text-right\">Total</td>\n              <td className=\"text-right\">\n                {vouchers.reduce((p, c) => p + c.outward, 0).toFixed(2)}\n              </td>\n              <td className=\"text-right\">\n                {vouchers.reduce((p, c) => p + c.inward, 0).toFixed(2)}\n              </td>\n            </tr>\n          </tfoot>\n        )}\n      >\n        {vouchers.map((row, i, arr) => (\n          <tr key={i}>\n            <td className=\"grid\">\n              {arr[i - 1]?.rec_id !== row.rec_id && (\n                <>\n                  <Moment style={{ fontSize: \"14px\" }} format=\"DD MMM YYYY\">\n                    {row.createdAt}\n                  </Moment>\n                  <Moment format=\"hh:mma\">{row.createdAt}</Moment>\n                </>\n              )}\n            </td>\n            <td>{arr[i - 1]?.rec_id !== row.rec_id && row.no}</td>\n            <td>{arr[i - 1]?.rec_id !== row.rec_id && row.type}</td>\n            <td>{row.accountName}</td>\n            <td className=\"text-right\">\n              {row.outward ? row.outward.toFixed(2) : null}\n            </td>\n            <td className=\"text-right\">\n              {row.inward ? row.inward.toFixed(2) : null}\n            </td>\n          </tr>\n        ))}\n      </Table>\n    </div>\n  );\n};\n\nconst Ledgers = ({ account, rows }) => {\n  return (\n    <div className={s.innerContentWrapper}>\n      {rows?.length > 0 ? (\n        <>\n          <p\n            style={{ fontWeight: \"600\", fontSize: \"1.2em\" }}\n            className=\"mt-1 pl_5\"\n          >\n            {account.name}\n          </p>\n          <Table\n            className={s.vouchers}\n            columns={[\n              { label: \"Date\" },\n              { label: \"No\" },\n              { label: \"Type\" },\n              { label: \"Account Name\" },\n              { label: \"Debit\", className: \"text-right\" },\n              { label: \"Credit\", className: \"text-right\" },\n            ]}\n            tfoot={\n              <tfoot style={{ marginTop: \"0\" }}>\n                <tr className={s.footer}>\n                  <td />\n                  <td />\n                  <td />\n                  <td className=\"text-right\">Total</td>\n                  <td className=\"text-right\">\n                    {rows.reduce((p, c) => p + c.outward, 0).toFixed(2)}\n                  </td>\n                  <td className=\"text-right\">\n                    {rows.reduce((p, c) => p + c.inward, 0).toFixed(2)}\n                  </td>\n                </tr>\n              </tfoot>\n            }\n          >\n            {rows.map((row, i, arr) => {\n              return (\n                <tr key={i}>\n                  <td className=\"grid\">\n                    {row.createdAt && arr[i - 1]?.rec_id !== row.rec_id && (\n                      <>\n                        <Moment\n                          style={{ fontSize: \"14px\" }}\n                          format=\"DD MMM YYYY\"\n                        >\n                          {row.createdAt}\n                        </Moment>\n                        <Moment format=\"hh:mma\">{row.createdAt}</Moment>\n                      </>\n                    )}\n                  </td>\n                  <td>{arr[i - 1]?.rec_id !== row.rec_id && row.no}</td>\n                  <td>{arr[i - 1]?.rec_id !== row.rec_id && row.type}</td>\n                  <td className=\"grid\">\n                    {row.details?.length > 0 ? \"Details:\" : row.accountName}\n                  </td>\n                  <td className=\"text-right\">\n                    {row.debit ? row.debit.toFixed(2) : null}\n                  </td>\n                  <td className=\"text-right\">\n                    {row.credit ? row.credit.toFixed(2) : null}\n                  </td>\n                </tr>\n              );\n            })}\n          </Table>\n        </>\n      ) : account ? (\n        <p className={s.analysysPlaceholder}>\n          No records found for <strong>{account.name}</strong>.\n        </p>\n      ) : (\n        <p className={s.analysysPlaceholder}>No account has been selected.</p>\n      )}\n    </div>\n  );\n};\n\nconst Analysys = ({ account }) => {\n  const [months, setMonths] = useState([]);\n  const [data, setData] = useState([]);\n  const [calculation, setCalculation] = useState(\"sum_debit\");\n  const { get, loading } = useFetch(endpoints.accountingMonthlyAnalysys);\n  useEffect(() => {\n    if (account) {\n      setCalculation(\n        [\"Liabilities\", \"Income\"].includes(account?.name)\n          ? \"sum_credit\"\n          : \"sum_debit\"\n      );\n      get({ query: { accountId: account._id } })\n        .then(({ data }) => {\n          if (data.success) {\n            setData(data.data);\n            setMonths(data.months);\n          } else {\n            Prompt({ type: \"error\", message: data.message });\n          }\n        })\n        .catch((err) => Prompt({ type: \"error\", message: err.message }));\n    } else {\n      setData([]);\n      setMonths([]);\n    }\n  }, [account]);\n  return (\n    <div className={s.innerContentWrapper}>\n      {account ? (\n        <div>\n          <div className=\"mt-1 flex gap-2 align-center\">\n            <p\n              style={{ fontWeight: \"600\", fontSize: \"1.2em\" }}\n              className=\"pl_5\"\n            >\n              {account.name}\n            </p>\n            <div className=\"flex gap-2\">\n              <label className=\"flex align-center gap_5\">\n                <input\n                  name=\"calculation\"\n                  type=\"radio\"\n                  value=\"sum_debit\"\n                  checked={calculation === \"sum_debit\"}\n                  onChange={(e) => setCalculation(e.target.value)}\n                />\n                Sum Of Debits\n              </label>\n              <label className=\"flex align-center gap_5\">\n                <input\n                  name=\"calculation\"\n                  type=\"radio\"\n                  value=\"sum_credit\"\n                  checked={calculation === \"sum_credit\"}\n                  onChange={(e) => setCalculation(e.target.value)}\n                />\n                Sum Of Credit\n              </label>\n              <label className=\"flex align-center gap_5\">\n                <input\n                  name=\"calculation\"\n                  type=\"radio\"\n                  value=\"net\"\n                  onChange={(e) => setCalculation(e.target.value)}\n                />\n                Net\n              </label>\n              <label className=\"flex align-center gap_5\">\n                <input\n                  name=\"calculation\"\n                  type=\"radio\"\n                  value=\"balance\"\n                  onChange={(e) => setCalculation(e.target.value)}\n                />\n                Balance\n              </label>\n            </div>\n          </div>\n          <Table\n            loading={loading}\n            className={s.analysys}\n            columns={[\n              { label: account.name },\n              ...(months || []).map((item) => ({\n                label: item.label,\n                className: \"text-right\",\n              })),\n            ]}\n            tfoot={\n              <tfoot style={{ marginTop: \"0\" }}>\n                <tr\n                  className={s.footer}\n                  style={{\n                    borderTop: \"1px solid #979797\",\n                    padding: \"0 0.5rem\",\n                    paddingTop: \"1rem\",\n                  }}\n                >\n                  <td>Total</td>\n                  {(months || []).map((month, i) => (\n                    <td key={i} className=\"text-right\">\n                      {analyzeAccounts(\n                        calculation,\n                        data.reduce((prev, curr, j) => {\n                          prev.push(...curr.entries[i]);\n                          return prev;\n                        }, [])\n                      )}\n                    </td>\n                  ))}\n                </tr>\n              </tfoot>\n            }\n          >\n            {(data || []).map((row, i, arr) => {\n              return (\n                <tr key={i}>\n                  <td className=\"grid\">{row.name}</td>\n                  {(months || []).map((month, i) => (\n                    <td key={i} className=\"text-right\">\n                      {analyzeAccounts(\n                        calculation,\n                        row.entries[i],\n                        row.openingBalance\n                      )}\n                    </td>\n                  ))}\n                </tr>\n              );\n            })}\n          </Table>\n        </div>\n      ) : (\n        <p className={s.analysysPlaceholder}>No group has been selected.</p>\n      )}\n    </div>\n  );\n};\n\nconst analyzeAccounts = (calculation, entries, openingBalance = 0) => {\n  let result = null;\n  if (calculation === \"sum_debit\") {\n    result = entries.reduce((p, c) => p + c.debit, 0);\n  } else if (calculation === \"sum_credit\") {\n    result = entries.reduce((p, c) => p + c.credit, 0);\n  } else if (calculation === \"net\") {\n    result = entries.reduce((p, c) => p + c.debit - c.credit, 0);\n  } else if (calculation === \"balance\") {\n    result =\n      entries.reduce((p, c) => p + c.debit - c.credit, 0) + openingBalance;\n    // return;\n  }\n  return result.toFixed(2);\n};\n\nexport default Accounting;\n"],"names":["mainSchema","yup","name","required","parent","type","oneOf","nullable","isGroup","edit","masters","onSuccess","useState","entries","setEntries","useForm","resolver","useYup","handleSubmit","register","reset","control","setValue","setError","clearErrors","setFocus","errors","formState","useFetch","endpoints","_id","createMaster","post","updateMaster","put","loading","useEffect","values","openingStocks","length","forEach","entry","i","branch","amount","entries_0_branch","entries_0_amount","Math","random","toString","onSubmit","some","message","payload","map","then","data","success","Prompt","catch","err","className","s","label","error","options","value","item","formOptions","onChange","e","prev","target","onClick","filter","accountId","debit","credit","disabled","filters","setFilters","startDate","endDate","AccountNode","account","setAddMaster","activeGroup","activeLeaf","activeLeavs","children","setChildren","open","setOpen","getMasters","get","totalChildren","query","style","whiteSpace","height","width","border","borderRadius","pointerEvents","includes","child","Vouchers","vouchers","setVouchers","voucherTableRef","useRef","getVouchers","ref","countRecord","reduce","p","c","arr","rec_id","columns","tfoot","outward","toFixed","inward","row","fontSize","format","createdAt","no","accountName","Ledgers","rows","fontWeight","marginTop","details","Analysys","months","setMonths","setData","calculation","setCalculation","checked","borderTop","padding","paddingTop","month","analyzeAccounts","curr","j","push","openingBalance","result","setSidebarOpen","addMaster","setMasters","tab","setTab","analysysAcc","ledger","journalAcc","treeData","useMemo","accounts","accountMap","tree","buildTree","acc","marginBottom","textAlign","textWrap","color","activeTab","tabs","head","MasterForm"],"sourceRoot":""}