{"version":3,"file":"static/js/518.870181e3.chunk.js","mappings":"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","sources":["webpack://cash-app/./src/Views/Dashboard/Receipts/receipts.module.scss?e274","Views/Dashboard/Receipts/ReceiptForm.js","Views/Dashboard/Receipts/index.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"content\":\"receipts_content__z6trl\",\"receipts\":\"receipts_receipts__NH-V3\",\"addReceiptForm\":\"receipts_addReceiptForm__n7XLC\",\"receiptDetail\":\"receipts_receiptDetail__nmLry\",\"box\":\"receipts_box__vj9u4\",\"noContent\":\"receipts_noContent__fNjH0\",\"items\":\"receipts_items__Ga40U\",\"name\":\"receipts_name__sxSXf\",\"itemForm\":\"receipts_itemForm__7BZu3\",\"btns\":\"receipts_btns__z9YQE\",\"mainForm\":\"receipts_mainForm__WJKvS\",\"mainFormWrapper\":\"receipts_mainFormWrapper__Ag34X\",\"invoiceTable\":\"receipts_invoiceTable__cNmy2\",\"detail\":\"receipts_detail__juo0m\",\"label\":\"receipts_label__EIIS1\",\"viewOnly\":\"receipts_viewOnly__Pzz+e\",\"print\":\"receipts_print__mpSLr\",\"logo\":\"receipts_logo__4Dcyr\",\"taxes\":\"receipts_taxes__ujk7o\",\"totalAmount\":\"receipts_totalAmount__pmhFy\",\"word\":\"receipts_word__J2MQt\",\"digit\":\"receipts_digit__cQdkI\",\"sign\":\"receipts_sign__n8aJo\",\"signature\":\"receipts_signature__G5kL0\",\"head\":\"receipts_head__gXPc3\",\"date\":\"receipts_date__L92hv\",\"no\":\"receipts_no__Xfm-Y\",\"customer\":\"receipts_customer__Xbq4A\",\"net\":\"receipts_net__ltS8B\",\"actions\":\"receipts_actions__JRhnz\",\"itemName\":\"receipts_itemName__TXJZQ\"};","import { useState, useEffect, useContext, useRef, useCallback } from \"react\";\nimport { SiteContext } from \"SiteContext\";\nimport { useForm } from \"react-hook-form\";\nimport {\n  Input,\n  Textarea,\n  Combobox,\n  Table,\n  TableActions,\n  SearchField,\n  Select,\n  Tabs,\n  moment,\n  Moment,\n} from \"Components/elements\";\nimport { useYup, useFetch } from \"hooks\";\nimport { Prompt } from \"Components/modal\";\nimport { FaPencilAlt, FaRegTrashAlt, FaTimes, FaCheck } from \"react-icons/fa\";\nimport * as yup from \"yup\";\nimport s from \"./receipts.module.scss\";\nimport { useReactToPrint } from \"react-to-print\";\nimport { endpoints } from \"config\";\n\nimport PrintInvoice from \"./printInvoice\";\n\nconst mainSchema = yup.object({\n  date: yup.string().required(),\n  type: yup.string().required(),\n  amount: yup\n    .number()\n    .min(1, \"Enter more than 0\")\n    .required()\n    .typeError(\"Enter a valid amount\"),\n  accountId: yup.string().required(),\n  // customerName: yup.string().required(\"Customer name is a required field\"),\n  // customerDetail: yup.string().required(\"Customer detail is a required field\"),\n});\n\nconst itemSchema = yup.object({\n  no: yup.string().required(),\n  amount: yup\n    .number()\n    .min(0, \"Price can not be less than 0\")\n    .required()\n    .typeError(\"Enter a valid Number\"),\n  net: yup.number(),\n  due: yup.number(),\n});\n\nconst Detail = ({ label, value, className }) => {\n  return (\n    <p className={`${s.detail} ${className || \"\"}`}>\n      <span className={s.label}>{label}:</span>{\" \"}\n      <span className={s.value}>{value}</span>\n    </p>\n  );\n};\n\nconst Form = ({ edit, receipts, onSuccess }) => {\n  const { user, config, checkPermission } = useContext(SiteContext);\n  const [viewOnly, setViewOnly] = useState(!!edit);\n  const [items, setItems] = useState(edit?.invoices || []);\n  const [err, setErr] = useState(null);\n  const printRef = useRef();\n  const handlePrint = useReactToPrint({ content: () => printRef.current });\n\n  const [invoices, setInvoices] = useState([]);\n\n  const { get: getInvoices } = useFetch(endpoints.invoices);\n\n  useEffect(() => {\n    getInvoices().then(({ data }) => {\n      if (data?.success) {\n        setInvoices(\n          data.data.map((item) => ({\n            ...item,\n            due: item.due.fix(2),\n            net:\n              item.items.reduce((p, c) => p + c.qty * c.price, 0) +\n              item.items\n                .reduce((p, c) => p + c.qty * c.price, 0)\n                .percent(item.gst),\n          }))\n        );\n      }\n    });\n  }, []);\n\n  return (\n    <div\n      className={`grid gap-1 p-1 ${s.addReceiptForm} ${\n        viewOnly ? s.viewOnly : \"\"\n      }`}\n    >\n      {viewOnly && (\n        <div className={`flex wrap gap-1 ${s.receiptDetail}`}>\n          <div className=\"flex gap-1 all-columns justify-end align-center\">\n            {checkPermission(\"receipt_update\") && (\n              <button className=\"btn\" onClick={() => setViewOnly(false)}>\n                Edit\n              </button>\n            )}\n            {\n              //   <button className=\"btn\" onClick={handlePrint}>\n              //   Print\n              // </button>\n            }\n          </div>\n          <div className={s.box}>\n            <h3>Customer Information</h3>\n            <Detail label=\"Name\" value={edit.customer?.name} />\n            <Detail\n              label=\"Detail\"\n              value={\n                edit.customer?.detail?.split(\"\\n\").map((line, i, arr) => (\n                  <span key={i}>\n                    {line}\n                    {arr[i + 1] && <br />}\n                  </span>\n                )) || null\n              }\n            />\n          </div>\n          <div className={s.box}>\n            <h3>Receipt Information</h3>\n            <Detail\n              label=\"Inv No\"\n              value={`${edit.no}${config?.print?.receiptNoSuffix || \"\"}`}\n            />\n            <Detail label=\"Date\" value={moment(edit?.date, \"DD-MM-YYYY\")} />\n            <Detail\n              label=\"Amount\"\n              value={edit.amount.fix(2, config?.numberSeparator)}\n              className=\"flex justify-space-between\"\n            />\n            <Detail\n              label=\"Adjusted\"\n              value={edit.invoices\n                .reduce((p, c) => p + c.amount, 0)\n                .fix(2, config?.numberSeparator)}\n              className=\"flex justify-space-between\"\n            />\n          </div>\n        </div>\n      )}\n\n      {err && <p className=\"error\">{err}</p>}\n\n      {false && edit && (\n        <div style={{ display: \"none\" }}>\n          <PrintInvoice ref={printRef} receipt={edit} user={user} />\n        </div>\n      )}\n\n      {!viewOnly && (\n        <>\n          <h3>Receipt Information</h3>\n\n          <MainForm\n            invoices={\n              invoices\n              //   .filter(\n              //   (inv) => !items.some((item) => item.no === inv.no)\n              // )\n            }\n            edit={edit}\n            items={items}\n            setItems={setItems}\n            receipts={receipts}\n            setErr={setErr}\n            onSuccess={onSuccess}\n            setViewOnly={setViewOnly}\n          />\n        </>\n      )}\n    </div>\n  );\n};\n\nconst ItemForm = ({ edit, setEdit, receipts, invoices, onSuccess }) => {\n  const { config } = useContext(SiteContext);\n  const {\n    handleSubmit,\n    register,\n    reset,\n    watch,\n    setValue,\n    clearErrors,\n    control,\n    formState: { errors },\n  } = useForm({\n    defaultValues: {\n      unit: \"Piece\",\n    },\n    resolver: useYup(itemSchema),\n  });\n\n  useEffect(() => {\n    reset({ ...edit });\n  }, [edit]);\n  return (\n    <form\n      onSubmit={handleSubmit((values) => {\n        if (!edit) {\n          values._id = Math.random().toString().substr(-8);\n        }\n        if (values.amount > values.due) {\n          return Prompt({\n            type: \"error\",\n            message: `Enter an amount less or equal to ${values.due}`,\n          });\n        }\n        values.no = +values.no;\n        onSuccess(values);\n        reset();\n      })}\n      className={`${s.itemForm} grid gap-1`}\n    >\n      <Select\n        control={control}\n        label=\"Invoice No.\"\n        options={invoices\n          .filter((item) => item.due)\n          .map((item) => ({\n            label: `${item.no}. ${moment(item.dateTime, \"DD-MM-YY\")} Due: ${\n              item.due\n            }`,\n            value: item.no,\n            data: item,\n          }))}\n        name=\"no\"\n        formOptions={{ required: true }}\n        onChange={(item) => {\n          if (typeof item === \"string\") {\n          } else {\n            setValue(\"no\", item.data.no);\n            setValue(\"due\", item.data.due);\n            setValue(\"net\", item.data.net);\n          }\n        }}\n        type=\"number\"\n        className={s.itemName}\n      />\n\n      <Input label=\"Net\" type=\"number\" {...register(\"net\")} readOnly />\n      <Input label=\"Due\" type=\"number\" {...register(\"due\")} readOnly />\n\n      <Input\n        label=\"Amount\"\n        type=\"number\"\n        step=\"0.01\"\n        required\n        {...register(\"amount\")}\n        error={errors.amount}\n      />\n\n      {edit ? (\n        <div className={`flex ${s.btns}`}>\n          <button type=\"submit\">\n            <FaCheck />\n          </button>\n          <button type=\"button\" onClick={() => setEdit(null)}>\n            <FaTimes />\n          </button>\n        </div>\n      ) : (\n        <button className=\"btn\">{edit ? \"Update\" : \"Add\"}</button>\n      )}\n    </form>\n  );\n};\n\nconst MainForm = ({\n  invoices,\n  edit,\n  items,\n  setItems,\n  receipts,\n  setErr,\n  onSuccess,\n  setViewOnly,\n}) => {\n  const { config, setConfig } = useContext(SiteContext);\n  const [adjustInvoice, setAdjustInvoice] = useState(!!edit?.invoices?.length);\n  const [editItem, setEditItem] = useState(null);\n  const [adjustInvoiceTab, setAdjustInvoiceTab] = useState(\"table\");\n  const {\n    handleSubmit,\n    register,\n    reset,\n    setValue,\n    watch,\n    control,\n    formState: { errors },\n  } = useForm({\n    resolver: useYup(mainSchema),\n  });\n\n  const {\n    post: saveInvoice,\n    put: updateInvoice,\n    loading,\n  } = useFetch(endpoints.receipts + `/${edit?._id || \"\"}`);\n\n  const type = watch(\"type\");\n\n  const submitForm = useCallback(\n    (values) => {\n      if (items.length > 0) {\n        const totalNet = items.reduce((p, c) => p + c.net, 0);\n        const totalAmount = items.reduce((p, c) => p + c.amount, 0);\n        const totalDue = items.reduce((p, c) => p + c.due, 0);\n        if (totalAmount > values.amount) {\n          return Prompt({\n            type: \"error\",\n            message: `Adjusted amount (${totalAmount}) can not be more than the receipt amount.`,\n          });\n        }\n        // if (totalAmount < values.amount) {\n        //   return Prompt({\n        //     type: \"error\",\n        //     message: `Please add another invoice or reduce the receipt amount. Total adjusted amount ${totalAmount}`,\n        //   });\n        // }\n        // if (values.amount > totalDue) {\n        //   return Prompt({\n        //     type: \"error\",\n        //     message: `Amount must be less or equal to ${totalDue}. Please reduce the amount or add another invoice.`,\n        //   });\n        // }\n      }\n      (edit ? updateInvoice : saveInvoice)({\n        dateTime: values.date,\n        amount: values.amount,\n        type: values.type,\n        accountId: values.accountId,\n        accountName: values.accountName,\n        // customer: {\n        //   name: values.customerName,\n        //   detail: values.customerDetail,\n        // },\n        invoices: items.map((item) => ({ ...item, _id: undefined })),\n      })\n        .then(({ data }) => {\n          if (!data.success) {\n            return Prompt({ type: \"error\", message: data.message });\n          }\n          onSuccess(data.data);\n        })\n        .catch((err) => Prompt({ type: \"error\", message: err.message }));\n    },\n    [items]\n  );\n\n  const customerName = watch(\"customerName\");\n\n  useEffect(() => {\n    reset({\n      ...edit,\n      date: moment(edit?.date, \"YYYY-MM-DD\"),\n      customerName: edit?.customer?.name || \"\",\n      customerDetail: edit?.customer?.detail || \"\",\n    });\n  }, [edit]);\n  return (\n    <div className={`${s.mainForm} grid gap-1`}>\n      <form\n        className={`${s.mainFormWrapper} grid gap-1 all-columns`}\n        onSubmit={handleSubmit(submitForm)}\n      >\n        <Input\n          label=\"Date\"\n          type=\"date\"\n          {...register(\"date\")}\n          required\n          error={errors.date}\n        />\n\n        <Combobox\n          label=\"Type\"\n          name=\"type\"\n          control={control}\n          formOptions={{ required: true }}\n          options={[\n            { label: \"Cash\", value: \"Cash\" },\n            { label: \"Bank Transfer\", value: \"Bank Transfer\" },\n            { label: \"Customers\", value: \"Customers\" },\n            { label: \"Suppliers\", value: \"Suppliers\" },\n            { label: \"Sales\", value: \"Sales\" },\n            { label: \"Purchase\", value: \"Purchase\" },\n            { label: \"Stock\", value: \"Stock\" },\n          ]}\n          onChange={() => {\n            setValue(\"accountId\", \"\");\n            setValue(\"accountName\", \"\");\n          }}\n        />\n\n        <Input\n          label=\"Amount\"\n          type=\"number\"\n          step=\"0.01\"\n          required\n          {...register(\"amount\")}\n          error={errors.amount}\n        />\n\n        <div className=\"all-columns\">\n          <h3>Account Information</h3>\n        </div>\n\n        <Select\n          label=\"Account\"\n          control={control}\n          name=\"accountId\"\n          formOptions={{ required: true }}\n          url={endpoints.accountingMasters}\n          getQuery={(v) => ({\n            ...(type && { type }),\n            isGroup: \"false\",\n            name: v,\n          })}\n          handleData={(data) => ({\n            label: `${data.name}${data.type ? ` - ${data.type}` : \"\"}`,\n            value: data._id,\n            account: data,\n          })}\n          onChange={(opt) => {\n            setValue(\"accountName\", opt.account?.name);\n          }}\n        />\n\n        {/* <Textarea label=\"Detail\" readOnly {...register(\"customerDetail\")} /> */}\n      </form>\n\n      <div className=\"all-columns flex justify-center\">\n        <button\n          className=\"btn\"\n          onClick={() => {\n            setAdjustInvoice(!adjustInvoice);\n            setItems([]);\n          }}\n        >\n          {adjustInvoice ? \"Clear\" : \"Adjust\"} Invoices\n        </button>\n      </div>\n\n      {adjustInvoice && (\n        <>\n          <h3>Adjusted Invoices</h3>\n          <Tabs\n            secondary\n            activeTab={adjustInvoiceTab}\n            onChange={(tab) => setAdjustInvoiceTab(tab.value)}\n            tabs={[\n              {\n                label: \"Invoice Table\",\n                value: \"table\",\n              },\n              {\n                label: \"Search Invoice\",\n                value: \"search\",\n              },\n            ]}\n          />\n        </>\n      )}\n\n      {adjustInvoice &&\n        adjustInvoiceTab === \"table\" &&\n        (invoices.filter(\n          (invoice) =>\n            invoice.customer.name === customerName &&\n            (items.some((item) => item.no === invoice.no) || invoice.due)\n        ).length > 0 ? (\n          <Table\n            className={s.invoiceTable}\n            columns={[\n              { label: \"Invoice No\" },\n              { label: \"Date\" },\n              { label: \"Customer\" },\n              { label: \"Net\", className: \"text-right\" },\n              { label: \"Due\", className: \"text-right\" },\n              { label: \"Adjust\" },\n            ]}\n          >\n            {invoices\n              .filter(\n                (invoice) =>\n                  invoice.customer.name === customerName &&\n                  (items.some((item) => item.no === invoice.no) || invoice.due)\n              )\n              .map((invoice) => (\n                <SingleInvoiceAdjustTr\n                  invoice={invoice}\n                  key={invoice._id}\n                  config={config}\n                  items={items}\n                  setItems={setItems}\n                />\n              ))}\n          </Table>\n        ) : (\n          <p className={s.noContent}>\n            No pending invoice from selected customer.\n          </p>\n        ))}\n\n      {adjustInvoice && adjustInvoiceTab === \"search\" && (\n        <>\n          <ItemForm\n            invoices={invoices.filter(\n              (item) => item.customer.name === customerName\n            )}\n            key={editItem ? \"edit\" : \"add\"}\n            edit={editItem}\n            setEdit={setEditItem}\n            receipts={receipts}\n            onSuccess={(newItem) => {\n              setErr(null);\n              if (editItem) {\n                setItems((prev) =>\n                  prev.map((item) =>\n                    item._id === newItem._id ? newItem : item\n                  )\n                );\n                setEditItem(null);\n              } else {\n                if (\n                  items.some(\n                    (item) => item.no.toString() === newItem.no.toString()\n                  )\n                ) {\n                  return Prompt({\n                    type: \"error\",\n                    message: \"Invoice has already been added.\",\n                  });\n                }\n                setItems((prev) => [...prev, newItem]);\n              }\n            }}\n          />\n          {items.length > 0 ? (\n            <Table\n              className={s.items}\n              columns={[\n                { label: \"Invoice No.\" },\n                // { label: \"Net\", className: \"text-right\" },\n                // { label: \"Due\", className: \"text-right\" },\n                { label: \"Amount\", className: \"text-right\" },\n                { label: \"Action\", action: true },\n              ]}\n            >\n              {items.map((item, i) => (\n                <tr key={i}>\n                  <td className={s.name}>\n                    <span className=\"ellipsis\">{item.no}</span>\n                  </td>\n                  {\n                    //   <td className=\"text-right\">\n                    //   {item.net?.fix(2, config?.numberSeparator)}\n                    // </td>\n                    // <td className=\"text-right\">\n                    //   {item.due?.fix(2, config?.numberSeparator)}\n                    // </td>\n                  }\n                  <td className=\"text-right\">\n                    {item.amount.fix(2, config?.numberSeparator)}\n                  </td>\n                  <TableActions\n                    actions={[\n                      {\n                        icon: <FaPencilAlt />,\n                        label: \"Edit\",\n                        onClick: () => setEditItem(item),\n                      },\n                      {\n                        icon: <FaRegTrashAlt />,\n                        label: \"Delete\",\n                        onClick: () =>\n                          Prompt({\n                            type: \"confirmation\",\n                            message: `Are you sure you want to remove this Item?`,\n                            callback: () => {\n                              setItems((prev) =>\n                                prev.filter(\n                                  (product) => product._id !== item._id\n                                )\n                              );\n                            },\n                          }),\n                      },\n                    ]}\n                  />\n                </tr>\n              ))}\n            </Table>\n          ) : (\n            <p className={s.noContent}>No invoices selected.</p>\n          )}\n        </>\n      )}\n\n      <form\n        className={`${s.btnsWrapper} grid gap-1 all-columns`}\n        onSubmit={handleSubmit(submitForm)}\n      >\n        <div className=\"btns\">\n          <button className=\"btn\" disabled={editItem || loading}>\n            {edit ? \"Update\" : \"Submit\"}\n          </button>\n        </div>\n      </form>\n    </div>\n  );\n};\n\nconst SingleInvoiceAdjustTr = ({ invoice, items, setItems, config }) => {\n  const [adjust, setAdjust] = useState(\n    items.find((item) => item.no === invoice.no)?.amount || \"\"\n  );\n  useEffect(() => {\n    setAdjust(items.find((item) => item.no === invoice.no)?.amount || \"\");\n  }, [items]);\n  return (\n    <tr>\n      <td>\n        {invoice.no}\n        {config?.print?.invoiceNoSuffix || \"\"}\n      </td>\n      <td className={s.date}>\n        <Moment format=\"DD/MM/YYYY\">{invoice.date}</Moment>\n      </td>\n      <td className={s.customer}>{invoice.customer?.name}</td>\n      <td className={`text-right ${s.net}`}>\n        {invoice.net.fix(2, config?.numberSeparator)}\n      </td>\n      <td className={`text-right ${s.net}`}>\n        {invoice.due.fix(2, config?.numberSeparator)}\n      </td>\n      <td>\n        <Input\n          placeholder=\"Adjust\"\n          type=\"number\"\n          onBlur={(e) => {\n            const value = +e.target.value || 0;\n            if (value <= 0) {\n              e.target.value = \"\";\n              setItems((prev) => [\n                ...prev.filter((item) => item.no !== invoice.no),\n              ]);\n              return;\n            }\n            if (invoice.due) {\n              setItems((prev) => [\n                ...prev.filter((item) => item.no !== invoice.no),\n                {\n                  _id: Math.random().toString().substr(-8),\n                  no: invoice.no,\n                  due: invoice.due,\n                  net: invoice.net,\n                  amount: Math.min(value, invoice.due),\n                },\n              ]);\n            }\n          }}\n          value={adjust}\n          onChange={(e) => setAdjust(e.target.value)}\n        />\n      </td>\n    </tr>\n  );\n};\n\nexport default Form;\n","import { useState, useEffect, useContext } from \"react\";\nimport { SiteContext } from \"SiteContext\";\nimport { Table, TableActions, Moment } from \"Components/elements\";\nimport { FaRegEye, FaRegTrashAlt } from \"react-icons/fa\";\nimport { Prompt, Modal } from \"Components/modal\";\nimport s from \"./receipts.module.scss\";\nimport { useFetch } from \"hooks\";\nimport { endpoints } from \"config\";\n\nimport ReceiptForm from \"./ReceiptForm\";\nimport { BsList } from \"react-icons/bs\";\nimport { GoPlus } from \"react-icons/go\";\n\nconst Receipts = ({ setSidebarOpen }) => {\n  const { config, checkPermission } = useContext(SiteContext);\n  const [receipts, setReceipts] = useState([]);\n  const [receipt, setReceipt] = useState(null);\n  const [addReceipt, setAddReceipt] = useState(false);\n\n  const { get: getReceipts, loading } = useFetch(endpoints.receipts);\n  const { remove: deleteReceipt } = useFetch(endpoints.receipts + \"/{ID}\");\n\n  useEffect(() => {\n    getReceipts()\n      .then(({ data }) => {\n        if (data.success) {\n          return setReceipts(data.data);\n        }\n      })\n      .catch((err) => Prompt({ type: \"error\", message: err.message }));\n  }, []);\n  return (\n    <div className={`${s.content} grid gap-1 m-a p-1`}>\n      <div className={`flex ${s.head}`}>\n        <div\n          className={`flex align-center pointer gap_5  ml-1`}\n          onClick={() => setSidebarOpen((prev) => !prev)}\n        >\n          <BsList style={{ fontSize: \"1.75rem\" }} />\n          <h2>All Receipts</h2>\n          {checkPermission(\"reciept_create\") && (\n            <button\n              className=\"btn clear iconOnly\"\n              onClick={(e) => {\n                e.stopPropagation();\n                setAddReceipt(true);\n              }}\n            >\n              <GoPlus />\n            </button>\n          )}\n        </div>\n      </div>\n      <Table\n        loading={loading}\n        className={s.receipts}\n        columns={[\n          { label: \"No.\" },\n          { label: \"Date\" },\n          { label: \"Account\" },\n          { label: \"Amount\", className: \"text-right\" },\n          { label: \"Action\" },\n        ]}\n      >\n        {receipts.map((item) => (\n          <tr\n            onClick={() => {\n              setReceipt(item);\n              setAddReceipt(true);\n            }}\n            style={{ cursor: \"pointer\" }}\n            key={item._id}\n          >\n            <td className={s.no}>\n              {item.no}\n              {config?.print?.receiptNoSuffix || \"\"}\n            </td>\n            <td className={s.date}>\n              <Moment format=\"DD/MM/YYYY\">{item.date}</Moment>\n            </td>\n            <td className={s.customer}>\n              {item.accountingEntries?.[0]?.accountName}\n            </td>\n            <td className={`text-right ${s.net}`}>\n              {item.amount.fix(2, config?.numberSeparator)}\n            </td>\n            <TableActions\n              className={s.actions}\n              actions={[\n                {\n                  icon: <FaRegEye />,\n                  label: \"View\",\n                  onClick: () => {\n                    setReceipt(item);\n                    setAddReceipt(true);\n                  },\n                },\n                ...(checkPermission(\"reciept_delete\")\n                  ? [\n                      {\n                        icon: <FaRegTrashAlt />,\n                        label: \"Delete\",\n                        onClick: () =>\n                          Prompt({\n                            type: \"confirmation\",\n                            message: `Are you sure you want to remove this receipt?`,\n                            callback: () => {\n                              deleteReceipt(\n                                {},\n                                { params: { \"{ID}\": item._id } }\n                              ).then(({ data }) => {\n                                if (data.success) {\n                                  setReceipts((prev) =>\n                                    prev.filter(\n                                      (receipt) => receipt._id !== item._id\n                                    )\n                                  );\n                                } else {\n                                  Prompt({\n                                    type: \"error\",\n                                    message: data.message,\n                                  });\n                                }\n                              });\n                            },\n                          }),\n                      },\n                    ]\n                  : []),\n              ]}\n            />\n          </tr>\n        ))}\n      </Table>\n      <Modal\n        open={addReceipt}\n        head\n        label={`${receipt ? \"View / Update\" : \"Add\"} Receipt`}\n        className={s.addReceiptFormModal}\n        setOpen={() => {\n          setReceipt(null);\n          setAddReceipt(false);\n        }}\n      >\n        <ReceiptForm\n          edit={receipt}\n          receipts={receipts}\n          onSuccess={(newReceipt) => {\n            if (receipt) {\n              setReceipts((prev) =>\n                prev.map((item) =>\n                  item._id === newReceipt._id ? newReceipt : item\n                )\n              );\n              setReceipt(null);\n            } else {\n              setReceipts((prev) => [...prev, newReceipt]);\n            }\n            setAddReceipt(false);\n          }}\n        />\n      </Modal>\n    </div>\n  );\n};\n\nexport default Receipts;\n"],"names":["mainSchema","yup","date","required","type","amount","min","typeError","accountId","itemSchema","no","net","due","Detail","label","value","className","s","ItemForm","edit","setEdit","invoices","receipts","onSuccess","useContext","SiteContext","config","useForm","defaultValues","unit","resolver","useYup","handleSubmit","register","reset","setValue","watch","control","clearErrors","errors","formState","useEffect","onSubmit","values","_id","Math","random","toString","substr","Prompt","message","options","filter","item","map","moment","dateTime","data","name","formOptions","onChange","readOnly","step","error","onClick","MainForm","items","setItems","setErr","setViewOnly","setConfig","useState","length","adjustInvoice","setAdjustInvoice","editItem","setEditItem","adjustInvoiceTab","setAdjustInvoiceTab","useFetch","endpoints","saveInvoice","post","updateInvoice","put","loading","submitForm","useCallback","reduce","p","c","totalAmount","accountName","undefined","then","success","catch","err","customerName","customer","customerDetail","detail","url","getQuery","v","isGroup","handleData","account","opt","secondary","activeTab","tab","tabs","invoice","some","columns","SingleInvoiceAdjustTr","newItem","prev","action","i","fix","numberSeparator","actions","icon","callback","product","disabled","find","adjust","setAdjust","print","invoiceNoSuffix","format","placeholder","onBlur","e","target","user","checkPermission","viewOnly","printRef","useRef","useReactToPrint","content","current","setInvoices","getInvoices","get","qty","price","percent","gst","split","line","arr","receiptNoSuffix","setSidebarOpen","setReceipts","receipt","setReceipt","addReceipt","setAddReceipt","getReceipts","deleteReceipt","remove","style","fontSize","stopPropagation","cursor","accountingEntries","params","open","head","setOpen","ReceiptForm","newReceipt"],"sourceRoot":""}