{"version":3,"file":"static/js/632.9d1e0714.chunk.js","mappings":"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","sources":["webpack://cash-app/./src/Views/Dashboard/Reports/receipts.module.scss?df30","Views/Dashboard/Reports/ReceiptForm.js","Views/Dashboard/Reports/index.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"content\":\"receipts_content__Nsv9h\",\"addReceiptFormModal\":\"receipts_addReceiptFormModal__MtncI\",\"addReceiptForm\":\"receipts_addReceiptForm__Fvy25\",\"receiptDetail\":\"receipts_receiptDetail__slala\",\"box\":\"receipts_box__oBPA4\",\"noContent\":\"receipts_noContent__GMZ1g\",\"items\":\"receipts_items__EnQpt\",\"name\":\"receipts_name__Tcp8z\",\"itemForm\":\"receipts_itemForm__tAUhW\",\"btns\":\"receipts_btns__Mxtf+\",\"mainForm\":\"receipts_mainForm__nEpGD\",\"mainFormWrapper\":\"receipts_mainFormWrapper__moqpy\",\"invoiceTable\":\"receipts_invoiceTable__VyN7g\",\"detail\":\"receipts_detail__vGCFS\",\"label\":\"receipts_label__5dxMC\",\"viewOnly\":\"receipts_viewOnly__BzXKX\",\"print\":\"receipts_print__Ex8NP\",\"logo\":\"receipts_logo__P0qXY\",\"taxes\":\"receipts_taxes__7ZQto\",\"totalAmount\":\"receipts_totalAmount__R1ZmO\",\"word\":\"receipts_word__3bYZw\",\"digit\":\"receipts_digit__4rlKt\",\"sign\":\"receipts_sign__xQiBr\",\"signature\":\"receipts_signature__imq6x\",\"head\":\"receipts_head__D3Krr\",\"receipts\":\"receipts_receipts__lcH0o\",\"date\":\"receipts_date__Ckxpq\",\"no\":\"receipts_no__eSq2J\",\"customer\":\"receipts_customer__YT5-l\",\"net\":\"receipts_net__66aZx\",\"actions\":\"receipts_actions__-tIac\",\"itemName\":\"receipts_itemName__mtbrx\"};","import { useState, useEffect, useRef } from \"react\";\nimport { Input, moment, Moment, Table } from \"Components/elements\";\nimport { useFetch } from \"hooks\";\nimport s from \"./receipts.module.scss\";\nimport { useReactToPrint } from \"react-to-print\";\nimport { endpoints } from \"config\";\n\nimport PrintInvoice from \"./printInvoice\";\nimport { useForm } from \"react-hook-form\";\nimport { BsX } from \"react-icons/bs\";\n\nexport default function Report({ report: { _id } }) {\n  const { register, watch, setValue } = useForm();\n  const printRef = useRef();\n  const handlePrint = useReactToPrint({ content: () => printRef.current });\n\n  const [report, setReport] = useState({});\n\n  const { get: genReport, loading } = useFetch(\n    endpoints.generateReport + `/${_id}`\n  );\n\n  const startDate = watch(\"startDate\");\n  const endDate = watch(\"endDate\");\n\n  useEffect(() => {\n    const query = {};\n    if (startDate && endDate) {\n      query.startDate = startDate;\n      query.endDate = endDate;\n    }\n    genReport({ query }).then(({ data }) => {\n      if (data?.success) {\n        setReport(data.data);\n      }\n    });\n  }, [startDate, endDate]);\n\n  return (\n    <div className={`grid gap-1 p-1 ${s.addReceiptForm}`}>\n      <div className={`grid wrap gap-1 ${s.receiptDetail}`}>\n        {/* <div className=\"flex gap-1 all-columns justify-end align-center\">\n          <button className=\"btn\" onClick={handlePrint}>\n            Print\n          </button>\n        </div> */}\n        <div>\n          <div className=\"flex gap-1 align-center\">\n            <h2>{report.name}</h2>\n            <div className=\"flex gap-1 m-a mr-0 align-end\">\n              <Input\n                label=\"Start Date\"\n                type=\"date\"\n                {...register(\"startDate\")}\n              />\n              <Input label=\"End Date\" type=\"date\" {...register(\"endDate\")} />\n              <button\n                className=\"btn clear iconOnly\"\n                onClick={() => {\n                  setValue(\"startDate\", \"\");\n                  setValue(\"endDate\", \"\");\n                }}\n              >\n                <BsX />\n              </button>\n            </div>\n          </div>\n          <Table\n            loading={loading}\n            className={s.receipts}\n            columns={report.columns?.map((col) => ({ label: col.label }))}\n          >\n            {report.records?.map((rec, i) => {\n              return (\n                <tr key={i}>\n                  {report.columns.map((col, i) => {\n                    let data = rec[col.label];\n                    if (Array.isArray(data)) {\n                      data = data.length;\n                    } else if (data === null) {\n                      data = (\n                        <span>\n                          <i>NULL</i>\n                        </span>\n                      );\n                    } else if (typeof data === \"object\") {\n                      data = JSON.stringify(data);\n                    } else if (data && col.dataType === \"date\") {\n                      data = <Moment format=\"DD MMM YY hh:mma\">{data}</Moment>;\n                    } else if (!data) {\n                      data = \"--\";\n                    }\n                    return <td key={i}>{data}</td>;\n                  })}\n                </tr>\n              );\n            })}\n          </Table>\n        </div>\n      </div>\n    </div>\n  );\n}\n","import { useState, useEffect } from \"react\";\nimport { Table } from \"Components/elements\";\nimport { Prompt, Modal } from \"Components/modal\";\nimport s from \"./receipts.module.scss\";\nimport { useFetch } from \"hooks\";\nimport { endpoints } from \"config\";\n\nimport ReceiptForm from \"./ReceiptForm\";\nimport { BsList } from \"react-icons/bs\";\n\nconst Receipts = ({ setSidebarOpen }) => {\n  const [receipts, setReceipts] = useState([]);\n  const [report, setReport] = useState(null);\n  const [addReceipt, setAddReceipt] = useState(false);\n\n  const { get: getReceipts, loading } = useFetch(endpoints.reports);\n\n  useEffect(() => {\n    getReceipts()\n      .then(({ data }) => {\n        if (data.success) {\n          return setReceipts(data.data);\n        }\n      })\n      .catch((err) => Prompt({ type: \"error\", message: err.message }));\n  }, []);\n  return (\n    <div className={`${s.content} grid gap-1 m-a p-1`}>\n      <div className={`flex ${s.head}`}>\n        <div\n          className={`flex align-center pointer gap_5  ml-1`}\n          onClick={() => setSidebarOpen((prev) => !prev)}\n        >\n          <BsList style={{ fontSize: \"1.75rem\" }} />\n          <h2>Reports</h2>\n        </div>\n      </div>\n      <Table\n        loading={loading}\n        className={s.receipts}\n        columns={[\n          { label: \"Name\" },\n          // { label: \"Action\" }\n        ]}\n      >\n        {receipts.map((item) => (\n          <tr\n            style={{ cursor: \"pointer\" }}\n            key={item._id}\n            onClick={() => {\n              setReport(item);\n              setAddReceipt(true);\n            }}\n          >\n            <td>{item.name}</td>\n            {/* <TableActions\n              className={s.actions}\n              actions={[\n                {\n                  icon: <FaRegEye />,\n                  label: \"View\",\n                  onClick: () => {\n                    setReport(item);\n                    setAddReceipt(true);\n                  },\n                },\n              ]}\n            /> */}\n          </tr>\n        ))}\n      </Table>\n      <Modal\n        open={addReceipt}\n        head\n        label={`Report`}\n        className={s.addReceiptFormModal}\n        setOpen={() => {\n          setReport(null);\n          setAddReceipt(false);\n        }}\n      >\n        <ReceiptForm\n          report={report}\n          onSuccess={(newReceipt) => {\n            if (report) {\n              setReceipts((prev) =>\n                prev.map((item) =>\n                  item._id === newReceipt._id ? newReceipt : item\n                )\n              );\n              setReport(null);\n            } else {\n              setReceipts((prev) => [...prev, newReceipt]);\n            }\n            setAddReceipt(false);\n          }}\n        />\n      </Modal>\n    </div>\n  );\n};\n\nexport default Receipts;\n"],"names":["Report","_id","report","useForm","register","watch","setValue","printRef","useRef","useReactToPrint","content","current","useState","setReport","useFetch","endpoints","genReport","get","loading","startDate","endDate","useEffect","query","then","data","success","className","s","name","label","type","onClick","columns","map","col","records","rec","i","Array","isArray","length","JSON","stringify","dataType","format","setSidebarOpen","receipts","setReceipts","addReceipt","setAddReceipt","getReceipts","catch","err","Prompt","message","prev","style","fontSize","item","cursor","open","head","setOpen","onSuccess","newReceipt"],"sourceRoot":""}