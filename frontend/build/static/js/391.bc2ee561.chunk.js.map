{"version":3,"file":"static/js/391.bc2ee561.chunk.js","mappings":"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","sources":["webpack://cash-app/./src/Views/Dashboard/Employees/emps.module.scss?47a5","Views/Dashboard/Employees/EmpForm.js","Views/Dashboard/Employees/index.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"content\":\"emps_content__hAOtQ\",\"emps\":\"emps_emps__pXTP3\",\"addEmpForm\":\"emps_addEmpForm__cV7E0\",\"empDetail\":\"emps_empDetail__4rTsv\",\"box\":\"emps_box__3ohaf\",\"mainForm\":\"emps_mainForm__0sQ-G\",\"head\":\"emps_head__LiatF\"};","import { useEffect } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { Select } from \"Components/elements\";\nimport { useYup, useFetch } from \"hooks\";\nimport { Prompt } from \"Components/modal\";\nimport * as yup from \"yup\";\nimport s from \"./emps.module.scss\";\nimport { endpoints } from \"config\";\n\nconst mainSchema = yup.object({\n  employee: yup.string().required(),\n  roles: yup.array().of(yup.string()),\n});\n\nconst Form = ({ edit, onSuccess }) => {\n  const { handleSubmit, reset, control } = useForm({\n    resolver: useYup(mainSchema),\n  });\n\n  const { put: updateEmp, loading } = useFetch(endpoints.employees);\n\n  useEffect(() => {\n    reset({\n      employee: edit?._id || \"\",\n      roles: edit?.roles?.map((item) => item._id) || [],\n    });\n  }, [edit]);\n  return (\n    <div className={`grid gap-1 p-1 ${s.addEmpForm}`}>\n      <form\n        onSubmit={handleSubmit((values) => {\n          updateEmp(values)\n            .then(({ data }) => {\n              if (!data.success) {\n                return Prompt({ type: \"error\", message: data.message });\n              }\n              onSuccess(data.data);\n            })\n            .catch((err) => Prompt({ type: \"error\", message: err.message }));\n        })}\n        className={`${s.mainForm} grid gap-1`}\n      >\n        <Select\n          disabled={edit?._id}\n          control={control}\n          label=\"Staff\"\n          url={endpoints.staffs}\n          getQuery={(inputValue, selected) => ({\n            ...(inputValue && { name: inputValue }),\n            ...(selected && { _id: selected }),\n          })}\n          handleData={(item) => ({\n            label: item.name,\n            value: item._id,\n          })}\n          name=\"employee\"\n          formOptions={{ required: true }}\n        />\n\n        <Select\n          control={control}\n          label=\"Role\"\n          url={endpoints.roles}\n          getQuery={(inputValue, selected) => ({\n            ...(inputValue && { name: inputValue }),\n            ...(selected && { _id: selected }),\n          })}\n          handleData={(item) => ({\n            label: item.name,\n            value: item._id,\n          })}\n          multiple\n          name=\"roles\"\n          formOptions={{ required: true }}\n        />\n\n        <div className=\"btns\">\n          <button className=\"btn\" disabled={loading}>\n            {edit ? \"Update\" : \"Submit\"}\n          </button>\n        </div>\n      </form>\n    </div>\n  );\n};\n\nexport default Form;\n","import { useState, useEffect, useContext } from \"react\";\nimport { Table, TableActions } from \"Components/elements\";\nimport { FaPencilAlt } from \"react-icons/fa\";\nimport { Prompt, Modal } from \"Components/modal\";\nimport s from \"./emps.module.scss\";\nimport { useFetch } from \"hooks\";\nimport { endpoints } from \"config\";\n\nimport EmpForm from \"./EmpForm\";\nimport { SiteContext } from \"SiteContext\";\nimport { BsList } from \"react-icons/bs\";\nimport { GoPlus } from \"react-icons/go\";\n\nconst Emps = ({ setSidebarOpen }) => {\n  const { checkPermission } = useContext(SiteContext);\n  const [emps, setEmps] = useState([]);\n  const [emp, setEmp] = useState(null);\n  const [addEmp, setAddEmp] = useState(false);\n\n  const { get: getEmps, loading } = useFetch(endpoints.employees);\n\n  useEffect(() => {\n    getEmps()\n      .then(({ data }) => {\n        if (data.success) {\n          return setEmps(data.data);\n        }\n      })\n      .catch((err) => {\n        console.log(err);\n        Prompt({ type: \"error\", message: err.message });\n      });\n  }, []);\n\n  return (\n    <div className={`${s.content} grid gap-1 m-a p-1`}>\n      <div className={`flex ${s.head}`}>\n        <div\n          className={`flex align-center pointer gap_5  ml-1`}\n          onClick={() => setSidebarOpen((prev) => !prev)}\n        >\n          <BsList style={{ fontSize: \"1.75rem\" }} />\n          <h2>All Staffs</h2>\n          {checkPermission(\"employee_create\") && (\n            <button\n              className=\"btn clear iconOnly\"\n              onClick={(e) => {\n                e.stopPropagation();\n                setAddEmp(true);\n              }}\n            >\n              <GoPlus />\n            </button>\n          )}\n        </div>\n      </div>\n      <Table\n        loading={loading}\n        className={s.emps}\n        columns={[{ label: \"Name\" }, { label: \"Role\" }, { label: \"Action\" }]}\n      >\n        {emps.map((item) => (\n          <tr\n            onClick={() => {\n              setEmp(item);\n              setAddEmp(true);\n            }}\n            style={{ cursor: \"pointer\" }}\n            key={item._id}\n          >\n            <td className={s.date}>{item.name}</td>\n            <td className={s.date}>\n              {item.roles.map((role) => (\n                <p key={role._id}>{role.name}</p>\n              ))}\n            </td>\n            <TableActions\n              className={s.actions}\n              actions={[\n                ...(checkPermission(\"employee_update\")\n                  ? [\n                      {\n                        icon: <FaPencilAlt />,\n                        label: \"Update\",\n                        onClick: () => {\n                          setEmp(item);\n                          setAddEmp(true);\n                        },\n                      },\n                    ]\n                  : []),\n              ]}\n            />\n          </tr>\n        ))}\n      </Table>\n      <Modal\n        open={addEmp}\n        head\n        label={`${emp ? \"Update\" : \"Add\"} Staff`}\n        className={s.addEmpFormModal}\n        setOpen={() => {\n          setEmp(null);\n          setAddEmp(false);\n        }}\n      >\n        <EmpForm\n          edit={emp}\n          onSuccess={(newEmp) => {\n            if (emp) {\n              setEmps((prev) => {\n                if (newEmp) {\n                  return prev.map((item) =>\n                    item._id === newEmp._id ? newEmp : item\n                  );\n                } else {\n                  return prev.filter((item) => item._id !== emp._id);\n                }\n              });\n              setEmp(null);\n            } else {\n              setEmps((prev) => [...prev, newEmp]);\n            }\n            setAddEmp(false);\n          }}\n        />\n      </Modal>\n    </div>\n  );\n};\n\nexport default Emps;\n"],"names":["mainSchema","yup","employee","required","roles","of","edit","onSuccess","useForm","resolver","useYup","handleSubmit","reset","control","useFetch","endpoints","updateEmp","put","loading","useEffect","_id","map","item","className","s","onSubmit","values","then","data","success","Prompt","type","message","catch","err","disabled","label","url","getQuery","inputValue","selected","name","handleData","value","formOptions","multiple","setSidebarOpen","checkPermission","useContext","SiteContext","useState","emps","setEmps","emp","setEmp","addEmp","setAddEmp","getEmps","get","console","log","onClick","prev","style","fontSize","e","stopPropagation","columns","cursor","role","actions","icon","open","head","setOpen","EmpForm","newEmp","filter"],"sourceRoot":""}