{"version":3,"file":"static/js/226.37b12dcd.chunk.js","mappings":"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","sources":["webpack://cash-app/./src/Views/Dashboard/Accounting/quotes.module.scss?8207","Views/Dashboard/Accounting/MasterForm.js","Views/Dashboard/Accounting/printInvoice.js","Views/Dashboard/Accounting/QuoteForm.js","Views/Dashboard/Accounting/index.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"content\":\"quotes_content__d6QGt\",\"innerWrapper\":\"quotes_innerWrapper__0o8+D\",\"sidebar\":\"quotes_sidebar__OueuR\",\"addButton\":\"quotes_addButton__XE+Gn\",\"btns\":\"quotes_btns__y2nuy\",\"listItem\":\"quotes_listItem__ityEv\",\"label\":\"quotes_label__VuSPM\",\"nestedList\":\"quotes_nestedList__B-cIy\",\"vouchers\":\"quotes_vouchers__t8sKZ\",\"masterFormModal\":\"quotes_masterFormModal__36AN0\",\"masterForm\":\"quotes_masterForm__dXJKs\",\"print\":\"quotes_print__ir6Gn\",\"logo\":\"quotes_logo__Vsg-f\",\"box\":\"quotes_box__+p8As\",\"items\":\"quotes_items__ANNmM\",\"taxes\":\"quotes_taxes__cyTAG\",\"totalAmount\":\"quotes_totalAmount__rIs44\",\"word\":\"quotes_word__sjhD8\",\"digit\":\"quotes_digit__VyweO\",\"sign\":\"quotes_sign__sG6wg\",\"signature\":\"quotes_signature__YnCoV\",\"head\":\"quotes_head__uo7Hz\",\"quotes\":\"quotes_quotes__tCxCu\",\"date\":\"quotes_date__KOSsI\",\"customer\":\"quotes_customer__6hEHP\",\"net\":\"quotes_net__h-6C4\",\"actions\":\"quotes_actions__Qdwow\",\"addQuoteForm\":\"quotes_addQuoteForm__fmLXp\",\"itemForm\":\"quotes_itemForm__E47xe\",\"itemName\":\"quotes_itemName__hYpvW\",\"mainForm\":\"quotes_mainForm__Neb5l\"};","import { useEffect } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { Input, Combobox } from \"Components/elements\";\nimport { useYup, useFetch } from \"hooks\";\nimport { Prompt } from \"Components/modal\";\nimport * as yup from \"yup\";\nimport s from \"./quotes.module.scss\";\nimport { endpoints } from \"config\";\n\nconst mainSchema = yup.object({\n  name: yup.string().required(\"Please enter a name\"),\n  parent: yup.string(),\n  type: yup\n    .string()\n    .oneOf([\n      \"Cash\",\n      \"Bank\",\n      \"Customers\",\n      \"Suppliers\",\n      \"Sales\",\n      \"Purchase\",\n      \"Stock\",\n      \"null\",\n      \"Tax\",\n      null,\n    ])\n    .nullable(),\n  isGroup: yup.boolean().required(),\n  openingBalance: yup\n    .number()\n    .required(\"Please enter opening balance\")\n    .typeError(\"Please enter a valid number\"),\n});\n\nconst Form = ({ edit, masters = [], onSuccess }) => {\n  const {\n    handleSubmit,\n    register,\n    reset,\n    control,\n    formState: { errors },\n  } = useForm({\n    resolver: useYup(mainSchema),\n  });\n\n  const {\n    post: createMaster,\n    put: updateMaster,\n    loading,\n  } = useFetch(endpoints.accountingMasters + `/${edit?._id || \"\"}`);\n\n  useEffect(() => {\n    reset({\n      name: edit?.name || \"\",\n      parent: edit?.parent || \"null\",\n      type: edit?.type || \"null\",\n      isGroup: edit?.isGroup ?? true,\n      openingBalance: edit?.openingBalance || 0,\n    });\n  }, [edit]);\n  return (\n    <form\n      onSubmit={handleSubmit((values) => {\n        if (values.parent === \"null\") {\n          values.parent = null;\n        }\n        if (values.type === \"null\") {\n          values.type = null;\n        }\n        (edit?._id ? updateMaster : createMaster)(values)\n          .then(({ data }) => {\n            if (!data.success) {\n              return Prompt({ type: \"error\", message: data.message });\n            }\n            onSuccess(data.data);\n          })\n          .catch((err) => Prompt({ type: \"error\", message: err.message }));\n      })}\n      className={`${s.masterForm} grid gap-1`}\n    >\n      <Input label=\"Name\" {...register(\"name\")} required error={errors.name} />\n\n      <Combobox\n        label=\"Parent\"\n        name=\"parent\"\n        control={control}\n        options={[\n          { label: \"None\", value: \"null\" },\n          ...masters.map((item) => ({ label: item.name, value: item._id })),\n        ]}\n      />\n\n      <Combobox\n        label=\"Type\"\n        name=\"type\"\n        control={control}\n        options={[\n          { label: \"None\", value: \"null\" },\n          { label: \"Cash\", value: \"Cash\" },\n          { label: \"Bank\", value: \"Bank\" },\n          { label: \"Customers\", value: \"Customers\" },\n          { label: \"Suppliers\", value: \"Suppliers\" },\n          { label: \"Sales\", value: \"Sales\" },\n          { label: \"Purchase\", value: \"Purchase\" },\n          { label: \"Stock\", value: \"Stock\" },\n          { label: \"Tax\", value: \"Tax\" },\n        ]}\n      />\n\n      <Combobox\n        label=\"Is Group\"\n        name=\"isGroup\"\n        control={control}\n        formOptions={{ required: true }}\n        options={[\n          { label: \"No\", value: false },\n          { label: \"Yes\", value: true },\n        ]}\n      />\n\n      <Input\n        label=\"Opening Balance\"\n        type=\"number\"\n        {...register(\"openingBalance\")}\n        required\n        error={errors.openingBalance}\n      />\n\n      <div className=\"btns\">\n        <button className=\"btn\" disabled={loading}>\n          {edit?._id ? \"Update\" : \"Submit\"}\n        </button>\n      </div>\n    </form>\n  );\n};\n\nexport default Form;\n","import { forwardRef, useContext, useEffect, useState } from \"react\";\nimport { SiteContext } from \"SiteContext\";\n\nimport { Table, moment } from \"Components/elements\";\n\nimport s from \"./quotes.module.scss\";\n\nconst Detail = ({ label, value }) => {\n  return (\n    <p className={s.detail}>\n      <span className={s.label}>{label}</span>:{\" \"}\n      <span className={s.value}>{value}</span>\n    </p>\n  );\n};\n\nconst PrintInvoice = forwardRef(({ quote, user }, ref) => {\n  const { config } = useContext(SiteContext);\n  const [itemsStyle, setItemsStyle] = useState(null);\n  useEffect(() => {\n    if (config?.printQuote) {\n      const itemColumnSort = [\"no\", \"product\", \"qty\", \"unit\", \"total\"];\n      const columns = [\n        ...config.printQuote.itemColumns\n          .sort((a, b) =>\n            itemColumnSort.indexOf(a) > itemColumnSort.indexOf(b) ? 1 : -1\n          )\n          .filter((col) => ![\"no\", \"product\"].includes(col)),\n      ];\n      setItemsStyle({\n        gridTemplateColumns: `${\n          config.printQuote.itemColumns.includes(\"no\") ? \"3rem\" : \"\"\n        } ${\n          config.printQuote.itemColumns.includes(\"product\")\n            ? 42 - 6 * columns.length + \"rem\"\n            : \"\"\n        } repeat(auto-fit, minmax(86px, 1fr))`,\n      });\n    }\n  }, [quote]);\n\n  if (!config?.printQuote) {\n    return (\n      <div className={s.print} ref={ref}>\n        <p>Please update print configuration in the settings.</p>\n      </div>\n    );\n  }\n  return (\n    <div className={s.print} ref={ref}>\n      <header>\n        {user.logo && <img className={s.logo} src={user.logo} />}\n        <div>\n          <h2>{user.name}</h2>\n          {user.motto && <p>{user.motto}</p>}\n        </div>\n        <h4>Quote</h4>\n      </header>\n\n      <div className={`${s.info} flex wrap gap-1 mt-1`}>\n        <div className={`${s.box} flex-1`}>\n          <p>To:</p>\n          <Detail label=\"Name\" value={quote.customer?.name} />\n          <Detail\n            label=\"Detail\"\n            value={\n              quote.customer?.detail?.split(\"\\n\").map((line, i, arr) => (\n                <span key={i}>\n                  {line}\n                  {arr[i + 1] && <br />}\n                </span>\n              )) || null\n            }\n          />\n        </div>\n        <div className={`${s.box} flex-1`}>\n          <Detail label=\"Date\" value={moment(quote?.date, \"DD-MM-YYYY\")} />\n          {config.printQuote.businessInfo.includes(\"gstin\") && (\n            <Detail label=\"GSTIN\" value={user.gstin} />\n          )}\n          {config.printQuote.businessInfo.includes(\"pan\") && (\n            <Detail label=\"PAN\" value={user.pan} />\n          )}\n          {user.bankDetails && (\n            <>\n              {config.printQuote.businessInfo.includes(\"bank\") && (\n                <Detail label=\"Bank\" value={user.bankDetails.bankName} />\n              )}\n              {config.printQuote.businessInfo.includes(\"branch\") && (\n                <Detail label=\"Branch\" value={user.bankDetails.branch} />\n              )}\n              {config.printQuote.businessInfo.includes(\"accountNumber\") && (\n                <Detail label=\"A/C No.\" value={user.bankDetails.accNo} />\n              )}\n            </>\n          )}\n          {config.printQuote.businessInfo.includes(\"ifsc\") && (\n            <Detail label=\"IFSC\" value={user.ifsc} />\n          )}\n          {config.printQuote.businessInfo.includes(\"address\") && (\n            <Detail label=\"Address\" value={`${user.address?.street || \"\"}`} />\n          )}\n          {config.printQuote.businessInfo.includes(\"phone\") && (\n            <Detail label=\"Phone\" value={user.phone} />\n          )}\n          {config.printQuote.businessInfo.includes(\"email\") && (\n            <Detail label=\"Email\" value={user.email} />\n          )}\n        </div>\n      </div>\n\n      {config.printQuote.itemColumns.length > 0 && (\n        <Table\n          className={`${s.items} mt-1`}\n          theadTrStyle={{ ...itemsStyle }}\n          columns={config.printQuote.itemColumns.map((key) => {\n            if (key === \"no\") return { label: \"No\" };\n            if (key === \"product\") return { label: \"Product\" };\n            if (key === \"price\")\n              return { label: \"Price\", className: \"text-right\" };\n            if (key === \"qty\") return { label: \"QTY\", className: \"text-right\" };\n            if (key === \"unit\") return { label: \"Unit\" };\n            if (key === \"total\")\n              return {\n                label: `Total (${config.printQuote.currency})`,\n                className: \"text-right\",\n              };\n          })}\n        >\n          {quote.items.map((item, i) => (\n            <tr key={i} style={{ ...itemsStyle }}>\n              {config.printQuote.itemColumns.includes(\"no\") && <td>{i + 1}</td>}\n              {config.printQuote.itemColumns.includes(\"product\") && (\n                <td>\n                  <span className=\"ellipsis\">{item.name}</span>\n                </td>\n              )}\n              {config.printQuote.itemColumns.includes(\"price\") && (\n                <td className=\"text-right\">\n                  {item.price.fix(2, config?.numberSeparator)}\n                </td>\n              )}\n              {config.printQuote.itemColumns.includes(\"qty\") && (\n                <td className=\"text-right\">{item.qty}</td>\n              )}\n              {config.printQuote.itemColumns.includes(\"unit\") && (\n                <td>{item.unit}</td>\n              )}\n              {config.printQuote.itemColumns.includes(\"total\") && (\n                <td className=\"text-right\">\n                  {(item.price * item.qty).fix(2, config?.numberSeparator)}\n                </td>\n              )}\n            </tr>\n          ))}\n        </Table>\n      )}\n\n      {quote.gst && (\n        <Table\n          className={`${s.taxes} mt-1`}\n          columns={[\n            { label: \"No.\" },\n            { label: \"Description of Tax\" },\n            { label: \"Rate of Tax\", className: \"text-right\" },\n            {\n              label: `Taxable Amount (${config.printQuote.currency})`,\n              className: \"text-right\",\n            },\n            {\n              label: `Tax Amount (${config.printQuote.currency})`,\n              className: \"text-right\",\n            },\n          ]}\n        >\n          <tr>\n            <td>1</td>\n            <td>Integrated GST</td>\n            <td className=\"text-right\">\n              {quote.gst.fix(2, config?.numberSeparator)}\n            </td>\n            <td className=\"text-right\">\n              {quote.items\n                .reduce((p, c) => p + c.qty * c.price, 0)\n                .fix(2, config?.numberSeparator)}\n            </td>\n            <td className=\"text-right\">\n              {quote.items\n                .reduce((p, c) => p + c.qty * c.price, 0)\n                .percent(quote.gst)\n                .fix(2, config?.numberSeparator)}\n            </td>\n          </tr>\n        </Table>\n      )}\n\n      <div className={`${s.totalAmount} mt-1`}>\n        <p className={s.word}>\n          Total:{\" \"}\n          {quote.items.reduce((p, c) => p + c.qty * c.price, 0).toWords()}\n        </p>\n        <p className={s.digit}>\n          {(\n            quote.items.reduce((p, c) => p + c.qty * c.price, 0) +\n            quote.items\n              .reduce((p, c) => p + c.qty * c.price, 0)\n              .percent(quote.gst || 0)\n          ).fix(2, config?.numberSeparator)}\n        </p>\n      </div>\n\n      {(user.terms?.length || user.ownerDetails?.name) && (\n        <footer className=\"flex gap-1 align-end mt-1\">\n          {user.terms?.length > 0 && (\n            <div className={`${s.box} flex-1 mb-2`}>\n              <strong>Terms & Conditions:</strong>{\" \"}\n              <ol className={`ml-2 mt-1`}>\n                {user.terms?.map((item, i) => (\n                  <li key={i}>{item}</li>\n                ))}\n              </ol>\n            </div>\n          )}\n          {user.ownerDetails?.name && (\n            <div className={s.sign}>\n              <p>For {user.name}</p>\n              {user.ownerDetails.signature && (\n                <img\n                  className={s.signature}\n                  src={user.ownerDetails.signature}\n                />\n              )}\n              <p>\n                <strong>{user.ownerDetails.name}</strong>\n              </p>\n            </div>\n          )}\n        </footer>\n      )}\n    </div>\n  );\n});\n\nexport default PrintInvoice;\n","import { useState, useEffect, useContext, useRef } from \"react\";\nimport { SiteContext } from \"SiteContext\";\nimport { useForm } from \"react-hook-form\";\nimport {\n  Input,\n  Textarea,\n  Combobox,\n  Table,\n  TableActions,\n  SearchField,\n  moment,\n} from \"Components/elements\";\nimport { useYup, useFetch } from \"hooks\";\nimport { Prompt } from \"Components/modal\";\nimport { FaPencilAlt, FaRegTrashAlt } from \"react-icons/fa\";\nimport * as yup from \"yup\";\nimport s from \"./quotes.module.scss\";\nimport { useReactToPrint } from \"react-to-print\";\nimport { endpoints } from \"config\";\n\nimport PrintInvoice from \"./printInvoice\";\n\nconst mainSchema = yup.object({\n  date: yup.string().required(),\n  customerName: yup.string().required(),\n  customerDetail: yup.string().required(),\n});\n\nconst itemSchema = yup.object({\n  name: yup.string().required(),\n  price: yup\n    .number()\n    .min(0, \"Price can not be less than 0\")\n    .required()\n    .typeError(\"Enter a valid Number\"),\n  qty: yup\n    .number()\n    .min(1, \"Qty can not be less than 1\")\n    .required()\n    .typeError(\"Enter a valid Number\"),\n  unit: yup.lazy((value) => {\n    switch (typeof value) {\n      case \"object\":\n        return yup.object().typeError(\"Select a unit\").required();\n      case \"string\":\n        return yup.string().required();\n      default:\n        return yup.mixed().required();\n    }\n  }),\n});\n\nconst Detail = ({ label, value, className }) => {\n  return (\n    <p className={`${s.detail} ${className || \"\"}`}>\n      <span className={s.label}>{label}:</span>{\" \"}\n      <span className={s.value}>{value}</span>\n    </p>\n  );\n};\n\nconst Form = ({ edit, quotes, onSuccess }) => {\n  const { business, user, config, checkPermission } = useContext(SiteContext);\n  const [viewOnly, setViewOnly] = useState(!!edit);\n  const [items, setItems] = useState(edit?.items || []);\n  const [editItem, setEditItem] = useState(null);\n  const [err, setErr] = useState(null);\n  const printRef = useRef();\n  const handlePrint = useReactToPrint({ content: () => printRef.current });\n  const { post: generateOrder, loading } = useFetch(\n    endpoints.generateOrderFromQuote\n  );\n  return (\n    <div\n      className={`grid gap-1 ${s.addQuoteForm} ${viewOnly ? s.viewOnly : \"\"}`}\n    >\n      <div className=\"grid gap-1 p-1\">\n        {viewOnly && (\n          <div className={`flex wrap gap-1 ${s.quoteDetail}`}>\n            <div className={s.box}>\n              <h3>Customer Information</h3>\n              <Detail label=\"Name\" value={edit.customer?.name} />\n              <Detail\n                label=\"Detail\"\n                value={\n                  edit.customer?.detail?.split(\"\\n\").map((line, i, arr) => (\n                    <span key={i}>\n                      {line}\n                      {arr[i + 1] && <br />}\n                    </span>\n                  )) || null\n                }\n              />\n            </div>\n            <div className={s.box}>\n              <h3>Quote Information</h3>\n              <Detail\n                label=\"Status\"\n                value={edit?.status}\n                className=\"flex justify-space-between\"\n              />\n              <Detail\n                label=\"Date\"\n                value={moment(edit?.date, \"DD-MM-YYYY\")}\n                className=\"flex justify-space-between\"\n              />\n              <Detail\n                label=\"Total\"\n                value={edit.items\n                  .reduce((p, c) => p + c.qty * c.price, 0)\n                  .fix(2, config?.numberSeparator)}\n                className=\"flex justify-space-between\"\n              />\n            </div>\n          </div>\n        )}\n\n        <h3>Items</h3>\n        {items.length > 0 ? (\n          <Table\n            className={s.items}\n            columns={[\n              { label: \"Product\" },\n              { label: \"Qty\", className: \"text-right\" },\n              { label: \"Unit\" },\n              { label: \"Rate\", className: \"text-right\" },\n              { label: \"Total\", className: \"text-right\" },\n              ...(viewOnly ? [] : [{ label: \"Action\", action: true }]),\n            ]}\n          >\n            {items.map((item, i) => (\n              <tr key={i}>\n                <td className={s.name}>\n                  <span className=\"ellipsis\">{item.name}</span>\n                </td>\n                <td className=\"text-right\">{item.qty}</td>\n                <td>{item.unit}</td>\n                <td className=\"text-right\">\n                  {item.price.fix(2, config?.numberSeparator)}\n                </td>\n                <td className=\"text-right\">\n                  {(item.price * item.qty).fix(2, config?.numberSeparator)}\n                </td>\n                {!viewOnly && (\n                  <TableActions\n                    actions={[\n                      {\n                        icon: <FaPencilAlt />,\n                        label: \"Edit\",\n                        onClick: () => setEditItem(item),\n                      },\n                      {\n                        icon: <FaRegTrashAlt />,\n                        label: \"Delete\",\n                        onClick: () =>\n                          Prompt({\n                            type: \"confirmation\",\n                            message: `Are you sure you want to remove this Item?`,\n                            callback: () => {\n                              setItems((prev) =>\n                                prev.filter(\n                                  (product) => product._id !== item._id\n                                )\n                              );\n                            },\n                          }),\n                      },\n                    ]}\n                  />\n                )}\n              </tr>\n            ))}\n          </Table>\n        ) : (\n          <p className={s.noContent}>No items yet.</p>\n        )}\n        {err && <p className=\"error\">{err}</p>}\n\n        {edit && (\n          <div style={{ display: \"none\" }}>\n            <PrintInvoice\n              ref={printRef}\n              quote={edit}\n              user={business?.business || user}\n            />\n          </div>\n        )}\n\n        {!viewOnly && (\n          <>\n            <ItemForm\n              key={editItem ? \"edit\" : \"add\"}\n              edit={editItem}\n              quotes={quotes}\n              onSuccess={(newItem) => {\n                setErr(null);\n                if (editItem) {\n                  setItems((prev) =>\n                    prev.map((item) =>\n                      item._id === newItem._id ? newItem : item\n                    )\n                  );\n                  setEditItem(null);\n                } else {\n                  setItems((prev) => [...prev, newItem]);\n                }\n              }}\n            />\n\n            <h3 className=\"mt-1\">Other Information</h3>\n\n            <MainForm\n              disabled={editItem}\n              edit={edit}\n              items={items}\n              quotes={quotes}\n              setErr={setErr}\n              onSuccess={onSuccess}\n              setViewOnly={setViewOnly}\n            />\n          </>\n        )}\n      </div>\n\n      {viewOnly && (\n        <div className=\"flex gap-1 all-columns align-center border-t p-1\">\n          {edit?._id &&\n            checkPermission(\"order_create\") &&\n            edit?.status === \"pending\" && (\n              <button\n                className=\"btn\"\n                disabled={loading}\n                onClick={() =>\n                  Prompt({\n                    type: \"confirmation\",\n                    message:\n                      \"Are you sure want to generate an order from this quote?\",\n                    callback: () => {\n                      generateOrder({\n                        quote_id: edit?._id,\n                      })\n                        .then(({ data }) => {\n                          if (data.success) {\n                            onSuccess({\n                              ...edit,\n                              status: \"ordered\",\n                            });\n                            Prompt({\n                              type: \"success\",\n                              message: \"Order has been generated\",\n                            });\n                          } else {\n                            Prompt({\n                              type: \"error\",\n                              message: data.message,\n                            });\n                          }\n                        })\n                        .catch((err) =>\n                          Prompt({ type: \"error\", message: err.message })\n                        );\n                    },\n                  })\n                }\n              >\n                Generate Order\n              </button>\n            )}\n          {checkPermission(\"quote_update\") && (\n            <button\n              disabled={loading}\n              className=\"btn medium\"\n              onClick={() => setViewOnly(false)}\n            >\n              Edit\n            </button>\n          )}\n          <button className=\"btn medium\" onClick={handlePrint}>\n            Print\n          </button>\n        </div>\n      )}\n    </div>\n  );\n};\n\nconst ItemForm = ({ edit, quotes, onSuccess }) => {\n  const { config } = useContext(SiteContext);\n  const {\n    handleSubmit,\n    register,\n    reset,\n    watch,\n    setValue,\n    control,\n    formState: { errors },\n  } = useForm({\n    defaultValues: {\n      unit: \"Piece\",\n    },\n    resolver: useYup(itemSchema),\n  });\n  useEffect(() => {\n    reset({ ...edit });\n  }, [edit]);\n  return (\n    <form\n      onSubmit={handleSubmit((values) => {\n        if (!edit) {\n          values._id = Math.random().toString().substr(-8);\n        }\n        onSuccess(values);\n        reset();\n      })}\n      className={`${s.itemForm} grid gap-1`}\n    >\n      <SearchField\n        label=\"Product\"\n        data={quotes\n          .reduce((p, c) => [...p, ...c.items], [])\n          .map((item) => ({\n            label: item.name,\n            value: item.name,\n            data: item,\n          }))}\n        register={register}\n        name=\"name\"\n        formOptions={{ required: true }}\n        renderListItem={(item) => <>{item.label}</>}\n        watch={watch}\n        setValue={setValue}\n        onChange={(item) => {\n          if (typeof item === \"string\") {\n            setValue(\"name\", item);\n          } else {\n            setValue(\"name\", item.name);\n            setValue(\"price\", item.price);\n          }\n        }}\n        error={errors.name}\n        className={s.itemName}\n      />\n\n      <Input\n        label=\"Price\"\n        type=\"number\"\n        required\n        {...register(\"price\")}\n        error={errors.price}\n      />\n      <Input\n        label=\"Qty\"\n        type=\"number\"\n        required\n        {...register(\"qty\")}\n        error={errors.qty}\n      />\n      <Combobox\n        label=\"Unit\"\n        control={control}\n        name=\"unit\"\n        formOptions={{ required: true }}\n        options={config.unitsOfMeasure.map((unit) => ({\n          label: unit,\n          value: unit,\n        }))}\n      />\n      <button className=\"btn\">{edit ? \"Update\" : \"Add\"}</button>\n    </form>\n  );\n};\n\nconst MainForm = ({ disabled, edit, items, quotes, setErr, onSuccess }) => {\n  const {\n    handleSubmit,\n    register,\n    reset,\n    setValue,\n    watch,\n    control,\n    formState: { errors },\n  } = useForm({\n    resolver: useYup(mainSchema),\n  });\n\n  const {\n    post: saveInvoice,\n    put: updateInvoice,\n    loading,\n  } = useFetch(endpoints.quotes + `/${edit?._id || \"\"}`);\n\n  useEffect(() => {\n    reset({\n      ...edit,\n      status: edit?.status || \"pending\",\n      date: moment(edit?.date, \"YYYY-MM-DD\"),\n      customerName: edit?.customer?.name || \"\",\n      customerDetail: edit?.customer?.detail || \"\",\n    });\n  }, [edit]);\n  return (\n    <form\n      onSubmit={handleSubmit((values) => {\n        if (items.length < 1) {\n          return setErr(\"Add at least one item\");\n        }\n\n        (edit ? updateInvoice : saveInvoice)({\n          dateTime: values.date,\n          status: values.status,\n          customer: {\n            name: values.customerName,\n            detail: values.customerDetail,\n          },\n          items: items.map((item) => ({ ...item, _id: undefined })),\n        })\n          .then(({ data }) => {\n            if (!data.success) {\n              return Prompt({ type: \"error\", message: data.message });\n            }\n            onSuccess(data.data);\n          })\n          .catch((err) => Prompt({ type: \"error\", message: err.message }));\n      })}\n      className={`${s.mainForm} grid gap-1`}\n    >\n      <Input\n        label=\"Date\"\n        type=\"date\"\n        {...register(\"date\")}\n        required\n        error={errors.date}\n      />\n\n      <Combobox\n        label=\"Status\"\n        name=\"status\"\n        control={control}\n        options={[\n          { label: \"Pending\", value: \"pending\" },\n          { label: \"Ordered\", value: \"ordered\" },\n        ]}\n      />\n\n      <div className=\"all-columns\">\n        <h3>Customer Information</h3>\n      </div>\n\n      <SearchField\n        label=\"Name\"\n        data={[...new Set(quotes.map((item) => item.customer.name))].map(\n          (name) => ({\n            label: name,\n            value: name,\n            data: quotes.find((item) => item.customer.name === name)?.customer,\n          })\n        )}\n        register={register}\n        name=\"customerName\"\n        formOptions={{ required: true }}\n        renderListItem={(item) => <>{item.label}</>}\n        watch={watch}\n        setValue={setValue}\n        onChange={(item) => {\n          if (typeof item === \"string\") {\n            setValue(\"customerName\", item);\n          } else {\n            setValue(\"customerName\", item.name);\n            setValue(\"customerDetail\", item.detail);\n          }\n        }}\n        error={errors.customerName}\n      />\n\n      <Textarea\n        label=\"Detail\"\n        {...register(\"customerDetail\")}\n        required\n        error={errors[\"customerDetail\"]}\n      />\n\n      <div className=\"btns\">\n        <button className=\"btn\" disabled={disabled || loading}>\n          {edit ? \"Update\" : \"Submit\"}\n        </button>\n      </div>\n    </form>\n  );\n};\n\nexport default Form;\n","import { useState, useEffect, useContext, useMemo } from \"react\";\nimport { SiteContext } from \"SiteContext\";\nimport { Table, TableActions, Moment, Tabs, Select } from \"Components/elements\";\nimport { FaRegEye, FaRegTrashAlt } from \"react-icons/fa\";\nimport { Prompt, Modal } from \"Components/modal\";\nimport s from \"./quotes.module.scss\";\nimport { useFetch } from \"hooks\";\nimport { endpoints } from \"config\";\n\nimport MasterForm from \"./MasterForm\";\nimport QuoteForm from \"./QuoteForm\";\nimport {\n  BsDashSquare,\n  BsFillPlusSquareFill,\n  BsList,\n  BsPlusSquare,\n} from \"react-icons/bs\";\nimport { GoPlus } from \"react-icons/go\";\nimport { FiEdit3 } from \"react-icons/fi\";\nimport VoucherFilters from \"./Filters\";\n\nconst buildTree = (accounts) => {\n  const accountMap = {};\n  accounts.forEach((account) => {\n    account.children = [];\n    accountMap[account._id] = account;\n  });\n\n  const tree = [];\n\n  accounts.forEach((account) => {\n    if (account.parent) {\n      const parent = accountMap[account.parent];\n      if (parent) {\n        parent.children.push(account);\n      }\n    } else {\n      tree.push(account);\n    }\n  });\n\n  return tree;\n};\n\nconst AccountNode = ({ account, setAddMaster }) => {\n  const [open, setOpen] = useState(false);\n  return (\n    <li style={{ whiteSpace: \"nowrap\" }} className={s.listItem}>\n      <div className={s.label}>\n        {account.isGroup && (\n          <>\n            {account.children?.length > 0 ? (\n              <button onClick={() => setOpen(!open)}>\n                {open ? <BsDashSquare /> : <BsPlusSquare />}\n              </button>\n            ) : (\n              <button\n                style={{\n                  height: \"16px\",\n                  width: \"16px\",\n                  // background: \"none\",\n                  border: \"1px dashed #818181\",\n                  borderRadius: \"2px\",\n                  pointerEvents: \"none\",\n                }}\n              ></button>\n            )}\n          </>\n        )}\n        <strong>{account.name}</strong>\n        <div className={s.btns}>\n          <button className={s.addButton} onClick={() => setAddMaster(account)}>\n            <FiEdit3 />\n          </button>\n          {account.isGroup && (\n            <button\n              className={s.addButton}\n              onClick={() => setAddMaster({ parent: account._id })}\n            >\n              <BsFillPlusSquareFill />\n            </button>\n          )}\n        </div>\n      </div>\n      {open && account.children?.length > 0 && (\n        <ul className={s.nestedList}>\n          {account.children.map((child) => (\n            <AccountNode\n              key={child._id}\n              account={child}\n              setAddMaster={setAddMaster}\n            />\n          ))}\n        </ul>\n      )}\n    </li>\n  );\n};\n\nconst Accounting = ({ setSidebarOpen }) => {\n  const { config } = useContext(SiteContext);\n  const [quotes, setQuotes] = useState([]);\n  const [addMaster, setAddMaster] = useState(null);\n  const [masters, setMasters] = useState([]);\n  const [quote, setQuote] = useState(null);\n  const [addQuote, setAddQuote] = useState(false);\n  const [tab, setTab] = useState(\"voucherListing\");\n  const [filters, setFilters] = useState({});\n\n  const { get: getMasters, loading } = useFetch(endpoints.accountingMasters);\n  const { remove: deleteQuote } = useFetch(endpoints.quotes + \"/{ID}\");\n\n  const treeData = useMemo(() => buildTree(masters), [masters]);\n\n  useEffect(() => {\n    getMasters()\n      .then(({ data }) => {\n        if (data.success) {\n          return setMasters(data.data);\n        }\n      })\n      .catch((err) => Prompt({ type: \"error\", message: err.message }));\n  }, []);\n  console.log(\"list --->\", filters);\n  return (\n    <div className={`${s.content} grid gap-1 m-a`}>\n      <div className={`flex ${s.head}`}>\n        <div\n          className={`flex align-center pointer gap_5  ml-1`}\n          onClick={() => setSidebarOpen((prev) => !prev)}\n        >\n          <BsList style={{ fontSize: \"1.75rem\" }} />\n          <h2>Accounting</h2>\n          {/* <button\n            className=\"btn clear iconOnly\"\n            onClick={(e) => {\n              e.stopPropagation();\n              setAddQuote(true);\n            }}\n          >\n            <GoPlus />\n          </button> */}\n        </div>\n      </div>\n\n      <div className={s.innerWrapper}>\n        <div className={s.sidebar}>\n          <button className={s.addButton} onClick={() => setAddMaster({})}>\n            <BsFillPlusSquareFill />\n          </button>\n          <ul>\n            {masters.length > 0 ? (\n              treeData.map((account) => (\n                <AccountNode\n                  key={account._id}\n                  account={account}\n                  setAddMaster={setAddMaster}\n                />\n              ))\n            ) : (\n              <p\n                style={{\n                  marginTop: \"1rem\",\n                  marginBottom: \"1rem\",\n                  textAlign: \"center\",\n                  textWrap: \"balance\",\n                  color: \"#797979\",\n                }}\n              >\n                No accounts have been added yet.\n              </p>\n            )}\n          </ul>\n        </div>\n        <div>\n          <Tabs\n            activeTab={tab}\n            tabs={[\n              { label: \"Voucher Listing\", value: \"voucherListing\" },\n              // { label: \"Reports\", value: \"reports\" },\n              // { label: \"More Reports\", value: \"moreReports\" },\n            ]}\n            onChange={(tab) => setTab(tab.value)}\n          />\n          {tab === \"voucherListing\" && (\n            <div>\n              <Table\n                url={endpoints.accountingVouchers}\n                // filters={filters}\n                filterFields={[\n                  {\n                    label: \"Type\",\n                    fieldType: \"select\",\n                    name: \"type\",\n                    optionType: \"predefined\",\n                    options: [\n                      { label: \"Invoice\", value: \"Invoice\" },\n                      { label: \"Purchase\", value: \"Purchase\" },\n                      { label: \"Receipt\", value: \"Receipt\" },\n                      { label: \"Payment\", value: \"Payment\" },\n\n                      // { label: \"None\", value: \"null\" },\n                      // { label: \"Cash\", value: \"Cash\" },\n                      // { label: \"Bank\", value: \"Bank\" },\n                      // { label: \"Customers\", value: \"Customers\" },\n                      // { label: \"Suppliers\", value: \"Suppliers\" },\n                      // { label: \"Sales\", value: \"Sales\" },\n                      // { label: \"Purchase\", value: \"Purchase\" },\n                      // { label: \"Stock\", value: \"Stock\" },\n                    ],\n                  },\n                  {\n                    label: \"Start Date\",\n                    fieldType: \"input\",\n                    inputType: \"datetime-local\",\n                    name: \"startDate\",\n                  },\n                  {\n                    label: \"End Date\",\n                    fieldType: \"input\",\n                    inputType: \"datetime-local\",\n                    name: \"endDate\",\n                  },\n                ]}\n                className={s.vouchers}\n                columns={[\n                  { label: \"Date\" },\n                  { label: \"No\" },\n                  { label: \"Type\" },\n                  { label: \"Account Name\" },\n                  { label: \"Debit\", className: \"text-right\" },\n                  { label: \"Credit\", className: \"text-right\" },\n                  // { label: \"Action\" },\n                ]}\n                renderRow={(row, i) => (\n                  <tr key={i}>\n                    <td>\n                      <Moment format=\"DD-MM-YYYY hh:mma\">\n                        {row.createdAt}\n                      </Moment>\n                    </td>\n                    <td>{row.no}</td>\n                    <td>{row.type}</td>\n                    <td>{row.accountName}</td>\n                    <td className=\"text-right\">{row.debit || 0}</td>\n                    <td className=\"text-right\">{row.credit || 0}</td>\n                  </tr>\n                )}\n                tfoot={(data) => (\n                  <tfoot>\n                    <tr>\n                      <td />\n                      <td />\n                      <td />\n                      <td className=\"text-right\">Total</td>\n                      <td className=\"text-right\">\n                        {data\n                          .reduce((p, c) => p + c.debit, 0)\n                          .toLocaleString(\"en-IN\")}\n                      </td>\n                      <td className=\"text-right\">\n                        {data\n                          .reduce((p, c) => p + c.credit, 0)\n                          .toLocaleString(\"en-IN\")}\n                      </td>\n                    </tr>\n                  </tfoot>\n                )}\n              />\n            </div>\n          )}\n        </div>\n      </div>\n\n      <Modal\n        open={addQuote}\n        head\n        label={`${quote ? \"View / Update\" : \"Add\"} Record`}\n        className={s.addQuoteFormModal}\n        setOpen={() => {\n          setQuote(null);\n          setAddQuote(false);\n        }}\n      >\n        <QuoteForm\n          edit={quote}\n          quotes={quotes}\n          onSuccess={(newQuote) => {\n            if (quote) {\n              setMasters((prev) =>\n                prev.map((item) =>\n                  item._id === newQuote._id ? newQuote : item\n                )\n              );\n              setQuote(null);\n            } else {\n              setMasters((prev) => [...prev, newQuote]);\n            }\n            setAddQuote(false);\n          }}\n        />\n      </Modal>\n\n      <Modal\n        open={addMaster}\n        head\n        label={`${addMaster?._id ? \"Update\" : \"Add\"} Account`}\n        className={s.masterFormModal}\n        setOpen={() => {\n          setAddMaster(null);\n        }}\n      >\n        <MasterForm\n          edit={addMaster}\n          masters={masters}\n          onSuccess={(newMaster) => {\n            if (addMaster?._id) {\n              setMasters((prev) =>\n                prev.map((item) =>\n                  item._id === newMaster._id ? newMaster : item\n                )\n              );\n            } else {\n              setMasters((prev) => [...prev, newMaster]);\n            }\n            setAddMaster(false);\n          }}\n        />\n      </Modal>\n    </div>\n  );\n};\n\nexport default Accounting;\n"],"names":["mainSchema","yup","name","required","parent","type","oneOf","nullable","isGroup","openingBalance","typeError","edit","masters","onSuccess","useForm","resolver","useYup","handleSubmit","register","reset","control","errors","formState","useFetch","endpoints","_id","createMaster","post","updateMaster","put","loading","useEffect","onSubmit","values","then","data","success","Prompt","message","catch","err","className","s","label","error","options","value","map","item","formOptions","disabled","Detail","forwardRef","ref","quote","user","config","useContext","SiteContext","useState","itemsStyle","setItemsStyle","printQuote","itemColumnSort","columns","itemColumns","sort","a","b","indexOf","filter","col","includes","gridTemplateColumns","length","logo","src","motto","customer","detail","split","line","i","arr","moment","date","businessInfo","gstin","pan","bankDetails","bankName","branch","accNo","ifsc","address","street","phone","email","theadTrStyle","key","currency","items","style","price","fix","numberSeparator","qty","unit","gst","reduce","p","c","percent","toWords","terms","ownerDetails","signature","customerName","customerDetail","itemSchema","min","ItemForm","quotes","defaultValues","watch","setValue","Math","random","toString","substr","renderListItem","onChange","unitsOfMeasure","MainForm","setErr","saveInvoice","updateInvoice","status","dateTime","undefined","Set","find","business","checkPermission","viewOnly","setViewOnly","setItems","editItem","setEditItem","printRef","useRef","handlePrint","useReactToPrint","content","current","generateOrder","action","actions","icon","onClick","callback","prev","product","display","newItem","quote_id","AccountNode","account","setAddMaster","open","setOpen","whiteSpace","children","height","width","border","borderRadius","pointerEvents","child","setSidebarOpen","addMaster","setMasters","setQuote","addQuote","setAddQuote","tab","setTab","filters","getMasters","get","treeData","remove","useMemo","accounts","accountMap","forEach","tree","push","buildTree","console","log","fontSize","marginTop","marginBottom","textAlign","textWrap","color","activeTab","tabs","url","filterFields","fieldType","optionType","inputType","renderRow","row","format","createdAt","no","accountName","debit","credit","tfoot","toLocaleString","head","QuoteForm","newQuote","MasterForm","newMaster"],"sourceRoot":""}