{"version":3,"file":"static/js/22.80b047ad.chunk.js","mappings":"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","sources":["webpack://cash-app/./src/Views/Dashboard/Accounting/quotes.module.scss?8207","Views/Dashboard/Accounting/MasterForm.js","Views/Dashboard/Accounting/Filters.js","Views/Dashboard/Accounting/index.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"content\":\"quotes_content__d6QGt\",\"innerWrapper\":\"quotes_innerWrapper__0o8+D\",\"sidebar\":\"quotes_sidebar__OueuR\",\"addButton\":\"quotes_addButton__XE+Gn\",\"btns\":\"quotes_btns__y2nuy\",\"listItem\":\"quotes_listItem__ityEv\",\"label\":\"quotes_label__VuSPM\",\"accountName\":\"quotes_accountName__zyenQ\",\"highlight\":\"quotes_highlight__DDeNz\",\"nestedList\":\"quotes_nestedList__B-cIy\",\"open\":\"quotes_open__aa1x+\",\"innerContent\":\"quotes_innerContent__wCHU6\",\"innerContentWrapper\":\"quotes_innerContentWrapper__rKsb7\",\"vouchers\":\"quotes_vouchers__t8sKZ\",\"footer\":\"quotes_footer__AWxAV\",\"analysysPlaceholder\":\"quotes_analysysPlaceholder__0wx94\",\"voucherFilters\":\"quotes_voucherFilters__UNLDz\",\"masterFormModal\":\"quotes_masterFormModal__36AN0\",\"masterForm\":\"quotes_masterForm__dXJKs\",\"print\":\"quotes_print__ir6Gn\",\"logo\":\"quotes_logo__Vsg-f\",\"box\":\"quotes_box__+p8As\",\"items\":\"quotes_items__ANNmM\",\"taxes\":\"quotes_taxes__cyTAG\",\"totalAmount\":\"quotes_totalAmount__rIs44\",\"word\":\"quotes_word__sjhD8\",\"digit\":\"quotes_digit__VyweO\",\"sign\":\"quotes_sign__sG6wg\",\"signature\":\"quotes_signature__YnCoV\",\"head\":\"quotes_head__uo7Hz\",\"quotes\":\"quotes_quotes__tCxCu\",\"date\":\"quotes_date__KOSsI\",\"customer\":\"quotes_customer__6hEHP\",\"net\":\"quotes_net__h-6C4\",\"actions\":\"quotes_actions__Qdwow\",\"addQuoteForm\":\"quotes_addQuoteForm__fmLXp\",\"itemForm\":\"quotes_itemForm__E47xe\",\"itemName\":\"quotes_itemName__hYpvW\",\"mainForm\":\"quotes_mainForm__Neb5l\"};","import { useEffect } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { Input, Combobox } from \"Components/elements\";\nimport { useYup, useFetch } from \"hooks\";\nimport { Prompt } from \"Components/modal\";\nimport * as yup from \"yup\";\nimport s from \"./quotes.module.scss\";\nimport { endpoints } from \"config\";\n\nconst mainSchema = yup.object({\n  name: yup.string().required(\"Please enter a name\"),\n  parent: yup.string(),\n  type: yup\n    .string()\n    .oneOf([\n      \"Cash\",\n      \"Bank\",\n      \"Customers\",\n      \"Suppliers\",\n      \"Sales\",\n      \"Purchase\",\n      \"Stock\",\n      \"null\",\n      \"Tax\",\n      null,\n    ])\n    .nullable(),\n  isGroup: yup.boolean().required(),\n  openingBalance: yup\n    .number()\n    .required(\"Please enter opening balance\")\n    .typeError(\"Please enter a valid number\"),\n});\n\nconst Form = ({ edit, masters = [], onSuccess }) => {\n  const {\n    handleSubmit,\n    register,\n    reset,\n    control,\n    formState: { errors },\n  } = useForm({\n    resolver: useYup(mainSchema),\n  });\n\n  const {\n    post: createMaster,\n    put: updateMaster,\n    loading,\n  } = useFetch(endpoints.accountingMasters + `/${edit?._id || \"\"}`);\n\n  useEffect(() => {\n    reset({\n      name: edit?.name || \"\",\n      parent: edit?.parent || \"null\",\n      type: edit?.type || \"null\",\n      isGroup: edit?.isGroup ?? true,\n      openingBalance: edit?.openingBalance || 0,\n    });\n  }, [edit]);\n  return (\n    <form\n      onSubmit={handleSubmit((values) => {\n        if (values.parent === \"null\") {\n          values.parent = null;\n        }\n        if (values.type === \"null\") {\n          values.type = null;\n        }\n        (edit?._id ? updateMaster : createMaster)(values)\n          .then(({ data }) => {\n            if (!data.success) {\n              return Prompt({ type: \"error\", message: data.message });\n            }\n            onSuccess(data.data);\n          })\n          .catch((err) => Prompt({ type: \"error\", message: err.message }));\n      })}\n      className={`${s.masterForm} grid gap-1`}\n    >\n      <Input label=\"Name\" {...register(\"name\")} required error={errors.name} />\n\n      <Combobox\n        label=\"Parent\"\n        name=\"parent\"\n        control={control}\n        options={[\n          { label: \"None\", value: \"null\" },\n          ...masters.map((item) => ({ label: item.name, value: item._id })),\n        ]}\n      />\n\n      <Combobox\n        label=\"Type\"\n        name=\"type\"\n        control={control}\n        options={[\n          { label: \"None\", value: \"null\" },\n          { label: \"Cash\", value: \"Cash\" },\n          { label: \"Bank\", value: \"Bank\" },\n          { label: \"Customers\", value: \"Customers\" },\n          { label: \"Suppliers\", value: \"Suppliers\" },\n          { label: \"Sales\", value: \"Sales\" },\n          { label: \"Purchase\", value: \"Purchase\" },\n          { label: \"Stock\", value: \"Stock\" },\n          { label: \"Tax\", value: \"Tax\" },\n        ]}\n      />\n\n      <Combobox\n        label=\"Is Group\"\n        name=\"isGroup\"\n        control={control}\n        formOptions={{ required: true }}\n        options={[\n          { label: \"No\", value: false },\n          { label: \"Yes\", value: true },\n        ]}\n      />\n\n      <Input\n        label=\"Opening Balance\"\n        type=\"number\"\n        {...register(\"openingBalance\")}\n        required\n        error={errors.openingBalance}\n      />\n\n      <div className=\"btns\">\n        <button className=\"btn\" disabled={loading}>\n          {edit?._id ? \"Update\" : \"Submit\"}\n        </button>\n      </div>\n    </form>\n  );\n};\n\nexport default Form;\n","import { useForm } from \"react-hook-form\";\nimport { Input, Combobox } from \"Components/elements\";\nimport s from \"./quotes.module.scss\";\n\nconst VoucherFilters = ({ filters, setFilters }) => {\n  const {\n    handleSubmit,\n    register,\n    reset,\n    control,\n    formState: { errors },\n  } = useForm();\n\n  return (\n    <form\n      onSubmit={handleSubmit((values) => {\n        const filters = {};\n        if (values.type) {\n          filters.type = values.type;\n        }\n        if (values.startDate && values.endDate) {\n          filters.startDate = values.startDate;\n          filters.endDate = values.endDate;\n        }\n        setFilters(filters);\n      })}\n      className={`${s.voucherFilters} grid gap-1`}\n    >\n      <Combobox\n        label=\"Type\"\n        name=\"type\"\n        control={control}\n        options={[\n          { label: \"Invoice\", value: \"Invoice\" },\n          { label: \"Sales Return\", value: \"Sales Return\" },\n          { label: \"Purchase\", value: \"Purchase\" },\n          { label: \"Purchase Return\", value: \"Purchase Return\" },\n          { label: \"Receipt\", value: \"Receipt\" },\n          { label: \"Payment\", value: \"Payment\" },\n        ]}\n      />\n\n      <Input\n        label=\"Start Date\"\n        type=\"datetime-local\"\n        {...register(\"startDate\")}\n        required\n        error={errors.startDate}\n      />\n      <Input\n        label=\"End Date\"\n        type=\"datetime-local\"\n        {...register(\"endDate\")}\n        required\n        error={errors.endDate}\n      />\n\n      <div className=\"flex gap-1\">\n        <button className=\"btn\">Search</button>\n        <button\n          className=\"btn secondary\"\n          type=\"button\"\n          onClick={() => {\n            reset();\n            setFilters({});\n          }}\n        >\n          Clear\n        </button>\n      </div>\n    </form>\n  );\n};\n\nexport default VoucherFilters;\n","import { useState, useEffect, useMemo, useRef } from \"react\";\nimport { Table, Moment, Tabs } from \"Components/elements\";\nimport { Prompt, Modal } from \"Components/modal\";\nimport s from \"./quotes.module.scss\";\nimport { useFetch } from \"hooks\";\nimport { endpoints } from \"config\";\n\nimport MasterForm from \"./MasterForm\";\nimport {\n  BsDashSquare,\n  BsFillPlusSquareFill,\n  BsList,\n  BsPlusSquare,\n} from \"react-icons/bs\";\nimport { FiEdit3 } from \"react-icons/fi\";\nimport { PiTreeViewBold } from \"react-icons/pi\";\nimport { CgSpinner } from \"react-icons/cg\";\nimport { da } from \"date-fns/locale\";\nimport VoucherFilters from \"./Filters\";\n\nconst buildTree = (accounts) => {\n  const accountMap = {};\n  accounts.forEach((account) => {\n    account.children = [];\n    accountMap[account._id] = account;\n  });\n\n  const tree = [];\n\n  accounts.forEach((account) => {\n    if (account.parent) {\n      const parent = accountMap[account.parent];\n      if (parent) {\n        parent.children.push(account);\n      }\n    } else {\n      tree.push(account);\n    }\n  });\n\n  return tree;\n};\n\nconst AccountNode = ({\n  account,\n  setAddMaster,\n  activeGroup,\n  activeLeaf,\n  activeLeavs = [],\n  onClick = () => {},\n}) => {\n  const [children, setChildren] = useState([]);\n  const [open, setOpen] = useState(false);\n  const { get: getMasters, loading } = useFetch(endpoints.accountingMasters);\n\n  useEffect(() => {\n    if (account.children) {\n      if (\n        account.children.length &&\n        account.totalChildren > account.children.length\n      ) {\n        getMasters({ query: { parent: account._id } })\n          .then(({ data }) => {\n            if (data.success) {\n              setChildren(data.data);\n              setOpen(true);\n            } else {\n              Prompt({ type: \"error\", message: data.message });\n            }\n          })\n          .catch((err) => Prompt({ type: \"error\", message: err.message }));\n      } else {\n        setChildren(account.children);\n        setOpen(account?.isGroup ? account.children.length > 0 : false);\n      }\n    }\n  }, [account.children]);\n\n  return (\n    <li style={{ whiteSpace: \"nowrap\" }} className={s.listItem}>\n      <div className={s.label}>\n        {account.isGroup && (\n          <>\n            {(children?.length || account.totalChildren) > 0 ? (\n              <button\n                onClick={() => {\n                  if (children?.length === account.totalChildren) {\n                    setOpen(!open);\n                  } else {\n                    getMasters({ query: { parent: account._id } })\n                      .then(({ data }) => {\n                        if (data.success) {\n                          setChildren(data.data);\n                          setOpen(true);\n                        } else {\n                          Prompt({ type: \"error\", message: data.message });\n                        }\n                      })\n                      .catch((err) =>\n                        Prompt({ type: \"error\", message: err.message })\n                      );\n                  }\n                }}\n              >\n                {loading ? (\n                  <CgSpinner className=\"spin\" />\n                ) : open ? (\n                  <BsDashSquare />\n                ) : (\n                  <BsPlusSquare />\n                )}\n              </button>\n            ) : (\n              <button\n                style={{\n                  height: \"16px\",\n                  width: \"16px\",\n                  // background: \"none\",\n                  border: \"1px dashed #818181\",\n                  borderRadius: \"2px\",\n                  pointerEvents: \"none\",\n                }}\n              />\n            )}\n          </>\n        )}\n        <strong\n          className={`${s.accountName} ${\n            (account.isGroup && activeGroup === account._id) ||\n            (!account.isGroup && activeLeaf === account._id) ||\n            activeLeavs.includes(account._id)\n              ? s.highlight\n              : \"\"\n          }`}\n          onClick={() => {\n            onClick(account);\n          }}\n        >\n          {account.name}\n        </strong>\n        <div className={s.btns}>\n          <button className={s.addButton} onClick={() => setAddMaster(account)}>\n            <FiEdit3 />\n          </button>\n          {account.isGroup && (\n            <button\n              className={s.addButton}\n              onClick={() =>\n                setAddMaster({ parent: account._id, type: account.type || \"\" })\n              }\n            >\n              <BsFillPlusSquareFill />\n            </button>\n          )}\n        </div>\n      </div>\n      {open && children.length > 0 && (\n        <ul\n          className={`${s.nestedList} ${\n            account.isGroup && activeGroup === account._id ? s.highlight : \"\"\n          }`}\n        >\n          {children.map((child) => (\n            <AccountNode\n              key={child._id}\n              activeGroup={activeGroup}\n              activeLeaf={activeLeaf}\n              activeLeavs={activeLeavs}\n              account={child}\n              setAddMaster={setAddMaster}\n              onClick={onClick}\n            />\n          ))}\n        </ul>\n      )}\n    </li>\n  );\n};\n\nconst Accounting = ({ setSidebarOpen }) => {\n  const [addMaster, setAddMaster] = useState(null);\n  const [masters, setMasters] = useState([]);\n  const [tab, setTab] = useState(\"voucherListing\");\n  const [open, setOpen] = useState(true);\n  const [analysysAcc, setAnalysysAcc] = useState(null);\n  const [ledger, setLedger] = useState({});\n  const [vouchers, setVouchers] = useState([]);\n  const [journalAcc, setJournalAcc] = useState([]);\n\n  const { get: getMasters } = useFetch(endpoints.accountingMasters);\n\n  const treeData = useMemo(() => buildTree(masters), [masters]);\n\n  useEffect(() => {\n    getMasters({ query: { isGroup: \"true\" } })\n      .then(({ data }) => {\n        if (data.success) {\n          return setMasters(data.data);\n        }\n      })\n      .catch((err) => Prompt({ type: \"error\", message: err.message }));\n  }, []);\n\n  return (\n    <div className={`${s.content} grid gap-1 m-a`}>\n      <div className={`flex ${s.head}`}>\n        <div\n          className={`flex align-center pointer gap_5  ml-1`}\n          onClick={() => setSidebarOpen((prev) => !prev)}\n        >\n          <BsList style={{ fontSize: \"1.75rem\" }} />\n          <h2>Accounting</h2>\n          {/* <button\n            className=\"btn clear iconOnly\"\n            onClick={(e) => {\n              e.stopPropagation();\n              setAddQuote(true);\n            }}\n          >\n            <GoPlus />\n          </button> */}\n        </div>\n      </div>\n\n      <div className={`${s.innerWrapper} ${open ? s.open : \"\"}`}>\n        <div className={s.sidebar}>\n          <button className={s.addButton} onClick={() => setAddMaster({})}>\n            <BsFillPlusSquareFill />\n          </button>\n          <ul>\n            {masters.length > 0 ? (\n              treeData.map((account) => (\n                <AccountNode\n                  key={account._id}\n                  account={account}\n                  setAddMaster={setAddMaster}\n                  activeGroup={tab === \"analysys\" ? analysysAcc?._id : null}\n                  activeLeaf={tab === \"ledgers\" ? ledger?.account?._id : null}\n                  activeLeavs={\n                    tab === \"journals\" ? journalAcc.map((acc) => acc._id) : []\n                  }\n                  onClick={(account) => {\n                    if (tab === \"journals\") {\n                      if (!account.isGroup) {\n                        setJournalAcc((prev) =>\n                          prev.some((acc) => acc._id === account._id)\n                            ? prev.filter((acc) => acc._id !== account._id)\n                            : [...prev, account].filter(\n                                (acc, i, arr) =>\n                                  arr.findIndex(\n                                    (item) => item._id === acc._id\n                                  ) === i\n                              )\n                        );\n                      }\n                      return;\n                    }\n                    if (account.isGroup) {\n                      setAnalysysAcc(account);\n                      setTab(\"analysys\");\n                    } else {\n                      const firstRecords = (vouchers || []).filter(\n                        (item) => item.accountId === account._id\n                      );\n                      const otherRecords = (vouchers || []).filter((item) =>\n                        firstRecords.some((rec) => rec.rec_id === item.rec_id)\n                      );\n                      const allRecords = [\n                        ...firstRecords,\n                        ...otherRecords,\n                      ].filter(\n                        (obj, index, self) =>\n                          index ===\n                          self.findIndex(\n                            (o) =>\n                              o.rec_id === obj.rec_id && o.index === obj.index\n                          )\n                      );\n\n                      const detailedRows = allRecords\n                        .filter((row) => row.accountId !== account._id)\n                        .reduce((p, c) => {\n                          const index = p.findIndex((item) =>\n                            item.some((row) => row.rec_id === c.rec_id)\n                          );\n                          if (index === -1) {\n                            p.push([c]);\n                          } else {\n                            p[index].push(c);\n                          }\n                          return p;\n                        }, [])\n                        .map((item) => {\n                          const accRec = allRecords.find(\n                            (rec) => rec.rec_id === item[0].rec_id\n                          );\n                          if (item.length <= 1) {\n                            return {\n                              ...item[0],\n                              debit: accRec.debit,\n                              credit: accRec.credit,\n                            };\n                          } else {\n                            return {\n                              ...item[0],\n                              details: item.map((row) => ({\n                                label: row.accountName,\n                                value: row.credit || row.debit,\n                              })),\n                              // credit: item.reduce((p, c) => p + c.credit, 0),\n                              // debit: item.reduce((p, c) => p + c.debit, 0),\n                              debit: accRec.debit,\n                              credit: accRec.credit,\n                            };\n                          }\n                        })\n                        .sort((a, b) => (new Date(a) > new Date(b) ? 1 : -1))\n                        .sort((a, b) => (a.index > b.index ? 1 : -1))\n                        .reduce((p, c) => {\n                          if (c.details?.length) {\n                            p.push(\n                              ...[\n                                c,\n                                ...c.details.map((item) => ({\n                                  createdAt: null,\n                                  no: null,\n                                  type: null,\n                                  accountName: (\n                                    <p>\n                                      {item.label}: {item.value.toFixed(2)}\n                                    </p>\n                                  ),\n                                  debit: null,\n                                  credit: null,\n                                })),\n                              ]\n                            );\n                          } else {\n                            p.push(c);\n                          }\n                          return p;\n                        }, []);\n                      setLedger({\n                        account,\n                        rows: detailedRows,\n                      });\n                      setTab(\"ledgers\");\n                    }\n                  }}\n                />\n              ))\n            ) : (\n              <p\n                style={{\n                  marginTop: \"1rem\",\n                  marginBottom: \"1rem\",\n                  textAlign: \"center\",\n                  textWrap: \"balance\",\n                  color: \"#797979\",\n                }}\n              >\n                No accounts have been added yet.\n              </p>\n            )}\n          </ul>\n        </div>\n        <div className={s.innerContent}>\n          <div className=\"flex gap-1 align-center\">\n            <button\n              className=\"btn clear iconOnly\"\n              onClick={() => setOpen(!open)}\n            >\n              <PiTreeViewBold />\n            </button>\n            <Tabs\n              activeTab={tab}\n              tabs={[\n                { label: \"Voucher Listing\", value: \"voucherListing\" },\n                { label: \"Ledgers\", value: \"ledgers\" },\n                { label: \"Accounting Analysys\", value: \"analysys\" },\n                { label: \"Journals\", value: \"journals\" },\n              ]}\n              onChange={(tab) => setTab(tab.value)}\n            />\n          </div>\n          {tab === \"voucherListing\" && (\n            <Vouchers vouchers={vouchers} setVouchers={setVouchers} />\n          )}\n          {tab === \"ledgers\" && (\n            <Ledgers account={ledger?.account} rows={ledger?.rows} />\n          )}\n          {tab === \"analysys\" && <Analysys account={analysysAcc} />}\n          {tab === \"journals\" && <Journals accounts={journalAcc} />}\n        </div>\n      </div>\n\n      <Modal\n        open={addMaster}\n        head\n        label={`${addMaster?._id ? \"Update\" : \"Add\"} Account`}\n        className={s.masterFormModal}\n        setOpen={() => {\n          setAddMaster(null);\n        }}\n      >\n        <MasterForm\n          edit={addMaster}\n          masters={masters}\n          onSuccess={() => {\n            getMasters({ query: { isGroup: \"true\" } })\n              .then(({ data }) => {\n                if (data.success) {\n                  return setMasters(data.data);\n                }\n              })\n              .catch((err) => Prompt({ type: \"error\", message: err.message }));\n            setAddMaster(false);\n          }}\n        />\n      </Modal>\n    </div>\n  );\n};\n\nconst Vouchers = ({ vouchers, setVouchers }) => {\n  const [filters, setFilters] = useState({});\n  const voucherTableRef = useRef();\n\n  const { get: getVouchers } = useFetch(endpoints.accountingVouchers);\n\n  useEffect(() => {\n    getVouchers({ query: filters })\n      .then(({ data }) => {\n        if (data.success) {\n          setVouchers(data.data);\n        } else {\n          Prompt({ type: \"error\", message: data.message });\n        }\n      })\n      .catch((err) => Prompt({ type: \"error\", message: err.message }));\n  }, [filters]);\n\n  return (\n    <div className={s.innerContentWrapper}>\n      <VoucherFilters filters={filters} setFilters={setFilters} />\n      <Table\n        ref={voucherTableRef}\n        countRecord={() =>\n          vouchers.reduce(\n            (p, c, i, arr) => p + (arr[i - 1]?.rec_id !== c.rec_id ? 1 : 0),\n            0\n          )\n        }\n        className={s.vouchers}\n        columns={[\n          { label: \"Date\" },\n          { label: \"No\" },\n          { label: \"Type\" },\n          { label: \"Account Name\" },\n          { label: \"Debit\", className: \"text-right\" },\n          { label: \"Credit\", className: \"text-right\" },\n          // { label: \"Action\" },\n        ]}\n        tfoot={() => (\n          <tfoot>\n            <tr className={s.footer}>\n              <td />\n              <td />\n              <td />\n              <td className=\"text-right\">Total</td>\n              <td className=\"text-right\">\n                {vouchers.reduce((p, c) => p + c.debit, 0).toFixed(2)}\n              </td>\n              <td className=\"text-right\">\n                {vouchers.reduce((p, c) => p + c.credit, 0).toFixed(2)}\n              </td>\n            </tr>\n          </tfoot>\n        )}\n      >\n        {vouchers.map((row, i, arr) => (\n          <tr key={i}>\n            <td className=\"grid\">\n              {arr[i - 1]?.rec_id !== row.rec_id && (\n                <>\n                  <Moment style={{ fontSize: \"14px\" }} format=\"DD MMM YYYY\">\n                    {row.createdAt}\n                  </Moment>\n                  <Moment format=\"hh:mma\">{row.createdAt}</Moment>\n                </>\n              )}\n            </td>\n            <td>{arr[i - 1]?.rec_id !== row.rec_id && row.no}</td>\n            <td>{arr[i - 1]?.rec_id !== row.rec_id && row.type}</td>\n            <td>{row.accountName}</td>\n            <td className=\"text-right\">\n              {row.debit ? row.debit.toFixed(2) : null}\n            </td>\n            <td className=\"text-right\">\n              {row.credit ? row.credit.toFixed(2) : null}\n            </td>\n          </tr>\n        ))}\n      </Table>\n    </div>\n  );\n};\n\nconst Ledgers = ({ account, rows }) => {\n  return (\n    <div className={s.innerContentWrapper}>\n      {rows?.length > 0 ? (\n        <>\n          <p\n            style={{ fontWeight: \"600\", fontSize: \"1.2em\" }}\n            className=\"mt-1 pl_5\"\n          >\n            {account.name}\n          </p>\n          <Table\n            className={s.vouchers}\n            columns={[\n              { label: \"Date\" },\n              { label: \"No\" },\n              { label: \"Type\" },\n              { label: \"Account Name\" },\n              { label: \"Debit\", className: \"text-right\" },\n              { label: \"Credit\", className: \"text-right\" },\n            ]}\n            tfoot={\n              <tfoot style={{ marginTop: \"0\" }}>\n                <tr className={s.footer}>\n                  <td />\n                  <td />\n                  <td />\n                  <td className=\"text-right\">Total</td>\n                  <td className=\"text-right\">\n                    {rows.reduce((p, c) => p + c.debit, 0).toFixed(2)}\n                  </td>\n                  <td className=\"text-right\">\n                    {rows.reduce((p, c) => p + c.credit, 0).toFixed(2)}\n                  </td>\n                </tr>\n              </tfoot>\n            }\n          >\n            {rows.map((row, i, arr) => {\n              return (\n                <tr key={i}>\n                  <td className=\"grid\">\n                    {row.createdAt && arr[i - 1]?.rec_id !== row.rec_id && (\n                      <>\n                        <Moment\n                          style={{ fontSize: \"14px\" }}\n                          format=\"DD MMM YYYY\"\n                        >\n                          {row.createdAt}\n                        </Moment>\n                        <Moment format=\"hh:mma\">{row.createdAt}</Moment>\n                      </>\n                    )}\n                  </td>\n                  <td>{arr[i - 1]?.rec_id !== row.rec_id && row.no}</td>\n                  <td>{arr[i - 1]?.rec_id !== row.rec_id && row.type}</td>\n                  <td className=\"grid\">\n                    {row.details?.length > 0 ? \"Details:\" : row.accountName}\n                  </td>\n                  <td className=\"text-right\">\n                    {row.debit ? row.debit.toFixed(2) : null}\n                  </td>\n                  <td className=\"text-right\">\n                    {row.credit ? row.credit.toFixed(2) : null}\n                  </td>\n                </tr>\n              );\n            })}\n          </Table>\n        </>\n      ) : account ? (\n        <p className={s.analysysPlaceholder}>\n          No records found for <strong>{account.name}</strong>.\n        </p>\n      ) : (\n        <p className={s.analysysPlaceholder}>No account has been selected.</p>\n      )}\n    </div>\n  );\n};\n\nconst Analysys = ({ account }) => {\n  const [months, setMonths] = useState([]);\n  const [data, setData] = useState([]);\n  const [calculation, setCalculation] = useState(\"sub_debit\");\n  const { get, loading } = useFetch(endpoints.accountingMonthlyAnalysys);\n  useEffect(() => {\n    if (account) {\n      get({ query: { accountId: account._id } })\n        .then(({ data }) => {\n          if (data.success) {\n            setData(data.data);\n            setMonths(data.months);\n          } else {\n            Prompt({ type: \"error\", message: data.message });\n          }\n        })\n        .catch((err) => Prompt({ type: \"error\", message: err.message }));\n    } else {\n      setData([]);\n      setMonths([]);\n    }\n  }, [account]);\n  return (\n    <div className={s.innerContentWrapper}>\n      {account ? (\n        <div>\n          <div className=\"mt-1 flex gap-2 align-center\">\n            <p\n              style={{ fontWeight: \"600\", fontSize: \"1.2em\" }}\n              className=\"pl_5\"\n            >\n              {account.name}\n            </p>\n            <div className=\"flex gap-2\">\n              <label className=\"flex align-center gap_5\">\n                <input\n                  name=\"calculation\"\n                  type=\"radio\"\n                  value=\"sub_debit\"\n                  defaultChecked\n                  onChange={(e) => setCalculation(e.target.value)}\n                />\n                Sum Of Debits\n              </label>\n              <label className=\"flex align-center gap_5\">\n                <input\n                  name=\"calculation\"\n                  type=\"radio\"\n                  value=\"sub_credit\"\n                  onChange={(e) => setCalculation(e.target.value)}\n                />\n                Sum Of Credit\n              </label>\n              <label className=\"flex align-center gap_5\">\n                <input\n                  name=\"calculation\"\n                  type=\"radio\"\n                  value=\"net\"\n                  onChange={(e) => setCalculation(e.target.value)}\n                />\n                Net\n              </label>\n              <label className=\"flex align-center gap_5\">\n                <input\n                  name=\"calculation\"\n                  type=\"radio\"\n                  value=\"balance\"\n                  onChange={(e) => setCalculation(e.target.value)}\n                />\n                Balance\n              </label>\n            </div>\n          </div>\n          <Table\n            loading={loading}\n            className={s.analysys}\n            columns={[\n              { label: account.name },\n              ...(months || []).map((item) => ({\n                label: item.label,\n                className: \"text-right\",\n              })),\n            ]}\n            tfoot={\n              <tfoot style={{ marginTop: \"0\" }}>\n                <tr\n                  className={s.footer}\n                  style={{\n                    borderTop: \"1px solid #979797\",\n                    padding: \"0 0.5rem\",\n                    paddingTop: \"1rem\",\n                  }}\n                >\n                  <td>Total</td>\n                  {(months || []).map((month, i) => (\n                    <td key={i} className=\"text-right\">\n                      {analyzeAccounts(\n                        calculation,\n                        data.reduce((prev, curr, j) => {\n                          prev.push(...curr.entries[i]);\n                          return prev;\n                        }, [])\n                      )}\n                    </td>\n                  ))}\n                </tr>\n              </tfoot>\n            }\n          >\n            {(data || []).map((row, i, arr) => {\n              return (\n                <tr key={i}>\n                  <td className=\"grid\">{row.name}</td>\n                  {(months || []).map((month, i) => (\n                    <td key={i} className=\"text-right\">\n                      {analyzeAccounts(\n                        calculation,\n                        row.entries[i],\n                        row.openingBalance\n                      )}\n                    </td>\n                  ))}\n                </tr>\n              );\n            })}\n          </Table>\n        </div>\n      ) : (\n        <p className={s.analysysPlaceholder}>No group has been selected.</p>\n      )}\n    </div>\n  );\n};\n\nconst analyzeAccounts = (calculation, entries, openingBalance = 0) => {\n  let result = null;\n  if (calculation === \"sub_debit\") {\n    result = entries.reduce((p, c) => p + c.debit, 0);\n  } else if (calculation === \"sub_credit\") {\n    result = entries.reduce((p, c) => p + c.credit, 0);\n  } else if (calculation === \"net\") {\n    result = entries.reduce((p, c) => p + c.debit - c.credit, 0);\n  } else if (calculation === \"balance\") {\n    result =\n      entries.reduce((p, c) => p + c.debit - c.credit, 0) + openingBalance;\n    // return;\n  }\n  return result.toFixed(2);\n};\n\nconst Journals = ({ accounts }) => {\n  const [data, setData] = useState([]);\n  const { get, loading } = useFetch(endpoints.accountingjournals);\n\n  useEffect(() => {\n    get({ query: { accountIds: accounts.map((acc) => acc._id).join(\",\") } })\n      .then(({ data }) => {\n        if (data.success) {\n          setData(data.data);\n        } else {\n          Prompt({ type: \"error\", message: data.message });\n        }\n      })\n      .catch((err) => Prompt({ type: \"error\", message: err.message }));\n  }, [accounts]);\n  return (\n    <div className={s.innerContentWrapper}>\n      {accounts.length ? (\n        <div>\n          <div className=\"mt-1 flex gap-2 align-center\">\n            <p\n              style={{ fontWeight: \"600\", fontSize: \"1.2em\" }}\n              className=\"pl_5\"\n            >\n              {accounts.length} Accounts\n            </p>\n          </div>\n          <Table\n            loading={loading}\n            className={s.analysys}\n            columns={[\n              { label: \"Account\" },\n              { label: \"Debit\", className: \"text-right\" },\n              { label: \"Credit\", className: \"text-right\" },\n              { label: \"Balance\", className: \"text-right\" },\n            ]}\n            tfoot={\n              <tfoot style={{ marginTop: \"0\" }}>\n                <tr\n                  className={s.footer}\n                  style={{\n                    borderTop: \"1px solid #979797\",\n                    padding: \"0 0.5rem\",\n                    paddingTop: \"1rem\",\n                  }}\n                >\n                  <td>Total</td>\n                  <td className=\"text-right\">\n                    {data.reduce((p, c) => p + c.debit, 0).toFixed(2)}\n                  </td>\n                  <td className=\"text-right\">\n                    {data.reduce((p, c) => p + c.credit, 0).toFixed(2)}\n                  </td>\n                  <td className=\"text-right\">\n                    {data\n                      .reduce((p, c) => {\n                        const balance =\n                          c.debit -\n                          c.credit +\n                          (accounts.find((acc) => acc._id === c._id)\n                            ?.openingBalance || 0);\n                        return p + balance;\n                      }, 0)\n                      .toFixed(2)}\n                  </td>\n                </tr>\n              </tfoot>\n            }\n          >\n            {(data || []).map((row, i) => {\n              const balance =\n                row.debit -\n                row.credit +\n                (accounts.find((acc) => acc._id === row._id)?.openingBalance ||\n                  0);\n              return (\n                <tr key={i}>\n                  <td className=\"grid\">{row.accountName}</td>\n                  <td className=\"grid text-right\">\n                    {row.debit ? row.debit.toFixed(2) : null}\n                  </td>\n                  <td className=\"grid text-right\">\n                    {row.credit ? row.credit.toFixed(2) : null}\n                  </td>\n                  <td className=\"grid text-right\">{balance.toFixed(2)}</td>\n                </tr>\n              );\n            })}\n          </Table>\n        </div>\n      ) : (\n        <p className={s.analysysPlaceholder}>No group has been selected.</p>\n      )}\n    </div>\n  );\n};\n\nexport default Accounting;\n"],"names":["mainSchema","yup","name","required","parent","type","oneOf","nullable","isGroup","openingBalance","typeError","edit","masters","onSuccess","useForm","resolver","useYup","handleSubmit","register","reset","control","errors","formState","useFetch","endpoints","_id","createMaster","post","updateMaster","put","loading","useEffect","onSubmit","values","then","data","success","Prompt","message","catch","err","className","s","label","error","options","value","map","item","formOptions","disabled","filters","setFilters","startDate","endDate","onClick","AccountNode","account","setAddMaster","activeGroup","activeLeaf","activeLeavs","useState","children","setChildren","open","setOpen","getMasters","get","length","totalChildren","query","style","whiteSpace","height","width","border","borderRadius","pointerEvents","includes","child","Vouchers","vouchers","setVouchers","voucherTableRef","useRef","getVouchers","ref","countRecord","reduce","p","c","i","arr","rec_id","columns","tfoot","debit","toFixed","credit","row","fontSize","format","createdAt","no","accountName","Ledgers","rows","fontWeight","marginTop","details","Analysys","months","setMonths","setData","calculation","setCalculation","accountId","defaultChecked","onChange","e","target","borderTop","padding","paddingTop","month","analyzeAccounts","prev","curr","j","push","entries","result","Journals","accounts","accountIds","acc","join","find","balance","setSidebarOpen","addMaster","setMasters","tab","setTab","analysysAcc","setAnalysysAcc","ledger","setLedger","journalAcc","setJournalAcc","treeData","useMemo","accountMap","forEach","tree","buildTree","firstRecords","filter","otherRecords","some","rec","allRecords","obj","index","self","findIndex","o","detailedRows","accRec","sort","a","b","Date","marginBottom","textAlign","textWrap","color","activeTab","tabs","head","MasterForm"],"sourceRoot":""}