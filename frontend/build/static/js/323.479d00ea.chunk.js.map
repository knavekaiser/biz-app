{"version":3,"file":"static/js/323.479d00ea.chunk.js","mappings":"+NACA,EAA0B,0BAA1B,EAA+D,2BAA/D,EAAyG,+BAAzG,EAAkJ,0BAAlJ,EAAwL,4BAAxL,EAA2N,uBAA3N,EAA2U,2BAA3U,EAA4Y,0BAA5Y,EAAib,2BAAjb,EAA8d,kC,qECUxdA,EAASC,EAAAA,GAAW,CACxBC,SAAUD,EAAAA,KAAWE,aAqVvB,EAlVa,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,KAAMC,EAAgB,EAAhBA,UACZC,GAAcC,EAAAA,EAAAA,YAAWC,EAAAA,GAAzBF,UACR,GAA8BG,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACA,GAUIC,EAAAA,EAAAA,IAAQ,CACVC,UAAUC,EAAAA,EAAAA,GAAOd,KAVjBe,EADF,EACEA,aACAC,EAFF,EAEEA,SACAC,EAHF,EAGEA,MACAC,EAJF,EAIEA,QACAC,EALF,EAKEA,SACAC,EANF,EAMEA,SACAC,EAPF,EAOEA,SACAC,EARF,EAQEA,YACaC,EATf,EASEC,UAAaD,OAKf,GAIIE,EAAAA,EAAAA,GAASC,EAAAA,GAAAA,SAAA,YAA6B,OAAJtB,QAAI,IAAJA,OAAA,EAAAA,EAAMuB,MAAO,KAH3CC,EADR,EACEC,KACKC,EAFP,EAEEC,IACAC,EAHF,EAGEA,QAGIC,GAAaC,EAAAA,EAAAA,cACjB,SAACC,GACC,IACEzB,EAAQ0B,MAAK,SAACC,EAAOC,GACnB,QACED,EAAME,aACW,WAAfF,EAAMG,MAAqBH,EAAMI,QACjB,UAAfJ,EAAMG,MAAoBH,EAAMK,UAIhCL,EAAMG,KAMU,UAAfH,EAAMG,MAAqBH,EAAMK,MAKX,WAAfL,EAAMG,MAAsBH,EAAMI,QAC3CpB,EAAS,WAAD,OAAYiB,EAAZ,WAAwB,CAC9BE,KAAM,SACNG,QAAS,yBAPXtB,EAAS,WAAD,OAAYiB,EAAZ,UAAuB,CAC7BE,KAAM,SACNG,QAAS,wBARbtB,EAAS,WAAD,OAAYiB,EAAZ,SAAsB,CAC5BE,KAAM,SACNG,QAAS,0BAeRN,EAAME,WACTlB,EAAS,WAAD,OAAYiB,EAAZ,cAA2B,CACjCE,KAAM,SACNG,QAAS,+BAGN,MAjCX,CAyCA,GAFmBjC,EAAQkC,QAAO,SAACC,EAAGC,GAAJ,OAAUD,KAAMC,EAAEJ,OAAS,KAAI,KAC7ChC,EAAQkC,QAAO,SAACC,EAAGC,GAAJ,OAAUD,KAAMC,EAAEL,QAAU,KAAI,GAEjE,OAAOM,EAAAA,EAAAA,GAAO,CACZP,KAAM,QACNG,QAAS,8CAIZvC,EAAO0B,EAAcF,GAAW,CAC/B1B,SAAUiC,EAAOjC,SACjB8C,OAAQb,EAAOa,QAAU,KACzBC,kBAAmBvC,EAAQwC,KAAI,SAACb,GAAD,MAAY,CACzCE,UAAWF,EAAME,UACjBG,OAAQL,EAAMK,OAAS,EACvBD,QAASJ,EAAMI,QAAU,QAG1BU,MAAK,YAAe,IAAZC,EAAW,EAAXA,KACP,IAAKA,EAAKC,QACR,OAAON,EAAAA,EAAAA,GAAO,CAAEP,KAAM,QAASG,QAASS,EAAKT,UAE/CtC,EAAU+C,EAAKA,SAEhBE,OAAM,SAACC,GAAD,OAASR,EAAAA,EAAAA,GAAO,CAAEP,KAAM,QAASG,QAASY,EAAIZ,gBAEzD,CAACjC,IA+CH,OA5CA8C,EAAAA,EAAAA,YAAU,WAAO,IAAD,IACVC,EAAW,OAAJrD,QAAI,IAAJA,GAAAA,EAAMF,SAAW,IAAIwD,KAAJ,OAAStD,QAAT,IAASA,OAAT,EAASA,EAAMF,UAAY,IAAIwD,KACvDpD,GAAamD,EAAO,IAAIC,KAAKpD,EAAUqD,WACzCF,EAAOnD,EAAUqD,UACRrD,GAAamD,EAAO,IAAIC,KAAKpD,EAAUsD,WAChDH,EAAOnD,EAAUsD,SAEnB,IAI2B,EAJrBzB,EAAS,CACbjC,UAAU2D,EAAAA,EAAAA,IAAOJ,EAAM,cACvBT,QAAY,OAAJ5C,QAAI,IAAJA,OAAA,EAAAA,EAAM4C,SAAU,IAE1B,OAAI5C,QAAJ,IAAIA,GAAJ,UAAIA,EAAMM,eAAV,OAAI,EAAeoD,OACb,OAAJ1D,QAAI,IAAJA,GAAA,UAAAA,EAAMM,eAAN,SAAeqD,SAAQ,SAAC1B,EAAOC,GAC7BH,EAAO,WAAD,OAAYG,EAAZ,UACJD,EAAMI,OAASJ,EAAMK,MAAQ,SAAW,QAC1CP,EAAO,WAAD,OAAYG,EAAZ,eAA6BD,EAAME,UACzCJ,EAAO,WAAD,OAAYG,EAAZ,WAAyBD,EAAMK,MACrCP,EAAO,WAAD,OAAYG,EAAZ,YAA0BD,EAAMI,WAGxCN,EAAO6B,eAAiB,SACxB7B,EAAO8B,oBAAsB,GAC7B9B,EAAO+B,gBAAkB,GACzB/B,EAAOgC,iBAAmB,IAE5BlD,EAAMkB,GACNxB,EACM,OAAJP,QAAI,IAAJA,GAAA,UAAAA,EAAMM,eAAN,SAAeoD,OAAf,OACI1D,QADJ,IACIA,OADJ,EACIA,EAAMM,QAAQwC,KAAI,SAACkB,GAAD,eAAC,UACdA,GADa,IAEhB5B,KAAM4B,EAAK3B,OAAS2B,EAAK1B,MAAQ,SAAW,aAE9C,CACE,CACEf,IAAK0C,KAAKC,SAASC,SAAS,IAC5B/B,KAAM,SACND,UAAW,GACXG,MAAO,GACPD,OAAQ,QAIjB,CAACrC,KAGF,gBAAKoE,UAAS,yBAAoBC,GAAlC,UACE,gBAAKD,UAAS,UAAKC,EAAL,eAAd,UACE,kBACED,UAAS,UAAKC,EAAL,2BACTC,SAAU3D,EAAakB,GAFzB,WAIE,SAAC,MAAD,wBACE0C,MAAM,OACNnC,KAAK,QACAlC,GAAa,CAChBsE,KAAKf,EAAAA,EAAAA,IAAOvD,EAAUqD,UAAW,cACjCkB,KAAKhB,EAAAA,EAAAA,IAAOvD,EAAUsD,QAAS,gBAE7B5C,EAAS,aAPf,IAQEb,UAAQ,EACR2E,MAAOvD,EAAOrB,aAGhB,qCAEEQ,GAAW,IAAIwC,KAAI,SAACb,EAAOC,GAAR,OACnB,iBAAqBkC,UAAWC,EAAhC,WACE,SAAC,KAAD,CACEE,MAAM,OACNzD,QAASA,EACT6D,KAAI,kBAAazC,EAAb,SACJ0C,YAAa,CAAE7E,UAAU,GACzB8E,QAAS,CACP,CAAEN,MAAO,SAAUO,MAAO,UAC1B,CAAEP,MAAO,QAASO,MAAO,UAE3BC,SAAU,SAACC,GACS,WAAdA,EAAIF,OACN5D,EAAY,WAAD,OAAYgB,EAAZ,WACXlB,EAAS,WAAD,OAAYkB,EAAZ,UAAuB,IAC1BD,EAAMK,OACTtB,EAAS,WAAD,OAAYkB,EAAZ,YAAyBD,EAAMK,OAAS,KAGlDpB,EAAY,WAAD,OAAYgB,EAAZ,YACXlB,EAAS,WAAD,OAAYkB,EAAZ,WAAwB,IAC3BD,EAAMI,QACTrB,EAAS,WAAD,OAAYkB,EAAZ,WAAwBD,EAAMI,QAAU,IAGpD9B,GAAW,SAAC0E,GAAD,OACTA,EAAKnC,KAAI,SAACkB,GAAD,OACPA,EAAKzC,MAAQU,EAAMV,KAAnB,0BAESyC,GAFT,IAGM5B,KAAM4C,EAAIF,OACQ,UAAdE,EAAIF,QACL7C,EAAMI,QAAU,CACfC,OAAQL,EAAMI,OACdA,OAAQ,IAEM,WAAd2C,EAAIF,QACL7C,EAAMK,OAAS,CACdD,QAASJ,EAAMK,MACfA,MAAO,IAGb0B,YAKZ,SAAC,KAAD,CACEO,MAAM,UACNzD,QAASA,EACT6D,KAAI,kBAAazC,EAAb,cACJ0C,YAAa,CAAE7E,UAAU,GACzBmF,IAAK5D,EAAAA,GAAAA,kBACL6D,SAAU,SAACC,GAAD,MAAQ,CAChBC,QAAS,QACTV,KAAMS,GAAK,KAEbE,WAAY,SAACtC,GAAD,MAAW,CACrBuB,MAAM,GAAD,OAAKvB,EAAK2B,MAAV,OAAiB3B,EAAKZ,KAAL,aAAkBY,EAAKZ,MAAS,IACtD0C,MAAO9B,EAAKzB,IACZgE,QAASvC,IAEX+B,SAAU,SAACC,GACTzE,GAAW,SAAC0E,GAAD,OACTA,EAAKnC,KAAI,SAACkB,GAAD,OACPA,EAAKzC,MAAQU,EAAMV,KAAnB,kBACSyC,GADT,IACe7B,UAAW6C,EAAIF,QAC1Bd,QAGRjD,EAAS,WAAD,OAAYmB,EAAZ,YAAiBD,EAAMG,WAGnC,SAAC,MAAD,gBACEmC,MAAM,QACNnC,KAAK,SACLoD,KAAK,OACLzF,UAAQ,EACR0F,SAAyB,WAAfxD,EAAMG,MACZxB,EAAS,WAAD,OAAYsB,EAAZ,YANd,IAOE6C,SAAU,SAACW,GACTxE,EAAY,WAAD,OAAYgB,EAAZ,WACX3B,GAAW,SAAC0E,GAAD,OACTA,EAAKnC,KAAI,SAACkB,GAAD,OACPA,EAAKzC,MAAQU,EAAMV,KAAnB,kBACSyC,GADT,IACe1B,MAAOoD,EAAEC,OAAOb,QAC3Bd,SAIVU,MAAOvD,EAAO,WAAD,OAAYe,EAAZ,eAEf,SAAC,MAAD,gBACEqC,MAAM,SACNnC,KAAK,SACLoD,KAAK,OACLzF,UAAQ,EACR0F,SAAyB,UAAfxD,EAAMG,MACZxB,EAAS,WAAD,OAAYsB,EAAZ,aANd,IAOE6C,SAAU,SAACW,GACTxE,EAAY,WAAD,OAAYgB,EAAZ,YACX3B,GAAW,SAAC0E,GAAD,OACTA,EAAKnC,KAAI,SAACkB,GAAD,OACPA,EAAKzC,MAAQU,EAAMV,KAAnB,kBACSyC,GADT,IACe3B,OAAQqD,EAAEC,OAAOb,QAC5Bd,SAIVU,MAAOvD,EAAO,WAAD,OAAYe,EAAZ,gBAGP,OAAP5B,QAAO,IAAPA,OAAA,EAAAA,EAASoD,QAAS,IACjB,mBACEtB,KAAK,SACLwD,QAAS,kBACPrF,GAAW,SAAC0E,GAAD,OACTA,EAAKY,QAAO,SAAC7B,GAAD,OAAUA,EAAKzC,MAAQU,EAAMV,WAG7C6C,UAAU,qBAPZ,UASE,SAAC,MAAD,QAzHInC,EAAMV,SA+HhBK,IACA,mBACEQ,KAAK,SACLgC,UAAU,gBACVwB,QAAS,WACP5E,EAAS,WAAD,OAAYV,EAAQoD,OAApB,SAAmC,UAC3CnD,GAAW,SAAC0E,GAAD,wBACNA,GADM,CAET,CACE1D,IAAK0C,KAAKC,SAASC,SAAS,IAC5B/B,KAAM,SACND,UAAW,GACXG,MAAO,GACPD,OAAQ,UAZhB,6BAqBF,mBAEA,iBAAK+B,UAAWC,EAAhB,WACE,qBACA,iBAAMD,UAAU,aAAhB,oBACA,iBAAMA,UAAU,aAAhB,SACG9D,EAAQkC,QAAO,SAACC,EAAGC,GAAJ,OAAUD,KAAMC,EAAEJ,OAAS,KAAI,MAEjD,iBAAM8B,UAAU,aAAhB,SACG9D,EAAQkC,QAAO,SAACC,EAAGC,GAAJ,OAAUD,KAAMC,EAAEL,QAAU,KAAI,SAIpD,SAAC,MAAD,gBACEkC,MAAM,UACF3D,EAAS,WAFf,IAGE8D,MAAOvD,EAAOyB,WAGhB,gBAAKwB,UAAU,OAAf,UACE,mBAAQA,UAAU,MAAMqB,SAAU7D,EAAlC,SACG5B,EAAO,SAAW,qB,6BClKjC,EAxKiB,SAAC,GAAwB,IAAtB8F,EAAqB,EAArBA,eAClB,GAAoC3F,EAAAA,EAAAA,YAAWC,EAAAA,GAAvC2F,EAAR,EAAQA,OAAQC,EAAhB,EAAgBA,gBAChB,GAAgC3F,EAAAA,EAAAA,UAAS,IAAzC,eAAO4F,EAAP,KAAiBC,EAAjB,KACA,GAA0B7F,EAAAA,EAAAA,UAAS,MAAnC,eAAO4B,EAAP,KAAckE,EAAd,KACA,GAAgC9F,EAAAA,EAAAA,WAAS,GAAzC,eAAO+F,EAAP,KAAiBC,EAAjB,KAEA,GAAsChF,EAAAA,EAAAA,GAASC,EAAAA,GAAAA,UAAlCgF,EAAb,EAAQC,IAAkB3E,EAA1B,EAA0BA,QACV4E,GAAgBnF,EAAAA,EAAAA,GAASC,EAAAA,GAAAA,SAAqB,SAAtDmF,OAWR,OATArD,EAAAA,EAAAA,YAAU,WACRkD,IACGvD,MAAK,YAAe,IAAZC,EAAW,EAAXA,KACP,GAAIA,EAAKC,QACP,OAAOiD,EAAYlD,EAAKA,SAG3BE,OAAM,SAACC,GAAD,OAASR,EAAAA,EAAAA,GAAO,CAAEP,KAAM,QAASG,QAASY,EAAIZ,eACtD,KAED,iBAAK6B,UAAS,UAAKC,EAAL,uBAAd,WACE,gBAAKD,UAAS,eAAUC,GAAxB,UACE,iBACED,UAAS,wCACTwB,QAAS,kBAAME,GAAe,SAACb,GAAD,OAAWA,MAF3C,WAIE,SAAC,MAAD,CAAQyB,MAAO,CAAEC,SAAU,cAC3B,qCACCX,EAAgB,oBACf,mBACE5B,UAAU,qBACVwB,QAAS,SAACF,GACRA,EAAEkB,kBACFP,GAAY,IAJhB,UAOE,SAAC,MAAD,YAKR,SAAC,KAAD,CACEzE,QAASA,EACTwC,UAAWC,EACXwC,QAAS,CACP,CAAEtC,MAAO,QACT,CAAEA,MAAO,MACT,CAAEA,MAAO,WACT,CAAEA,MAAO,QAASH,UAAW,cAC7B,CAAEG,MAAO,SAAUH,UAAW,cAC9B,CAAEG,MAAO,WATb,SAYG0B,EAASnD,KAAI,SAACkB,EAAM9B,EAAG4E,GAAV,iBACZ,2BAQE,eAAI1C,UAAU,OAAd,UACG,UAAA0C,EAAI5E,EAAI,UAAR,eAAY6E,UAAW/C,EAAK+C,SAC3B,iCACE,SAAC,KAAD,CAAQL,MAAO,CAAEC,SAAU,QAAUK,OAAO,cAA5C,SACGhD,EAAKlE,YAER,SAAC,KAAD,CAAQkH,OAAO,SAAf,SAAyBhD,EAAKlE,iBAIpC,yBAAK,UAAAgH,EAAI5E,EAAI,UAAR,eAAY6E,UAAW/C,EAAK+C,QAAU/C,EAAKiD,MAChD,eAAI7C,UAAWC,EAAf,SAA4BL,EAAKkD,eACjC,eAAI9C,UAAU,aAAd,SACGJ,EAAK1B,MACF0B,EAAK1B,MAAM6E,QAAQ,EAAnB,OAAsBpB,QAAtB,IAAsBA,OAAtB,EAAsBA,EAAQqB,iBAC9B,QAEN,eAAIhD,UAAS,aAAb,SACGJ,EAAK3B,OAAS2B,EAAK3B,OAAOgF,IAAI,EAAhB,OAAmBtB,QAAnB,IAAmBA,OAAnB,EAAmBA,EAAQqB,iBAAmB,QAE9D,UAAAN,EAAI5E,EAAI,UAAR,eAAY6E,UAAW/C,EAAK+C,SAC3B,SAAC,KAAD,CACE3C,UAAWC,EACXiD,QAAO,CACL,CACEC,MAAM,SAAC,MAAD,IACNhD,MAAO,OACPqB,QAAS,WACPO,EAAS,CACP5E,IAAKyC,EAAK+C,OACVjH,SAAUkE,EAAKlE,SACf8C,OAAQoB,EAAKpB,OACbtC,QAASwG,EACNjB,QAAO,SAAC3D,GAAD,OAAOA,EAAE6E,SAAW/C,EAAK+C,UAChCS,MAAK,SAACC,EAAGC,GAAJ,OAAWD,EAAEE,MAAQD,EAAEC,MAAQ,GAAK,OAE9CtB,GAAY,MAbX,eAgBDL,EAAgB,kBAChB,CACE,CACEuB,MAAM,SAAC,MAAD,IACNhD,MAAO,SACPqB,QAAS,kBACPjD,EAAAA,EAAAA,GAAO,CACLP,KAAM,eACNG,QAAQ,8CACRqF,SAAU,WACRpB,EACE,GACA,CAAEqB,OAAQ,CAAE,OAAQ7D,EAAK+C,UACzBhE,MAAK,YAAe,IAAZC,EAAW,EAAXA,KACJA,EAAKC,QACPiD,GAAY,SAACjB,GAAD,OACVA,EAAKY,QACH,SAAC5D,GAAD,OAAWA,EAAM8E,SAAW/C,EAAK+C,cAIrCpE,EAAAA,EAAAA,GAAO,CACLP,KAAM,QACNG,QAASS,EAAKT,mBAQ9B,SAxELyB,EAAKzC,WA+EhB,SAAC,IAAD,CACEuG,KAAM1B,EACN2B,MAAI,EACJxD,MAAK,UAAKtC,EAAQ,SAAW,MAAxB,oBACLmC,UAAWC,EACX2D,QAAS,WACP7B,EAAS,MACTE,GAAY,IAPhB,UAUE,SAAC4B,EAAD,CACEjI,KAAMiC,EACNhC,UAAW,SAACiI,GACVhC,GAAY,SAACjB,GAAD,MACV,kBACKiD,IADL,OAEKjD,EAAKY,QAAO,SAAC7B,GAAD,OAAUA,EAAK+C,SAAWmB,EAAW,GAAGnB,YACvDS,MAAK,SAACC,EAAGC,GAAJ,OACL,IAAIpE,KAAKmE,EAAE3H,UAAY,IAAIwD,KAAKoE,EAAE5H,UAAY,GAAK,QAGvDqG,EAAS,MACTE,GAAY","sources":["webpack://cash-app/./src/Views/Dashboard/Journals/journals.module.scss?a73a","Views/Dashboard/Journals/JournalForm.js","Views/Dashboard/Journals/index.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"content\":\"journals_content__hWAt6\",\"journals\":\"journals_journals__Vq-81\",\"addFormModal\":\"journals_addFormModal__se4DT\",\"addForm\":\"journals_addForm__nN3gp\",\"entryForm\":\"journals_entryForm__DnwHQ\",\"head\":\"journals_head__D2DRL\",\"purchaseTable\":\"journals_purchaseTable__uIcyc\",\"date\":\"journals_date__ylJ8T\",\"customer\":\"journals_customer__YflP1\",\"net\":\"journals_net__u81qk\",\"actions\":\"journals_actions__PdwNS\",\"mainForm\":\"journals_mainForm__WGtx1\",\"mainFormWrapper\":\"journals_mainFormWrapper__yzg3c\"};","import { useState, useEffect, useCallback, useContext } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { Input, Select, Combobox, moment, Textarea } from \"Components/elements\";\nimport { useFetch, useYup } from \"hooks\";\nimport { Prompt } from \"Components/modal\";\nimport s from \"./journals.module.scss\";\nimport * as yup from \"yup\";\nimport { endpoints } from \"config\";\nimport { RiCloseLargeFill } from \"react-icons/ri\";\nimport { SiteContext } from \"SiteContext\";\n\nconst schema = yup.object({\n  dateTime: yup.date().required(),\n});\n\nconst Form = ({ edit, onSuccess }) => {\n  const { finPeriod } = useContext(SiteContext);\n  const [entries, setEntries] = useState([]);\n  const {\n    handleSubmit,\n    register,\n    reset,\n    control,\n    setFocus,\n    setValue,\n    setError,\n    clearErrors,\n    formState: { errors },\n  } = useForm({\n    resolver: useYup(schema),\n  });\n\n  const {\n    post: saveEntry,\n    put: updateEntry,\n    loading,\n  } = useFetch(endpoints.journals + `/${edit?._id || \"\"}`);\n\n  const submitForm = useCallback(\n    (values) => {\n      if (\n        entries.some((entry, i) => {\n          if (\n            entry.accountId &&\n            ((entry.type === \"credit\" && entry.credit) ||\n              (entry.type === \"debit\" && entry.debit))\n          ) {\n            return false;\n          }\n          if (!entry.type) {\n            setError(`entries_${i}_type`, {\n              type: \"custom\",\n              message: \"Please select a type.\",\n            });\n          } else {\n            if (entry.type === \"debit\" && !entry.debit) {\n              setError(`entries_${i}_debit`, {\n                type: \"custom\",\n                message: \"Please enter debit.\",\n              });\n            } else if (entry.type === \"credit\" && !entry.credit) {\n              setError(`entries_${i}_credit`, {\n                type: \"custom\",\n                message: \"Please enter credit.\",\n              });\n            }\n          }\n          if (!entry.accountId) {\n            setError(`entries_${i}_accountId`, {\n              type: \"custom\",\n              message: \"Please select an account.\",\n            });\n          }\n          return true;\n        })\n      ) {\n        return;\n      }\n\n      const totalDebit = entries.reduce((p, c) => p + +(c.debit || 0), 0);\n      const totalCredit = entries.reduce((p, c) => p + +(c.credit || 0), 0);\n      if (totalDebit !== totalCredit) {\n        return Prompt({\n          type: \"error\",\n          message: \"Total debit does not match total credit.\",\n        });\n      }\n\n      (edit ? updateEntry : saveEntry)({\n        dateTime: values.dateTime,\n        detail: values.detail || null,\n        accountingEntries: entries.map((entry) => ({\n          accountId: entry.accountId,\n          debit: +entry.debit || 0,\n          credit: +entry.credit || 0,\n        })),\n      })\n        .then(({ data }) => {\n          if (!data.success) {\n            return Prompt({ type: \"error\", message: data.message });\n          }\n          onSuccess(data.data);\n        })\n        .catch((err) => Prompt({ type: \"error\", message: err.message }));\n    },\n    [entries]\n  );\n\n  useEffect(() => {\n    let date = edit?.dateTime ? new Date(edit?.dateTime) : new Date();\n    if (finPeriod && date < new Date(finPeriod.startDate)) {\n      date = finPeriod.startDate;\n    } else if (finPeriod && date > new Date(finPeriod.endDate)) {\n      date = finPeriod.endDate;\n    }\n    const values = {\n      dateTime: moment(date, \"YYYY-MM-DD\"),\n      detail: edit?.detail || \"\",\n    };\n    if (edit?.entries?.length) {\n      edit?.entries?.forEach((entry, i) => {\n        values[`entries_${i}_type`] =\n          entry.credit > entry.debit ? \"credit\" : \"debit\";\n        values[`entries_${i}_accountId`] = entry.accountId;\n        values[`entries_${i}_debit`] = entry.debit;\n        values[`entries_${i}_credit`] = entry.credit;\n      });\n    } else {\n      values.entries_0_type = \"credit\";\n      values.entries_0_accountId = \"\";\n      values.entries_0_debit = \"\";\n      values.entries_0_credit = \"\";\n    }\n    reset(values);\n    setEntries(\n      edit?.entries?.length\n        ? edit?.entries.map((item) => ({\n            ...item,\n            type: item.credit > item.debit ? \"credit\" : \"debit\",\n          }))\n        : [\n            {\n              _id: Math.random().toString(36),\n              type: \"credit\",\n              accountId: \"\",\n              debit: \"\",\n              credit: \"\",\n            },\n          ]\n    );\n  }, [edit]);\n\n  return (\n    <div className={`grid gap-1 p-1 ${s.addForm}`}>\n      <div className={`${s.mainForm} grid gap-1`}>\n        <form\n          className={`${s.mainFormWrapper} grid gap-1 all-columns`}\n          onSubmit={handleSubmit(submitForm)}\n        >\n          <Input\n            label=\"Date\"\n            type=\"date\"\n            {...(finPeriod && {\n              min: moment(finPeriod.startDate, \"YYYY-MM-DD\"),\n              max: moment(finPeriod.endDate, \"YYYY-MM-DD\"),\n            })}\n            {...register(\"dateTime\")}\n            required\n            error={errors.dateTime}\n          />\n\n          <h3>Entries</h3>\n\n          {(entries || []).map((entry, i) => (\n            <div key={entry._id} className={s.entryForm}>\n              <Combobox\n                label=\"Type\"\n                control={control}\n                name={`entries_${i}_type`}\n                formOptions={{ required: true }}\n                options={[\n                  { label: \"Credit\", value: \"credit\" },\n                  { label: \"Debit\", value: \"debit\" },\n                ]}\n                onChange={(opt) => {\n                  if (opt.value === \"credit\") {\n                    clearErrors(`entries_${i}_debit`);\n                    setValue(`entries_${i}_debit`, 0);\n                    if (+entry.debit) {\n                      setValue(`entries_${i}_credit`, +entry.debit || 0);\n                    }\n                  } else {\n                    clearErrors(`entries_${i}_credit`);\n                    setValue(`entries_${i}_credit`, 0);\n                    if (+entry.credit) {\n                      setValue(`entries_${i}_debit`, +entry.credit || 0);\n                    }\n                  }\n                  setEntries((prev) =>\n                    prev.map((item) =>\n                      item._id === entry._id\n                        ? {\n                            ...item,\n                            type: opt.value,\n                            ...(opt.value === \"debit\" &&\n                              +entry.credit && {\n                                debit: +entry.credit,\n                                credit: 0,\n                              }),\n                            ...(opt.value === \"credit\" &&\n                              +entry.debit && {\n                                credit: +entry.debit,\n                                debit: 0,\n                              }),\n                          }\n                        : item\n                    )\n                  );\n                }}\n              />\n              <Select\n                label=\"Account\"\n                control={control}\n                name={`entries_${i}_accountId`}\n                formOptions={{ required: true }}\n                url={endpoints.accountingMasters}\n                getQuery={(v) => ({\n                  isGroup: \"false\",\n                  name: v || \"\",\n                })}\n                handleData={(data) => ({\n                  label: `${data.name}${data.type ? ` - ${data.type}` : \"\"}`,\n                  value: data._id,\n                  account: data,\n                })}\n                onChange={(opt) => {\n                  setEntries((prev) =>\n                    prev.map((item) =>\n                      item._id === entry._id\n                        ? { ...item, accountId: opt.value }\n                        : item\n                    )\n                  );\n                  setFocus(`entries_${i}_${entry.type}`);\n                }}\n              />\n              <Input\n                label=\"Debit\"\n                type=\"number\"\n                step=\"0.01\"\n                required\n                disabled={entry.type === \"credit\"}\n                {...register(`entries_${i}_debit`)}\n                onChange={(e) => {\n                  clearErrors(`entries_${i}_debit`);\n                  setEntries((prev) =>\n                    prev.map((item) =>\n                      item._id === entry._id\n                        ? { ...item, debit: e.target.value }\n                        : item\n                    )\n                  );\n                }}\n                error={errors[`entries_${i}_debit`]}\n              />\n              <Input\n                label=\"Credit\"\n                type=\"number\"\n                step=\"0.01\"\n                required\n                disabled={entry.type === \"debit\"}\n                {...register(`entries_${i}_credit`)}\n                onChange={(e) => {\n                  clearErrors(`entries_${i}_credit`);\n                  setEntries((prev) =>\n                    prev.map((item) =>\n                      item._id === entry._id\n                        ? { ...item, credit: e.target.value }\n                        : item\n                    )\n                  );\n                }}\n                error={errors[`entries_${i}_credit`]}\n              />\n\n              {entries?.length > 1 && (\n                <button\n                  type=\"button\"\n                  onClick={() =>\n                    setEntries((prev) =>\n                      prev.filter((item) => item._id !== entry._id)\n                    )\n                  }\n                  className=\"btn clear iconOnly\"\n                >\n                  <RiCloseLargeFill />\n                </button>\n              )}\n            </div>\n          ))}\n\n          {!loading && (\n            <button\n              type=\"button\"\n              className=\"btn secondary\"\n              onClick={() => {\n                setValue(`entries_${entries.length}_type`, \"credit\");\n                setEntries((prev) => [\n                  ...prev,\n                  {\n                    _id: Math.random().toString(36),\n                    type: \"credit\",\n                    accountId: \"\",\n                    debit: \"\",\n                    credit: \"\",\n                  },\n                ]);\n              }}\n            >\n              Add More Entry\n            </button>\n          )}\n\n          <hr />\n\n          <div className={s.entryForm}>\n            <span />\n            <span className=\"text-right\">Total</span>\n            <span className=\"text-right\">\n              {entries.reduce((p, c) => p + +(c.debit || 0), 0)}\n            </span>\n            <span className=\"text-right\">\n              {entries.reduce((p, c) => p + +(c.credit || 0), 0)}\n            </span>\n          </div>\n\n          <Textarea\n            label=\"Detail\"\n            {...register(`detail`)}\n            error={errors.detail}\n          />\n\n          <div className=\"btns\">\n            <button className=\"btn\" disabled={loading}>\n              {edit ? \"Update\" : \"Submit\"}\n            </button>\n          </div>\n        </form>\n      </div>\n    </div>\n  );\n};\n\nexport default Form;\n","import { useState, useEffect, useContext } from \"react\";\nimport { SiteContext } from \"SiteContext\";\nimport { Table, TableActions, Moment } from \"Components/elements\";\nimport { FaRegTrashAlt } from \"react-icons/fa\";\nimport { Prompt, Modal } from \"Components/modal\";\nimport s from \"./journals.module.scss\";\nimport { useFetch } from \"hooks\";\nimport { endpoints } from \"config\";\n\nimport JournalForm from \"./JournalForm\";\nimport { BsList } from \"react-icons/bs\";\nimport { GoPlus } from \"react-icons/go\";\nimport { FaPencil } from \"react-icons/fa6\";\n\nconst Journals = ({ setSidebarOpen }) => {\n  const { config, checkPermission } = useContext(SiteContext);\n  const [journals, setJournals] = useState([]);\n  const [entry, setEntry] = useState(null);\n  const [addEntry, setAddEntry] = useState(false);\n\n  const { get: getJournals, loading } = useFetch(endpoints.journals);\n  const { remove: deleteEntry } = useFetch(endpoints.journals + \"/{ID}\");\n\n  useEffect(() => {\n    getJournals()\n      .then(({ data }) => {\n        if (data.success) {\n          return setJournals(data.data);\n        }\n      })\n      .catch((err) => Prompt({ type: \"error\", message: err.message }));\n  }, []);\n  return (\n    <div className={`${s.content} grid gap-1 m-a p-1`}>\n      <div className={`flex ${s.head}`}>\n        <div\n          className={`flex align-center pointer gap_5  ml-1`}\n          onClick={() => setSidebarOpen((prev) => !prev)}\n        >\n          <BsList style={{ fontSize: \"1.75rem\" }} />\n          <h2>Journals</h2>\n          {checkPermission(\"journal_create\") && (\n            <button\n              className=\"btn clear iconOnly\"\n              onClick={(e) => {\n                e.stopPropagation();\n                setAddEntry(true);\n              }}\n            >\n              <GoPlus />\n            </button>\n          )}\n        </div>\n      </div>\n      <Table\n        loading={loading}\n        className={s.journals}\n        columns={[\n          { label: \"Date\" },\n          { label: \"No\" },\n          { label: \"Account\" },\n          { label: \"Debit\", className: \"text-right\" },\n          { label: \"Credit\", className: \"text-right\" },\n          { label: \"Action\" },\n        ]}\n      >\n        {journals.map((item, i, arr) => (\n          <tr\n            // onClick={() => {\n            //   setEntry(item);\n            //   setAddEntry(true);\n            // }}\n            // style={{ cursor: \"pointer\" }}\n            key={item._id}\n          >\n            <td className=\"grid\">\n              {arr[i - 1]?.rec_id !== item.rec_id && (\n                <>\n                  <Moment style={{ fontSize: \"14px\" }} format=\"DD MMM YYYY\">\n                    {item.dateTime}\n                  </Moment>\n                  <Moment format=\"hh:mma\">{item.dateTime}</Moment>\n                </>\n              )}\n            </td>\n            <td>{arr[i - 1]?.rec_id !== item.rec_id && item.no}</td>\n            <td className={s.customer}>{item.accountName}</td>\n            <td className=\"text-right\">\n              {item.debit\n                ? item.debit.toFixed(2, config?.numberSeparator)\n                : null}\n            </td>\n            <td className={`text-right`}>\n              {item.credit ? item.credit.fix(2, config?.numberSeparator) : null}\n            </td>\n            {arr[i - 1]?.rec_id !== item.rec_id && (\n              <TableActions\n                className={s.actions}\n                actions={[\n                  {\n                    icon: <FaPencil />,\n                    label: \"Edit\",\n                    onClick: () => {\n                      setEntry({\n                        _id: item.rec_id,\n                        dateTime: item.dateTime,\n                        detail: item.detail,\n                        entries: arr\n                          .filter((i) => i.rec_id === item.rec_id)\n                          .sort((a, b) => (a.index > b.index ? 1 : -1)),\n                      });\n                      setAddEntry(true);\n                    },\n                  },\n                  ...(checkPermission(\"journal_delete\")\n                    ? [\n                        {\n                          icon: <FaRegTrashAlt />,\n                          label: \"Delete\",\n                          onClick: () =>\n                            Prompt({\n                              type: \"confirmation\",\n                              message: `Are you sure you want to remove this entry?`,\n                              callback: () => {\n                                deleteEntry(\n                                  {},\n                                  { params: { \"{ID}\": item.rec_id } }\n                                ).then(({ data }) => {\n                                  if (data.success) {\n                                    setJournals((prev) =>\n                                      prev.filter(\n                                        (entry) => entry.rec_id !== item.rec_id\n                                      )\n                                    );\n                                  } else {\n                                    Prompt({\n                                      type: \"error\",\n                                      message: data.message,\n                                    });\n                                  }\n                                });\n                              },\n                            }),\n                        },\n                      ]\n                    : []),\n                ]}\n              />\n            )}\n          </tr>\n        ))}\n      </Table>\n      <Modal\n        open={addEntry}\n        head\n        label={`${entry ? \"Update\" : \"Add\"} Journal Entries`}\n        className={s.addFormModal}\n        setOpen={() => {\n          setEntry(null);\n          setAddEntry(false);\n        }}\n      >\n        <JournalForm\n          edit={entry}\n          onSuccess={(newEntries) => {\n            setJournals((prev) =>\n              [\n                ...newEntries,\n                ...prev.filter((item) => item.rec_id !== newEntries[0].rec_id),\n              ].sort((a, b) =>\n                new Date(a.dateTime) > new Date(b.dateTime) ? 1 : -1\n              )\n            );\n            setEntry(null);\n            setAddEntry(false);\n          }}\n        />\n      </Modal>\n    </div>\n  );\n};\n\nexport default Journals;\n"],"names":["schema","yup","dateTime","required","edit","onSuccess","finPeriod","useContext","SiteContext","useState","entries","setEntries","useForm","resolver","useYup","handleSubmit","register","reset","control","setFocus","setValue","setError","clearErrors","errors","formState","useFetch","endpoints","_id","saveEntry","post","updateEntry","put","loading","submitForm","useCallback","values","some","entry","i","accountId","type","credit","debit","message","reduce","p","c","Prompt","detail","accountingEntries","map","then","data","success","catch","err","useEffect","date","Date","startDate","endDate","moment","length","forEach","entries_0_type","entries_0_accountId","entries_0_debit","entries_0_credit","item","Math","random","toString","className","s","onSubmit","label","min","max","error","name","formOptions","options","value","onChange","opt","prev","url","getQuery","v","isGroup","handleData","account","step","disabled","e","target","onClick","filter","setSidebarOpen","config","checkPermission","journals","setJournals","setEntry","addEntry","setAddEntry","getJournals","get","deleteEntry","remove","style","fontSize","stopPropagation","columns","arr","rec_id","format","no","accountName","toFixed","numberSeparator","fix","actions","icon","sort","a","b","index","callback","params","open","head","setOpen","JournalForm","newEntries"],"sourceRoot":""}