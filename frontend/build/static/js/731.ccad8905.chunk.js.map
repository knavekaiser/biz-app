{"version":3,"file":"static/js/731.ccad8905.chunk.js","mappings":"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","sources":["webpack://cash-app/./src/Views/Dashboard/FinPeriods/style.module.scss?b24e","Views/Dashboard/FinPeriods/Form.js","Views/Dashboard/FinPeriods/index.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"content\":\"style_content__Oj8it\",\"emps\":\"style_emps__m2DET\",\"addFormModal\":\"style_addFormModal__mwoE3\",\"addForm\":\"style_addForm__KgwCr\",\"empDetail\":\"style_empDetail__tRHTS\",\"box\":\"style_box__lXoE1\",\"mainForm\":\"style_mainForm__-zjJ0\",\"head\":\"style_head__IlMrD\"};","import { useEffect } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { Input, moment } from \"Components/elements\";\nimport { useYup, useFetch } from \"hooks\";\nimport { Prompt } from \"Components/modal\";\nimport * as yup from \"yup\";\nimport s from \"./style.module.scss\";\nimport { endpoints } from \"config\";\n\nconst mainSchema = yup.object({\n  label: yup.string().required(\"Label is required.\"),\n  startDate: yup.string().required(\"Start Date is required.\"),\n  endDate: yup.string().required(\"End Date is required.\"),\n});\n\nconst Form = ({ edit, onSuccess }) => {\n  const {\n    handleSubmit,\n    reset,\n    register,\n    formState: { errors },\n  } = useForm({\n    resolver: useYup(mainSchema),\n  });\n\n  const { post, put, loading } = useFetch(\n    endpoints.finPeriods + `/${edit?._id || \"\"}`\n  );\n\n  useEffect(() => {\n    reset({\n      label: edit?.label || \"\",\n      startDate: edit?.startDate ? moment(edit.startDate, \"YYYY-MM-DD\") : \"\",\n      endDate: edit?.endDate ? moment(edit.endDate, \"YYYY-MM-DD\") : \"\",\n    });\n  }, [edit]);\n  return (\n    <div className={`grid gap-1 p-1 ${s.addForm}`}>\n      <form\n        onSubmit={handleSubmit((values) => {\n          (edit ? put : post)(values)\n            .then(({ data }) => {\n              if (!data.success) {\n                return Prompt({ type: \"error\", message: data.message });\n              }\n              onSuccess(data.data);\n            })\n            .catch((err) => Prompt({ type: \"error\", message: err.message }));\n        })}\n        className={`${s.mainForm} grid gap-1`}\n      >\n        <Input\n          label=\"Label\"\n          {...register(\"label\")}\n          required\n          error={errors.label}\n        />\n        <Input\n          label=\"Start Date\"\n          type=\"date\"\n          {...register(\"startDate\")}\n          error={errors.startDate}\n          required\n        />\n        <Input\n          label=\"End Date\"\n          type=\"date\"\n          {...register(\"endDate\")}\n          required\n          error={errors.endDate}\n        />\n\n        <div className=\"btns\">\n          <button className=\"btn\" disabled={loading}>\n            {edit ? \"Update\" : \"Submit\"}\n          </button>\n        </div>\n      </form>\n    </div>\n  );\n};\n\nexport default Form;\n","import { useState, useContext } from \"react\";\nimport { Moment, Table, TableActions } from \"Components/elements\";\nimport { FaPencilAlt } from \"react-icons/fa\";\nimport { Modal } from \"Components/modal\";\nimport s from \"./style.module.scss\";\n\nimport EmpForm from \"./Form\";\nimport { SiteContext } from \"SiteContext\";\nimport { BsList } from \"react-icons/bs\";\nimport { GoPlus } from \"react-icons/go\";\n\nconst Emps = ({ setSidebarOpen }) => {\n  const { finPeriods, setFinPeriods, checkPermission } =\n    useContext(SiteContext);\n  const [period, setPeriod] = useState(null);\n  const [addPeriod, setAddPeriod] = useState(false);\n\n  return (\n    <div className={`${s.content} grid gap-1 m-a p-1`}>\n      <div className={`flex ${s.head}`}>\n        <div\n          className={`flex align-center pointer gap_5  ml-1`}\n          onClick={() => setSidebarOpen((prev) => !prev)}\n        >\n          <BsList style={{ fontSize: \"1.75rem\" }} />\n          <h2>Financial Periods</h2>\n          {checkPermission(\"fin_period_create\") && (\n            <button\n              className=\"btn clear iconOnly\"\n              onClick={(e) => {\n                e.stopPropagation();\n                setAddPeriod(true);\n              }}\n            >\n              <GoPlus />\n            </button>\n          )}\n        </div>\n      </div>\n      <Table\n        className={s.emps}\n        columns={[\n          { label: \"Label\" },\n          { label: \"Start Date\" },\n          { label: \"End Date\" },\n          { label: \"Action\" },\n        ]}\n      >\n        {finPeriods.map((item) => (\n          <tr\n            onClick={() => {\n              setPeriod(item);\n              setAddPeriod(true);\n            }}\n            style={{ cursor: \"pointer\" }}\n            key={item._id}\n          >\n            <td>{item.label}</td>\n            <td>\n              <Moment format=\"DD MMM YYYY\">{item.startDate}</Moment>\n            </td>\n            <td>\n              <Moment format=\"DD MMM YYYY\">{item.endDate}</Moment>\n            </td>\n            <TableActions\n              className={s.actions}\n              actions={[\n                ...(checkPermission(\"fin_period_update\")\n                  ? [\n                      {\n                        icon: <FaPencilAlt />,\n                        label: \"Update\",\n                        onClick: () => {\n                          setPeriod(item);\n                          setAddPeriod(true);\n                        },\n                      },\n                    ]\n                  : []),\n              ]}\n            />\n          </tr>\n        ))}\n      </Table>\n      <Modal\n        open={addPeriod}\n        head\n        label={`${period ? \"Update\" : \"Add\"} Financial Period`}\n        className={s.addFormModal}\n        setOpen={() => {\n          setPeriod(null);\n          setAddPeriod(false);\n        }}\n      >\n        <EmpForm\n          edit={period}\n          onSuccess={(newEmp) => {\n            if (period) {\n              setFinPeriods((prev) => {\n                if (newEmp) {\n                  return prev.map((item) =>\n                    item._id === newEmp._id ? newEmp : item\n                  );\n                } else {\n                  return prev.filter((item) => item._id !== period._id);\n                }\n              });\n              setPeriod(null);\n            } else {\n              setFinPeriods((prev) => [...prev, newEmp]);\n            }\n            setAddPeriod(false);\n          }}\n        />\n      </Modal>\n    </div>\n  );\n};\n\nexport default Emps;\n"],"names":["mainSchema","yup","label","required","startDate","endDate","edit","onSuccess","useForm","resolver","useYup","handleSubmit","reset","register","errors","formState","useFetch","endpoints","_id","post","put","loading","useEffect","moment","className","s","onSubmit","values","then","data","success","Prompt","type","message","catch","err","error","disabled","setSidebarOpen","useContext","SiteContext","finPeriods","setFinPeriods","checkPermission","useState","period","setPeriod","addPeriod","setAddPeriod","onClick","prev","style","fontSize","e","stopPropagation","columns","map","item","cursor","format","actions","icon","open","head","setOpen","newEmp","filter"],"sourceRoot":""}