{"version":3,"file":"static/js/791.f26c2947.chunk.js","mappings":"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","sources":["webpack://cash-app/./src/Views/Dashboard/AdminBusinesses/sales.module.scss?13a3","Views/Dashboard/AdminBusinesses/BusinessForm.js","Views/Dashboard/AdminBusinesses/index.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"content\":\"sales_content__GdsYo\",\"sales\":\"sales_sales__uj55C\",\"head\":\"sales_head__+MPID\",\"addSaleForm\":\"sales_addSaleForm__SX3Wi\",\"itemForm\":\"sales_itemForm__6fi8Q\",\"itemName\":\"sales_itemName__IgaET\",\"mainForm\":\"sales_mainForm__E2evN\",\"print\":\"sales_print__qVWTI\"};","import { useEffect, useState } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { Input, Select } from \"Components/elements\";\nimport { useYup, useFetch } from \"hooks\";\nimport { Prompt } from \"Components/modal\";\nimport * as yup from \"yup\";\nimport s from \"./sales.module.scss\";\nimport { endpoints } from \"config\";\n\nconst Form = ({ edit, onSuccess }) => {\n  const [next, setNext] = useState(false);\n  const {\n    control,\n    handleSubmit,\n    register,\n    reset,\n    formState: { errors },\n  } = useForm({\n    resolver: useYup(\n      yup.object({\n        name: yup.string().required(),\n        phone: yup.string().required(),\n        password: edit ? yup.string() : yup.string().required(),\n        subPlan: yup.string().required(),\n      })\n    ),\n  });\n\n  const {\n    post: saveBusiness,\n    put: updateBusiness,\n    loading,\n  } = useFetch(endpoints.businesses + `/${edit?._id || \"\"}`);\n\n  useEffect(() => {\n    reset({\n      name: edit?.name || \"\",\n      phone: edit?.phone || \"\",\n      password: \"\",\n      subPlan: edit?.subscription?.plan?._id || \"\",\n    });\n  }, [edit]);\n  return (\n    <div className={`grid gap-1 p-1 ${s.addRoleForm}`}>\n      <form\n        autoComplete=\"new-password\"\n        onSubmit={handleSubmit((values) => {\n          if (!values.password) {\n            delete values.password;\n          }\n          (edit ? updateBusiness : saveBusiness)(values)\n            .then(({ data }) => {\n              if (!data.success) {\n                return Prompt({ type: \"error\", message: data.message });\n              }\n              onSuccess(data.data, next);\n            })\n            .catch((err) => Prompt({ type: \"error\", message: err.message }));\n        })}\n        className={`${s.mainForm} grid gap-1`}\n      >\n        <Input\n          label=\"Name\"\n          {...register(\"name\")}\n          required\n          error={errors.name}\n        />\n\n        <Input\n          label=\"Phone\"\n          {...register(\"phone\")}\n          required\n          error={errors.phone}\n        />\n\n        <Input\n          label=\"Password\"\n          type=\"password\"\n          {...register(\"password\")}\n          required={!edit}\n          error={errors.password}\n        />\n\n        <Select\n          control={control}\n          label=\"Subscription Plan*\"\n          name=\"subPlan\"\n          url={endpoints.subPlans}\n          getQuery={(inputValue, selected) => ({\n            name: inputValue,\n            _id: selected,\n          })}\n          handleData={(item) => ({\n            label: item.name,\n            value: item._id,\n          })}\n        />\n\n        <div className=\"btns\">\n          <button className=\"btn\" disabled={loading}>\n            {edit ? \"Update\" : \"Submit\"}\n          </button>\n          {!edit && (\n            <button\n              className=\"btn\"\n              disabled={loading}\n              onClick={() => {\n                setNext(true);\n              }}\n            >\n              Next\n            </button>\n          )}\n        </div>\n      </form>\n    </div>\n  );\n};\n\nexport default Form;\n","import { useContext, useEffect, useState } from \"react\";\nimport { SiteContext } from \"SiteContext\";\nimport { Table, TableActions } from \"Components/elements\";\nimport s from \"./sales.module.scss\";\nimport { Modal, Prompt } from \"Components/modal\";\nimport { useFetch } from \"hooks\";\nimport { endpoints } from \"config\";\nimport BusinessForm from \"./BusinessForm\";\nimport { useNavigate } from \"react-router-dom\";\nimport { paths } from \"config\";\nimport { FaPencilAlt } from \"react-icons/fa\";\nimport { FiLogIn } from \"react-icons/fi\";\nimport { BsList } from \"react-icons/bs\";\nimport { GoPlus } from \"react-icons/go\";\n\nconst Businesses = ({ setSidebarOpen }) => {\n  const { setBusiness, setConfig, setUser } = useContext(SiteContext);\n  const [businesses, setBusinesses] = useState([]);\n  const [addBusiness, setAddBusiness] = useState(false);\n  const navigate = useNavigate();\n\n  const { get: getBusinesses } = useFetch(endpoints.findBusinesses);\n  const { post: logoutAndLogin } = useFetch(endpoints.adminSwitchAccount);\n\n  useEffect(() => {\n    getBusinesses()\n      .then(({ data }) => {\n        if (data.success) {\n          setBusinesses(data.data);\n        } else {\n          Prompt({ type: \"error\", message: data.message });\n        }\n      })\n      .catch((err) => Prompt({ type: \"error\", message: err.message }));\n  }, []);\n\n  return (\n    <div className={`${s.content} grid gap-1 m-a`}>\n      <div className={`flex ${s.head} align-center gap-1`}>\n        <div\n          className={`flex align-center pointer gap_5  ml-1`}\n          onClick={() => setSidebarOpen((prev) => !prev)}\n        >\n          <BsList style={{ fontSize: \"1.75rem\" }} />\n          <h2>All Businesses</h2>\n        </div>\n        <button\n          className=\"btn clear iconOnly\"\n          onClick={() => setAddBusiness(true)}\n        >\n          <GoPlus />\n        </button>\n      </div>\n      <Table\n        className={s.sales}\n        columns={[\n          { label: \"Business\" },\n          { label: \"Phone\" },\n          { label: \"Plan\" },\n          { label: \"Actions\" },\n        ]}\n      >\n        {businesses.map((item) => (\n          <tr\n            onClick={(e) => {\n              if ([\"TR\", \"TD\"].includes(e.target.nodeName)) {\n                setBusiness({ business: item });\n                setConfig(item.config);\n              }\n            }}\n            style={{ cursor: \"pointer\" }}\n            key={item._id}\n          >\n            <td>{item.phone}</td>\n            <td>{item.name}</td>\n            <td>{item.subscription?.plan?.name}</td>\n            <TableActions\n              className={s.actions}\n              actions={[\n                {\n                  icon: <FiLogIn style={{ fontSize: \"1.15rem\" }} />,\n                  label: \"Login as this Business\",\n                  callBack: () => {\n                    Prompt({\n                      type: \"confirmation\",\n                      message:\n                        \"Are you sure you want to logout and login as this business?\",\n                      callback: () => {\n                        logoutAndLogin({ phone: item.phone })\n                          .then(({ data }) => {\n                            if (data.success) {\n                              setUser(data.data);\n                              localStorage.setItem(\n                                \"userType\",\n                                data.data.userType\n                              );\n                              window.location =\n                                paths.dashboard.replace(\"*\", \"\") + paths.quotes;\n                              return;\n                            }\n                            Prompt({ type: \"error\", message: data.message });\n                          })\n                          .catch((err) =>\n                            Prompt({ type: \"error\", message: err.message })\n                          );\n                      },\n                    });\n                  },\n                },\n                {\n                  icon: <FaPencilAlt />,\n                  label: \"Edit\",\n                  callBack: () => {\n                    setAddBusiness(item);\n                  },\n                },\n              ]}\n            />\n          </tr>\n        ))}\n      </Table>\n      <Modal\n        open={!!addBusiness}\n        head\n        label={`${addBusiness?._id ? \"View / Update\" : \"Add\"} Business`}\n        className={s.addBusinessFormModal}\n        setOpen={() => {\n          setAddBusiness(null);\n        }}\n      >\n        <BusinessForm\n          edit={addBusiness?._id ? addBusiness : null}\n          onSuccess={(newBusiness, next) => {\n            if (addBusiness?._id) {\n              setBusinesses((prev) =>\n                prev.map((item) =>\n                  item._id === newBusiness._id ? newBusiness : item\n                )\n              );\n            } else {\n              setBusinesses((prev) => [...prev, newBusiness]);\n            }\n            setAddBusiness(null);\n            if (next) {\n              setBusiness({ business: newBusiness });\n              setConfig(newBusiness.config);\n              navigate(\n                paths.dashboard.replace(\"*\", \"\") +\n                  paths.settings.baseUrl.replace(\"*\", \"\") +\n                  paths.settings.businessInformation,\n                { state: { next } }\n              );\n            }\n          }}\n        />\n      </Modal>\n    </div>\n  );\n};\n\nexport default Businesses;\n"],"names":["edit","onSuccess","useState","next","setNext","useForm","resolver","useYup","yup","name","required","phone","password","subPlan","control","handleSubmit","register","reset","errors","formState","useFetch","endpoints","_id","saveBusiness","post","updateBusiness","put","loading","useEffect","subscription","plan","className","s","autoComplete","onSubmit","values","then","data","success","Prompt","type","message","catch","err","label","error","url","getQuery","inputValue","selected","handleData","item","value","disabled","onClick","setSidebarOpen","useContext","SiteContext","setBusiness","setConfig","setUser","businesses","setBusinesses","addBusiness","setAddBusiness","navigate","useNavigate","getBusinesses","get","logoutAndLogin","prev","style","fontSize","columns","map","e","includes","target","nodeName","business","config","cursor","actions","icon","callBack","callback","localStorage","setItem","userType","window","location","paths","open","head","setOpen","BusinessForm","newBusiness","state"],"sourceRoot":""}