{"version":3,"file":"static/js/518.eee55495.chunk.js","mappings":"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","sources":["webpack://cash-app/./src/Views/Dashboard/Receipts/receipts.module.scss?e274","Views/Dashboard/Receipts/ReceiptForm.js","Views/Dashboard/Receipts/index.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"content\":\"receipts_content__z6trl\",\"receipts\":\"receipts_receipts__NH-V3\",\"addReceiptForm\":\"receipts_addReceiptForm__n7XLC\",\"receiptDetail\":\"receipts_receiptDetail__nmLry\",\"box\":\"receipts_box__vj9u4\",\"noContent\":\"receipts_noContent__fNjH0\",\"items\":\"receipts_items__Ga40U\",\"name\":\"receipts_name__sxSXf\",\"itemForm\":\"receipts_itemForm__7BZu3\",\"btns\":\"receipts_btns__z9YQE\",\"mainForm\":\"receipts_mainForm__WJKvS\",\"mainFormWrapper\":\"receipts_mainFormWrapper__Ag34X\",\"invoiceTable\":\"receipts_invoiceTable__cNmy2\",\"detail\":\"receipts_detail__juo0m\",\"label\":\"receipts_label__EIIS1\",\"viewOnly\":\"receipts_viewOnly__Pzz+e\",\"print\":\"receipts_print__mpSLr\",\"logo\":\"receipts_logo__4Dcyr\",\"taxes\":\"receipts_taxes__ujk7o\",\"totalAmount\":\"receipts_totalAmount__pmhFy\",\"word\":\"receipts_word__J2MQt\",\"digit\":\"receipts_digit__cQdkI\",\"sign\":\"receipts_sign__n8aJo\",\"signature\":\"receipts_signature__G5kL0\",\"head\":\"receipts_head__gXPc3\",\"date\":\"receipts_date__L92hv\",\"no\":\"receipts_no__Xfm-Y\",\"customer\":\"receipts_customer__Xbq4A\",\"net\":\"receipts_net__ltS8B\",\"actions\":\"receipts_actions__JRhnz\",\"itemName\":\"receipts_itemName__TXJZQ\"};","import { useState, useEffect, useContext, useRef, useCallback } from \"react\";\nimport { SiteContext } from \"SiteContext\";\nimport { useForm } from \"react-hook-form\";\nimport {\n  Input,\n  Textarea,\n  Combobox,\n  Table,\n  TableActions,\n  SearchField,\n  Select,\n  Tabs,\n  moment,\n  Moment,\n} from \"Components/elements\";\nimport { useYup, useFetch } from \"hooks\";\nimport { Prompt } from \"Components/modal\";\nimport { FaPencilAlt, FaRegTrashAlt, FaTimes, FaCheck } from \"react-icons/fa\";\nimport * as yup from \"yup\";\nimport s from \"./receipts.module.scss\";\nimport { useReactToPrint } from \"react-to-print\";\nimport { endpoints } from \"config\";\n\nimport PrintInvoice from \"./printInvoice\";\n\nconst mainSchema = yup.object({\n  date: yup.string().required(),\n  // type: yup.string().required(),\n  amount: yup\n    .number()\n    .min(1, \"Enter more than 0\")\n    .required()\n    .typeError(\"Enter a valid amount\"),\n  customerAccountId: yup.string().required(),\n  cashAccountId: yup.string().required(),\n  // customerName: yup.string().required(\"Customer name is a required field\"),\n  customerDetail: yup.string().required(\"Customer detail is a required field\"),\n});\n\nconst itemSchema = yup.object({\n  no: yup.string().required(),\n  amount: yup\n    .number()\n    .min(0, \"Price can not be less than 0\")\n    .required()\n    .typeError(\"Enter a valid Number\"),\n  net: yup.number(),\n  due: yup.number(),\n});\n\nconst Detail = ({ label, value, className }) => {\n  return (\n    <p className={`${s.detail} ${className || \"\"}`}>\n      <span className={s.label}>{label}:</span>{\" \"}\n      <span className={s.value}>{value}</span>\n    </p>\n  );\n};\n\nconst Form = ({ edit, receipts, onSuccess }) => {\n  const { user, config, checkPermission } = useContext(SiteContext);\n  const [viewOnly, setViewOnly] = useState(!!edit);\n  const [items, setItems] = useState(edit?.invoices || []);\n  const [err, setErr] = useState(null);\n  const printRef = useRef();\n  const handlePrint = useReactToPrint({ content: () => printRef.current });\n\n  const [invoices, setInvoices] = useState([]);\n\n  const { get: getInvoices } = useFetch(endpoints.invoices);\n\n  useEffect(() => {\n    getInvoices().then(({ data }) => {\n      if (data?.success) {\n        setInvoices(\n          data.data.map((item) => ({\n            ...item,\n            due: item.due.fix(2),\n            net:\n              item.items.reduce((p, c) => p + c.qty * c.price, 0) +\n              item.items\n                .reduce((p, c) => p + c.qty * c.price, 0)\n                .percent(item.gst),\n          }))\n        );\n      }\n    });\n  }, []);\n\n  return (\n    <div\n      className={`grid gap-1 p-1 ${s.addReceiptForm} ${\n        viewOnly ? s.viewOnly : \"\"\n      }`}\n    >\n      {viewOnly && (\n        <div className={`flex wrap gap-1 ${s.receiptDetail}`}>\n          <div className=\"flex gap-1 all-columns justify-end align-center\">\n            {checkPermission(\"receipt_update\") && (\n              <button className=\"btn\" onClick={() => setViewOnly(false)}>\n                Edit\n              </button>\n            )}\n            {\n              //   <button className=\"btn\" onClick={handlePrint}>\n              //   Print\n              // </button>\n            }\n          </div>\n          <div className={s.box}>\n            <h3>Customer Information</h3>\n            <Detail\n              label=\"Name\"\n              value={edit.accountingEntries?.[0]?.accountName}\n            />\n            <Detail\n              label=\"Detail\"\n              value={\n                edit.customer?.detail?.split(\"\\n\").map((line, i, arr) => (\n                  <span key={i}>\n                    {line}\n                    {arr[i + 1] && <br />}\n                  </span>\n                )) || null\n              }\n            />\n          </div>\n          <div className={s.box}>\n            <h3>Receipt Information</h3>\n            <Detail\n              label=\"Inv No\"\n              className=\"flex justify-space-between\"\n              value={`${edit.no}${config?.print?.receiptNoSuffix || \"\"}`}\n            />\n            <Detail\n              label=\"Date\"\n              className=\"flex justify-space-between\"\n              value={moment(edit?.date, \"DD-MM-YYYY\")}\n            />\n            <Detail\n              label=\"Amount\"\n              value={edit.amount.fix(2, config?.numberSeparator)}\n              className=\"flex justify-space-between\"\n            />\n            <Detail\n              label=\"Adjusted\"\n              value={edit.invoices\n                .reduce((p, c) => p + c.amount, 0)\n                .fix(2, config?.numberSeparator)}\n              className=\"flex justify-space-between\"\n            />\n          </div>\n        </div>\n      )}\n\n      {err && <p className=\"error\">{err}</p>}\n\n      {false && edit && (\n        <div style={{ display: \"none\" }}>\n          <PrintInvoice ref={printRef} receipt={edit} user={user} />\n        </div>\n      )}\n\n      {!viewOnly && (\n        <>\n          <h3>Receipt Information</h3>\n\n          <MainForm\n            invoices={\n              invoices\n              //   .filter(\n              //   (inv) => !items.some((item) => item.no === inv.no)\n              // )\n            }\n            edit={edit}\n            items={items}\n            setItems={setItems}\n            receipts={receipts}\n            setErr={setErr}\n            onSuccess={onSuccess}\n            setViewOnly={setViewOnly}\n          />\n        </>\n      )}\n    </div>\n  );\n};\n\nconst ItemForm = ({ edit, setEdit, receipts, invoices, onSuccess }) => {\n  const { config } = useContext(SiteContext);\n  const {\n    handleSubmit,\n    register,\n    reset,\n    watch,\n    setValue,\n    clearErrors,\n    control,\n    formState: { errors },\n  } = useForm({\n    defaultValues: {\n      unit: \"Piece\",\n    },\n    resolver: useYup(itemSchema),\n  });\n\n  useEffect(() => {\n    reset({ ...edit });\n  }, [edit]);\n  return (\n    <form\n      onSubmit={handleSubmit((values) => {\n        if (!edit) {\n          values._id = Math.random().toString().substr(-8);\n        }\n        if (values.amount > values.due) {\n          return Prompt({\n            type: \"error\",\n            message: `Enter an amount less or equal to ${values.due}`,\n          });\n        }\n        values.no = +values.no;\n        onSuccess(values);\n        reset();\n      })}\n      className={`${s.itemForm} grid gap-1`}\n    >\n      <Select\n        control={control}\n        label=\"Invoice No.\"\n        options={invoices\n          .filter((item) => item.due)\n          .map((item) => ({\n            label: `${item.no}. ${moment(item.dateTime, \"DD-MM-YY\")} Due: ${\n              item.due\n            }`,\n            value: item.no,\n            data: item,\n          }))}\n        name=\"no\"\n        formOptions={{ required: true }}\n        onChange={(item) => {\n          if (typeof item === \"string\") {\n          } else {\n            setValue(\"no\", item.data.no);\n            setValue(\"due\", item.data.due);\n            setValue(\"net\", item.data.net);\n          }\n        }}\n        type=\"number\"\n        className={s.itemName}\n      />\n\n      <Input label=\"Net\" type=\"number\" {...register(\"net\")} readOnly />\n      <Input label=\"Due\" type=\"number\" {...register(\"due\")} readOnly />\n\n      <Input\n        label=\"Amount\"\n        type=\"number\"\n        step=\"0.01\"\n        required\n        {...register(\"amount\")}\n        error={errors.amount}\n      />\n\n      {edit ? (\n        <div className={`flex ${s.btns}`}>\n          <button type=\"submit\">\n            <FaCheck />\n          </button>\n          <button type=\"button\" onClick={() => setEdit(null)}>\n            <FaTimes />\n          </button>\n        </div>\n      ) : (\n        <button className=\"btn\">{edit ? \"Update\" : \"Add\"}</button>\n      )}\n    </form>\n  );\n};\n\nconst MainForm = ({\n  invoices,\n  edit,\n  items,\n  setItems,\n  receipts,\n  setErr,\n  onSuccess,\n  setViewOnly,\n}) => {\n  const { config, setConfig } = useContext(SiteContext);\n  const [adjustInvoice, setAdjustInvoice] = useState(!!edit?.invoices?.length);\n  const [editItem, setEditItem] = useState(null);\n  const [adjustInvoiceTab, setAdjustInvoiceTab] = useState(\"table\");\n  const {\n    handleSubmit,\n    register,\n    reset,\n    setValue,\n    watch,\n    control,\n    formState: { errors },\n  } = useForm({\n    resolver: useYup(mainSchema),\n  });\n\n  const {\n    post: saveInvoice,\n    put: updateInvoice,\n    loading,\n  } = useFetch(endpoints.receipts + `/${edit?._id || \"\"}`);\n\n  const submitForm = useCallback(\n    (values) => {\n      if (items.length > 0) {\n        const totalNet = items.reduce((p, c) => p + c.net, 0);\n        const totalAmount = items.reduce((p, c) => p + c.amount, 0);\n        const totalDue = items.reduce((p, c) => p + c.due, 0);\n        if (totalAmount > values.amount) {\n          return Prompt({\n            type: \"error\",\n            message: `Adjusted amount (${totalAmount}) can not be more than the receipt amount.`,\n          });\n        }\n        // if (totalAmount < values.amount) {\n        //   return Prompt({\n        //     type: \"error\",\n        //     message: `Please add another invoice or reduce the receipt amount. Total adjusted amount ${totalAmount}`,\n        //   });\n        // }\n        // if (values.amount > totalDue) {\n        //   return Prompt({\n        //     type: \"error\",\n        //     message: `Amount must be less or equal to ${totalDue}. Please reduce the amount or add another invoice.`,\n        //   });\n        // }\n      }\n      (edit ? updateInvoice : saveInvoice)({\n        dateTime: values.date,\n        amount: values.amount,\n        type: values.type,\n        customerAccountId: values.customerAccountId,\n        customerAccountName: values.customerAccountName,\n        cashAccountId: values.cashAccountId,\n        cashAccountName: values.cashAccountName,\n        customer: {\n          //   name: values.customerName,\n          detail: values.customerDetail,\n        },\n        invoices: items.map((item) => ({ ...item, _id: undefined })),\n      })\n        .then(({ data }) => {\n          if (!data.success) {\n            return Prompt({ type: \"error\", message: data.message });\n          }\n          onSuccess(data.data);\n        })\n        .catch((err) => Prompt({ type: \"error\", message: err.message }));\n    },\n    [items]\n  );\n\n  const customerName = watch(\"customerName\");\n\n  useEffect(() => {\n    reset({\n      ...edit,\n      date: moment(edit?.date, \"YYYY-MM-DD\"),\n      cashAccountId: edit?.accountingEntries?.[0]?.accountId || \"\",\n      cashAccountName: edit?.accountingEntries?.[0]?.accountName || \"\",\n      customerAccountId: edit?.accountingEntries?.[1]?.accountId || \"\",\n      customerAccountName: edit?.accountingEntries?.[1]?.accountName || \"\",\n      // customerName: edit?.customer?.name || \"\",\n      customerDetail: edit?.customer?.detail || \"\",\n    });\n  }, [edit]);\n\n  return (\n    <div className={`${s.mainForm} grid gap-1`}>\n      <form\n        className={`${s.mainFormWrapper} grid gap-1 all-columns`}\n        onSubmit={handleSubmit(submitForm)}\n      >\n        <Input\n          label=\"Date\"\n          type=\"date\"\n          {...register(\"date\")}\n          required\n          error={errors.date}\n        />\n\n        <Select\n          label=\"Cash/Bank Account\"\n          control={control}\n          name=\"cashAccountId\"\n          formOptions={{ required: true }}\n          url={endpoints.accountingMasters}\n          getQuery={(v) => ({\n            types: \"Cash,Bank\",\n            isGroup: \"false\",\n            name: v,\n          })}\n          handleData={(data) => ({\n            label: `${data.name}${data.type ? ` - ${data.type}` : \"\"}`,\n            value: data._id,\n            account: data,\n          })}\n          onChange={(opt) => {\n            setValue(\"cashAccountName\", opt.account?.name);\n          }}\n        />\n\n        <Input\n          label=\"Amount\"\n          type=\"number\"\n          step=\"0.01\"\n          required\n          {...register(\"amount\")}\n          error={errors.amount}\n        />\n\n        <div className=\"all-columns\">\n          <h3>Account Information</h3>\n        </div>\n\n        <Select\n          label=\"Customer Account\"\n          control={control}\n          name=\"customerAccountId\"\n          formOptions={{ required: true }}\n          url={endpoints.accountingMasters}\n          getQuery={(v) => ({\n            isGroup: \"false\",\n            name: v,\n          })}\n          handleData={(data) => ({\n            label: `${data.name}${data.type ? ` - ${data.type}` : \"\"}`,\n            value: data._id,\n            account: data,\n          })}\n          onChange={(opt) => {\n            setValue(\"customerAccountName\", opt.account?.name);\n          }}\n        />\n\n        <Textarea label=\"Detail\" {...register(\"customerDetail\")} />\n      </form>\n\n      <div className=\"all-columns flex justify-center\">\n        <button\n          className=\"btn\"\n          onClick={() => {\n            setAdjustInvoice(!adjustInvoice);\n            setItems([]);\n          }}\n        >\n          {adjustInvoice ? \"Clear\" : \"Adjust\"} Invoices\n        </button>\n      </div>\n\n      {adjustInvoice && (\n        <>\n          <h3>Adjusted Invoices</h3>\n          <Tabs\n            secondary\n            activeTab={adjustInvoiceTab}\n            onChange={(tab) => setAdjustInvoiceTab(tab.value)}\n            tabs={[\n              {\n                label: \"Invoice Table\",\n                value: \"table\",\n              },\n              {\n                label: \"Search Invoice\",\n                value: \"search\",\n              },\n            ]}\n          />\n        </>\n      )}\n\n      {adjustInvoice &&\n        adjustInvoiceTab === \"table\" &&\n        (invoices.filter(\n          (invoice) =>\n            invoice.customer.name === customerName &&\n            (items.some((item) => item.no === invoice.no) || invoice.due)\n        ).length > 0 ? (\n          <Table\n            className={s.invoiceTable}\n            columns={[\n              { label: \"Invoice No\" },\n              { label: \"Date\" },\n              { label: \"Customer\" },\n              { label: \"Net\", className: \"text-right\" },\n              { label: \"Due\", className: \"text-right\" },\n              { label: \"Adjust\" },\n            ]}\n          >\n            {invoices\n              .filter(\n                (invoice) =>\n                  invoice.customer.name === customerName &&\n                  (items.some((item) => item.no === invoice.no) || invoice.due)\n              )\n              .map((invoice) => (\n                <SingleInvoiceAdjustTr\n                  invoice={invoice}\n                  key={invoice._id}\n                  config={config}\n                  items={items}\n                  setItems={setItems}\n                />\n              ))}\n          </Table>\n        ) : (\n          <p className={s.noContent}>\n            No pending invoice from selected customer.\n          </p>\n        ))}\n\n      {adjustInvoice && adjustInvoiceTab === \"search\" && (\n        <>\n          <ItemForm\n            invoices={invoices.filter(\n              (item) => item.customer.name === customerName\n            )}\n            key={editItem ? \"edit\" : \"add\"}\n            edit={editItem}\n            setEdit={setEditItem}\n            receipts={receipts}\n            onSuccess={(newItem) => {\n              setErr(null);\n              if (editItem) {\n                setItems((prev) =>\n                  prev.map((item) =>\n                    item._id === newItem._id ? newItem : item\n                  )\n                );\n                setEditItem(null);\n              } else {\n                if (\n                  items.some(\n                    (item) => item.no.toString() === newItem.no.toString()\n                  )\n                ) {\n                  return Prompt({\n                    type: \"error\",\n                    message: \"Invoice has already been added.\",\n                  });\n                }\n                setItems((prev) => [...prev, newItem]);\n              }\n            }}\n          />\n          {items.length > 0 ? (\n            <Table\n              className={s.items}\n              columns={[\n                { label: \"Invoice No.\" },\n                // { label: \"Net\", className: \"text-right\" },\n                // { label: \"Due\", className: \"text-right\" },\n                { label: \"Amount\", className: \"text-right\" },\n                { label: \"Action\", action: true },\n              ]}\n            >\n              {items.map((item, i) => (\n                <tr key={i}>\n                  <td className={s.name}>\n                    <span className=\"ellipsis\">{item.no}</span>\n                  </td>\n                  {\n                    //   <td className=\"text-right\">\n                    //   {item.net?.fix(2, config?.numberSeparator)}\n                    // </td>\n                    // <td className=\"text-right\">\n                    //   {item.due?.fix(2, config?.numberSeparator)}\n                    // </td>\n                  }\n                  <td className=\"text-right\">\n                    {item.amount.fix(2, config?.numberSeparator)}\n                  </td>\n                  <TableActions\n                    actions={[\n                      {\n                        icon: <FaPencilAlt />,\n                        label: \"Edit\",\n                        onClick: () => setEditItem(item),\n                      },\n                      {\n                        icon: <FaRegTrashAlt />,\n                        label: \"Delete\",\n                        onClick: () =>\n                          Prompt({\n                            type: \"confirmation\",\n                            message: `Are you sure you want to remove this Item?`,\n                            callback: () => {\n                              setItems((prev) =>\n                                prev.filter(\n                                  (product) => product._id !== item._id\n                                )\n                              );\n                            },\n                          }),\n                      },\n                    ]}\n                  />\n                </tr>\n              ))}\n            </Table>\n          ) : (\n            <p className={s.noContent}>No invoices selected.</p>\n          )}\n        </>\n      )}\n\n      <form\n        className={`${s.btnsWrapper} grid gap-1 all-columns`}\n        onSubmit={handleSubmit(submitForm)}\n      >\n        <div className=\"btns\">\n          <button className=\"btn\" disabled={editItem || loading}>\n            {edit ? \"Update\" : \"Submit\"}\n          </button>\n        </div>\n      </form>\n    </div>\n  );\n};\n\nconst SingleInvoiceAdjustTr = ({ invoice, items, setItems, config }) => {\n  const [adjust, setAdjust] = useState(\n    items.find((item) => item.no === invoice.no)?.amount || \"\"\n  );\n  useEffect(() => {\n    setAdjust(items.find((item) => item.no === invoice.no)?.amount || \"\");\n  }, [items]);\n  return (\n    <tr>\n      <td>\n        {invoice.no}\n        {config?.print?.invoiceNoSuffix || \"\"}\n      </td>\n      <td className={s.date}>\n        <Moment format=\"DD/MM/YYYY\">{invoice.date}</Moment>\n      </td>\n      <td className={s.customer}>{invoice.customer?.name}</td>\n      <td className={`text-right ${s.net}`}>\n        {invoice.net.fix(2, config?.numberSeparator)}\n      </td>\n      <td className={`text-right ${s.net}`}>\n        {invoice.due.fix(2, config?.numberSeparator)}\n      </td>\n      <td>\n        <Input\n          placeholder=\"Adjust\"\n          type=\"number\"\n          onBlur={(e) => {\n            const value = +e.target.value || 0;\n            if (value <= 0) {\n              e.target.value = \"\";\n              setItems((prev) => [\n                ...prev.filter((item) => item.no !== invoice.no),\n              ]);\n              return;\n            }\n            if (invoice.due) {\n              setItems((prev) => [\n                ...prev.filter((item) => item.no !== invoice.no),\n                {\n                  _id: Math.random().toString().substr(-8),\n                  no: invoice.no,\n                  due: invoice.due,\n                  net: invoice.net,\n                  amount: Math.min(value, invoice.due),\n                },\n              ]);\n            }\n          }}\n          value={adjust}\n          onChange={(e) => setAdjust(e.target.value)}\n        />\n      </td>\n    </tr>\n  );\n};\n\nexport default Form;\n","import { useState, useEffect, useContext } from \"react\";\nimport { SiteContext } from \"SiteContext\";\nimport { Table, TableActions, Moment } from \"Components/elements\";\nimport { FaRegEye, FaRegTrashAlt } from \"react-icons/fa\";\nimport { Prompt, Modal } from \"Components/modal\";\nimport s from \"./receipts.module.scss\";\nimport { useFetch } from \"hooks\";\nimport { endpoints } from \"config\";\n\nimport ReceiptForm from \"./ReceiptForm\";\nimport { BsList } from \"react-icons/bs\";\nimport { GoPlus } from \"react-icons/go\";\n\nconst Receipts = ({ setSidebarOpen }) => {\n  const { config, checkPermission } = useContext(SiteContext);\n  const [receipts, setReceipts] = useState([]);\n  const [receipt, setReceipt] = useState(null);\n  const [addReceipt, setAddReceipt] = useState(false);\n\n  const { get: getReceipts, loading } = useFetch(endpoints.receipts);\n  const { remove: deleteReceipt } = useFetch(endpoints.receipts + \"/{ID}\");\n\n  useEffect(() => {\n    getReceipts()\n      .then(({ data }) => {\n        if (data.success) {\n          return setReceipts(data.data);\n        }\n      })\n      .catch((err) => Prompt({ type: \"error\", message: err.message }));\n  }, []);\n  return (\n    <div className={`${s.content} grid gap-1 m-a p-1`}>\n      <div className={`flex ${s.head}`}>\n        <div\n          className={`flex align-center pointer gap_5  ml-1`}\n          onClick={() => setSidebarOpen((prev) => !prev)}\n        >\n          <BsList style={{ fontSize: \"1.75rem\" }} />\n          <h2>All Receipts</h2>\n          {checkPermission(\"reciept_create\") && (\n            <button\n              className=\"btn clear iconOnly\"\n              onClick={(e) => {\n                e.stopPropagation();\n                setAddReceipt(true);\n              }}\n            >\n              <GoPlus />\n            </button>\n          )}\n        </div>\n      </div>\n      <Table\n        loading={loading}\n        className={s.receipts}\n        columns={[\n          { label: \"No.\" },\n          { label: \"Date\" },\n          { label: \"Account\" },\n          { label: \"Amount\", className: \"text-right\" },\n          { label: \"Action\" },\n        ]}\n      >\n        {receipts.map((item) => (\n          <tr\n            onClick={() => {\n              setReceipt(item);\n              setAddReceipt(true);\n            }}\n            style={{ cursor: \"pointer\" }}\n            key={item._id}\n          >\n            <td className={s.no}>\n              {item.no}\n              {config?.print?.receiptNoSuffix || \"\"}\n            </td>\n            <td className={s.date}>\n              <Moment format=\"DD/MM/YYYY\">{item.date}</Moment>\n            </td>\n            <td className={s.customer}>\n              {item.accountingEntries?.[0]?.accountName}\n            </td>\n            <td className={`text-right ${s.net}`}>\n              {item.amount.fix(2, config?.numberSeparator)}\n            </td>\n            <TableActions\n              className={s.actions}\n              actions={[\n                {\n                  icon: <FaRegEye />,\n                  label: \"View\",\n                  onClick: () => {\n                    setReceipt(item);\n                    setAddReceipt(true);\n                  },\n                },\n                ...(checkPermission(\"reciept_delete\")\n                  ? [\n                      {\n                        icon: <FaRegTrashAlt />,\n                        label: \"Delete\",\n                        onClick: () =>\n                          Prompt({\n                            type: \"confirmation\",\n                            message: `Are you sure you want to remove this receipt?`,\n                            callback: () => {\n                              deleteReceipt(\n                                {},\n                                { params: { \"{ID}\": item._id } }\n                              ).then(({ data }) => {\n                                if (data.success) {\n                                  setReceipts((prev) =>\n                                    prev.filter(\n                                      (receipt) => receipt._id !== item._id\n                                    )\n                                  );\n                                } else {\n                                  Prompt({\n                                    type: \"error\",\n                                    message: data.message,\n                                  });\n                                }\n                              });\n                            },\n                          }),\n                      },\n                    ]\n                  : []),\n              ]}\n            />\n          </tr>\n        ))}\n      </Table>\n      <Modal\n        open={addReceipt}\n        head\n        label={`${receipt ? \"View / Update\" : \"Add\"} Receipt`}\n        className={s.addReceiptFormModal}\n        setOpen={() => {\n          setReceipt(null);\n          setAddReceipt(false);\n        }}\n      >\n        <ReceiptForm\n          edit={receipt}\n          receipts={receipts}\n          onSuccess={(newReceipt) => {\n            if (receipt) {\n              setReceipts((prev) =>\n                prev.map((item) =>\n                  item._id === newReceipt._id ? newReceipt : item\n                )\n              );\n              setReceipt(null);\n            } else {\n              setReceipts((prev) => [...prev, newReceipt]);\n            }\n            setAddReceipt(false);\n          }}\n        />\n      </Modal>\n    </div>\n  );\n};\n\nexport default Receipts;\n"],"names":["mainSchema","yup","date","required","amount","min","typeError","customerAccountId","cashAccountId","customerDetail","itemSchema","no","net","due","Detail","label","value","className","s","ItemForm","edit","setEdit","invoices","receipts","onSuccess","useContext","SiteContext","config","useForm","defaultValues","unit","resolver","useYup","handleSubmit","register","reset","setValue","watch","control","clearErrors","errors","formState","useEffect","onSubmit","values","_id","Math","random","toString","substr","Prompt","type","message","options","filter","item","map","moment","dateTime","data","name","formOptions","onChange","readOnly","step","error","onClick","MainForm","items","setItems","setErr","setViewOnly","setConfig","useState","length","adjustInvoice","setAdjustInvoice","editItem","setEditItem","adjustInvoiceTab","setAdjustInvoiceTab","useFetch","endpoints","saveInvoice","post","updateInvoice","put","loading","submitForm","useCallback","reduce","p","c","totalAmount","customerAccountName","cashAccountName","customer","detail","undefined","then","success","catch","err","customerName","accountingEntries","accountId","accountName","url","getQuery","v","types","isGroup","handleData","account","opt","secondary","activeTab","tab","tabs","invoice","some","columns","SingleInvoiceAdjustTr","newItem","prev","action","i","fix","numberSeparator","actions","icon","callback","product","disabled","find","adjust","setAdjust","print","invoiceNoSuffix","format","placeholder","onBlur","e","target","user","checkPermission","viewOnly","printRef","useRef","useReactToPrint","content","current","setInvoices","getInvoices","get","qty","price","percent","gst","split","line","arr","receiptNoSuffix","setSidebarOpen","setReceipts","receipt","setReceipt","addReceipt","setAddReceipt","getReceipts","deleteReceipt","remove","style","fontSize","stopPropagation","cursor","params","open","head","setOpen","ReceiptForm","newReceipt"],"sourceRoot":""}