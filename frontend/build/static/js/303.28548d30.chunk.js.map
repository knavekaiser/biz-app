{"version":3,"file":"static/js/303.28548d30.chunk.js","mappings":"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","sources":["webpack://cash-app/./src/Views/Dashboard/AdminDynamicTables/payments.module.scss?f287","Views/Dashboard/AdminDynamicTables/form.js","Views/Dashboard/AdminDynamicTables/dynamicForm.js","Views/Dashboard/AdminDynamicTables/dynamicTable.js","Views/Dashboard/AdminDynamicTables/index.js","Views/Dashboard/AdminDynamicTables/schemaTemplateForm.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"content\":\"payments_content__yJ5wS\",\"payments\":\"payments_payments__T9hiI\",\"addCollectionForm\":\"payments_addCollectionForm__4RYhu\",\"purchaseDetail\":\"payments_purchaseDetail__5B6nq\",\"box\":\"payments_box__b6W5Y\",\"noContent\":\"payments_noContent__ILrSU\",\"items\":\"payments_items__7ToSy\",\"name\":\"payments_name__ABrt6\",\"optionsWrapper\":\"payments_optionsWrapper__hFy6l\",\"options\":\"payments_options__3Mhfn\",\"mainForm\":\"payments_mainForm__cnyx8\",\"detail\":\"payments_detail__4XUMA\",\"label\":\"payments_label__+4EUP\",\"viewOnly\":\"payments_viewOnly__MB-Mz\",\"collectionFormModal\":\"payments_collectionFormModal__aj-QC\",\"dynamicForm\":\"payments_dynamicForm__ve+Bm\",\"productVariants\":\"payments_productVariants__4Ijl+\",\"images\":\"payments_images__sz0tb\",\"selected\":\"payments_selected__zcfOm\",\"products\":\"payments_products__lS5Zb\",\"product\":\"payments_product__+fjIE\",\"thumbnail\":\"payments_thumbnail__RA5bN\",\"productDetail\":\"payments_productDetail__aW0hZ\",\"price\":\"payments_price__xrJGU\",\"subtotal\":\"payments_subtotal__zuqu+\",\"variantForm\":\"payments_variantForm__XEqsA\",\"variantImages\":\"payments_variantImages__QLqnY\",\"fieldFormWrapper\":\"payments_fieldFormWrapper__Q3923\",\"dataDetail\":\"payments_dataDetail__6NBlM\",\"inputDetail\":\"payments_inputDetail__GSTFH\",\"fieldForm\":\"payments_fieldForm__opAJj\",\"fields\":\"payments_fields__43VFn\",\"nestedObjectFormModal\":\"payments_nestedObjectFormModal__DPDx6\",\"dynamicFormModal\":\"payments_dynamicFormModal__bOGdp\",\"head\":\"payments_head__YLQBH\"};","import { useState, useEffect, useCallback, useRef } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport {\n  Input,\n  Combobox,\n  Table,\n  TableActions,\n  Checkbox,\n  Select,\n  CustomRadio,\n} from \"Components/elements\";\nimport { useYup, useFetch } from \"hooks\";\nimport { Prompt, Modal } from \"Components/modal\";\nimport {\n  FaPencilAlt,\n  FaRegTrashAlt,\n  FaTimes,\n  FaCheck,\n  FaPlus,\n} from \"react-icons/fa\";\nimport * as yup from \"yup\";\nimport s from \"./payments.module.scss\";\nimport { endpoints } from \"config\";\n\nyup.addMethod(yup.string, \"noneOf\", function (arr, message) {\n  return this.test(\"noneOf\", message, function (value) {\n    const { path, createError } = this;\n    return (\n      !arr.includes(value) ||\n      createError({\n        path,\n        message: message?.replace(`{value}`, value) || message,\n      })\n    );\n  });\n});\n\nconst mainSchema = yup.object({\n  name: yup.string().required(),\n});\n\nconst optionsSchema = yup.object({\n  label: yup.string().required(),\n  value: yup.string().required(),\n});\n\nconst Form = ({ edit, collections, onSuccess }) => {\n  const [fields, setFields] = useState(edit?.fields || []);\n  const [editField, setEditField] = useState(null);\n  const [err, setErr] = useState(null);\n\n  const {\n    handleSubmit,\n    register,\n    reset,\n    control,\n    watch,\n    formState: { errors },\n    setError,\n  } = useForm({\n    resolver: useYup(mainSchema),\n  });\n  const {\n    post: saveCollection,\n    put: updateCollection,\n    loading,\n  } = useFetch(endpoints.adminCollections + `/${edit?._id || \"\"}`);\n  const tableName = watch(\"name\");\n  const onSubmit = useCallback(\n    (values) => {\n      if (!values.name && tableName) {\n        values.name = tableName;\n      }\n      if (!values.name) {\n        setError(\"name\", {\n          type: \"required\",\n          message: \"Table name is required\",\n        });\n        return;\n      }\n      if (fields.length < 1) {\n        return setErr(\"Add at least one field\");\n      }\n      if (values.name === \"Product\") {\n        if (!fields.find((item) => item.name === \"images\")) {\n          return setErr('\"images\" is a required field');\n        }\n        if (!fields.find((item) => item.name === \"title\")) {\n          return setErr('\"title\" is a required field');\n        }\n        if (!fields.find((item) => item.name === \"price\")) {\n          return setErr('\"price\" is a required field');\n        }\n        if (!fields.find((item) => item.name === \"whatsappNumber\")) {\n          return setErr('\"whatsappNumber\" is a required field');\n        }\n      }\n\n      (edit ? updateCollection : saveCollection)({\n        name: values.name,\n        fields: fields.map((item) => ({ ...item, _id: undefined })),\n      })\n        .then(({ data }) => {\n          if (!data.success) {\n            return Prompt({ type: \"error\", message: data.message });\n          }\n          onSuccess(data.data);\n        })\n        .catch((err) => Prompt({ type: \"error\", message: err.message }));\n    },\n    [fields, tableName]\n  );\n\n  useEffect(() => {\n    if (\n      fields.length > 0 &&\n      JSON.stringify(fields) !== JSON.stringify(edit?.fields || [])\n    ) {\n      onSubmit({ name: edit?.name || \"\" });\n    }\n  }, [fields, edit]);\n  useEffect(() => {\n    reset({\n      ...edit,\n    });\n  }, [edit]);\n  return (\n    <div className={`grid gap-1 p-1 ${s.addCollectionForm}`}>\n      <form\n        onSubmit={handleSubmit(onSubmit)}\n        className={`${s.mainForm} grid gap-1`}\n      >\n        <Input\n          label=\"Table Name (singular)\"\n          type=\"text\"\n          {...register(\"name\")}\n          required\n          readOnly={edit}\n          error={errors.name}\n        />\n      </form>\n\n      <h3>Fields</h3>\n      <Table\n        className={s.fields}\n        columns={[\n          { label: \"Name\" },\n          ...(edit?.name === \"Product\" ? [{ label: \"Subcategory\" }] : []),\n          { label: \"Data Type\" },\n          { label: \"Label\" },\n          { label: \"Field Type\" },\n          { label: \"Input Type\" },\n          { label: \"Required\" },\n          { label: \"Action\", action: true },\n        ]}\n        placeholder=\"No fields yet.\"\n      >\n        {fields.map((item, i) => (\n          <tr key={i}>\n            <td>\n              <span className=\"ellipsis\">{item.name}</span>\n            </td>\n            {edit?.name === \"Product\" && <td>{item.subcategory}</td>}\n            <td>{item.dataType}</td>\n            <td>{item.label}</td>\n            <td>{item.fieldType}</td>\n            <td>{item.inputType}</td>\n            <td>{item.required ? \"Yes\" : \"No\"}</td>\n            <TableActions\n              actions={[\n                {\n                  icon: <FaPencilAlt />,\n                  label: \"Edit\",\n                  callBack: () => setEditField(item),\n                },\n                {\n                  icon: <FaRegTrashAlt />,\n                  label: \"Delete\",\n                  callBack: () =>\n                    Prompt({\n                      type: \"confirmation\",\n                      message: `Are you sure you want to remove this Field?`,\n                      callback: () => {\n                        setFields((prev) =>\n                          prev.filter((product) => product.name !== item.name)\n                        );\n                      },\n                    }),\n                },\n              ]}\n            />\n          </tr>\n        ))}\n      </Table>\n      {err && <p className=\"error\">{err}</p>}\n\n      <FieldForm\n        key={editField ? \"edit\" : \"add\"}\n        edit={editField}\n        editCollection={edit}\n        fields={fields}\n        collections={collections}\n        productCollection={collections.find((c) => c?.name === \"Product\")}\n        onSuccess={(newField) => {\n          setErr(null);\n          if (editField) {\n            setFields((prev) => {\n              return prev.map((item) =>\n                item.name.toLowerCase() === newField.name.toLowerCase()\n                  ? newField\n                  : item\n              );\n            });\n            setEditField(null);\n          } else {\n            setFields((prev) => [...prev, newField]);\n          }\n        }}\n        clear={() => setEditField(null)}\n      />\n\n      <form\n        onSubmit={handleSubmit(onSubmit)}\n        className={`${s.mainForm} grid gap-1`}\n      >\n        {\n          //   <div className=\"btns mt-1\">\n          //   <button className=\"btn\" disabled={editField || loading}>\n          //     {edit ? \"Update\" : \"Submit\"}\n          //   </button>\n          // </div>\n        }\n      </form>\n    </div>\n  );\n};\n\nconst defaultFields = [\n  \"title\",\n  \"description\",\n  \"images\",\n  \"price\",\n  \"whatsappNumber\",\n  \"category\",\n  \"subcategory\",\n];\n\nexport const FieldForm = ({\n  edit,\n  fields,\n  editCollection,\n  collections,\n  onSuccess,\n  clear,\n}) => {\n  const {\n    handleSubmit,\n    register,\n    reset,\n    watch,\n    setValue,\n    clearErrors,\n    control,\n    formState: { errors },\n  } = useForm({\n    resolver: useYup(\n      yup.object({\n        name: yup\n          .string()\n          .noneOf(\n            fields\n              .filter((item) => (!edit ? true : edit.name !== item.name))\n              .map((item) => item.name),\n            `{value} already exists`\n          )\n          .required(),\n        dataType: yup.string().required(),\n        label: yup.string().required(),\n        fieldType: yup.string(),\n        inputType: yup.string(),\n        required: yup.boolean(),\n      })\n    ),\n  });\n  const name = watch(\"name\");\n  const inputType = watch(\"inputType\");\n  const dataType = watch(\"dataType\");\n  const dataElementType = watch(\"dataElementType\");\n  const dataElements = watch(\"fields\");\n  const collection = watch(\"collection\");\n  const fieldType = watch(\"fieldType\");\n  const optionType = watch(\"optionType\");\n  const options = watch(\"options\");\n  const label = watch(\"label\");\n\n  const onSubmit = useCallback(\n    (values) => {\n      if (editCollection?.name === \"Product\") {\n        const data = {};\n        Object.entries(values).forEach(([key, value]) => {\n          if (\n            (key === \"subcategory\" &&\n              !defaultFields\n                .filter((item) => item !== \"subcategory\")\n                .includes(key)) ||\n            key !== \"subcategory\"\n          ) {\n            data[key] = value;\n          }\n        });\n        onSuccess(data);\n      } else {\n        onSuccess(values);\n      }\n      reset({\n        category: \"\",\n        subcategory: \"\",\n        name: \"\",\n        inputType: \"\",\n        dataType: \"\",\n        dataElementType: \"\",\n        dataElements: \"\",\n        collection: \"\",\n        fieldType: \"\",\n        optionType: \"\",\n        options: [],\n        multiRange: \"\",\n        label: \"\",\n        required: \"\",\n        decimalPlaces: \"\",\n        unique: \"\",\n      });\n    },\n    [edit]\n  );\n  useEffect(() => {\n    reset({ ...edit });\n  }, [edit]);\n\n  return (\n    <div className={s.fieldFormWrapper}>\n      <div className={s.dataDetail}>\n        <form\n          onSubmit={handleSubmit(onSubmit)}\n          className={`${s.fieldForm} grid gap-1`}\n        >\n          <div className=\"flex all-columns gap-1 justify-space-between align-center\">\n            <h3>Data</h3>\n\n            {editCollection?.name === \"Product\" &&\n              !defaultFields.includes(name) && (\n                <Select\n                  label=\"Subcategory\"\n                  control={control}\n                  url={endpoints.adminDynamic + \"/Subcategory\"}\n                  getQuery={(inputValue, selected) => ({\n                    ...(inputValue && { name: inputValue }),\n                    ...(selected && { name: selected }),\n                  })}\n                  handleData={(item) => ({\n                    label: item.name,\n                    value: item.name,\n                  })}\n                  name=\"subcategory\"\n                />\n              )}\n\n            <Checkbox {...register(\"unique\")} label=\"Unique\" />\n          </div>\n\n          <Input\n            label=\"Field Name\"\n            type=\"text\"\n            required\n            disabled={edit}\n            {...register(\"name\")}\n            error={errors.name}\n          />\n          <Combobox\n            label=\"Data Type\"\n            name=\"dataType\"\n            control={control}\n            formOptions={{ required: true }}\n            options={[\n              { label: \"String\", value: \"string\" },\n              { label: \"Number\", value: \"number\" },\n              { label: \"Date\", value: \"date\" },\n              { label: \"Boolean\", value: \"boolean\" },\n              { label: \"Array\", value: \"array\" },\n              { label: \"Variant Array\", value: \"variantArray\" },\n              { label: \"Object\", value: \"object\" },\n              { label: \"Object ID\", value: \"objectId\" },\n            ]}\n            disabled={edit || fieldType === \"richText\"}\n          />\n\n          {dataType === \"objectId\" && (\n            <>\n              <Select\n                control={control}\n                label=\"Collection\"\n                options={collections\n                  .filter((coll) => coll._id !== editCollection?._id)\n                  .map((item) => ({\n                    label: item.name,\n                    value: item.name,\n                  }))}\n                name=\"collection\"\n                formOptions={{ required: true }}\n                className={s.itemName}\n              />\n\n              {collection && (\n                <Combobox\n                  label=\"Foreign Field\"\n                  name=\"foreignField\"\n                  control={control}\n                  formOptions={{ required: true }}\n                  options={[\n                    {\n                      label: \"ID\",\n                      value: \"_id\",\n                    },\n                    ...(collections\n                      .find((coll) => coll.name === collection)\n                      ?.fields.map((item) => ({\n                        label: item.label,\n                        value: item.name,\n                      })) || []),\n                  ]}\n                />\n              )}\n            </>\n          )}\n\n          {[\"array\", \"variantArray\"].includes(dataType) && (\n            <Combobox\n              label=\"Data Element Type\"\n              name=\"dataElementType\"\n              control={control}\n              formOptions={{ required: true }}\n              options={[\n                { label: \"String\", value: \"string\" },\n                { label: \"Number\", value: \"number\" },\n                { label: \"Date\", value: \"date\" },\n                { label: \"Object\", value: \"object\" },\n              ]}\n            />\n          )}\n        </form>\n\n        {dataType === \"object\" &&\n          ![\"includeProducts\", \"excludeProducts\"].includes(name) && (\n            <NestedObjectFields\n              name={label || name}\n              value={dataElements}\n              setValue={(newValue) => setValue(\"objectFields\", newValue)}\n              collection={editCollection}\n              collections={collections}\n            />\n          )}\n\n        {\n          // dataType === \"object\" &&\n          // name === \"includeProducts\" &&\n          // (productCollection ? (\n          //   <ProductFilterFields\n          //     name={`${\n          //       name === \"includeProducts\"\n          //         ? \"Include Products\"\n          //         : \"Exclude Products\"\n          //     } filters`}\n          //     value={dataElements}\n          //     setValue={(newValue) => setValue(\"includeProducts\", newValue)}\n          //     collection={editCollection}\n          //     collections={collections}\n          //     productCollection={productCollection}\n          //   />\n          // ) : (\n          //   <p>\n          //     Please add \"Product\" table to add \"includeProducts\" or\n          //     \"excludeProducts\"\n          //   </p>\n          // ))\n        }\n\n        {[\"array\", \"variantArray\"].includes(dataType) &&\n          dataElementType === \"object\" && (\n            <NestedObjectFields\n              name={label || name}\n              value={dataElements}\n              setValue={(newValue) => setValue(\"fields\", newValue)}\n              collection={editCollection}\n              collections={collections}\n            />\n          )}\n      </div>\n\n      <div className={s.inputDetail}>\n        <form\n          onSubmit={handleSubmit(onSubmit)}\n          className={`${s.fieldForm} grid gap-1`}\n        >\n          <div className=\"flex all-columns justify-space-between align-center\">\n            <h3 className=\"all-columns\">Input Field</h3>\n            <Checkbox {...register(\"required\")} label=\"Required\" />\n          </div>\n          <Input\n            label=\"Label\"\n            type=\"text\"\n            required\n            {...register(\"label\")}\n            error={errors.label}\n          />\n\n          {!(\n            [\"array\", \"variantArray\"].includes(dataType) &&\n            dataElementType === \"object\"\n          ) && (\n            <Combobox\n              label=\"Field Type\"\n              name=\"fieldType\"\n              control={control}\n              formOptions={{ required: true }}\n              options={[\n                { label: \"Input\", value: \"input\" },\n                { label: \"Textarea\", value: \"textarea\" },\n                { label: \"Rich Text\", value: \"richText\" },\n                { label: \"Combobox\", value: \"combobox\" },\n                { label: \"Autocomplete\", value: \"select\" },\n                { label: \"Date Range\", value: \"dateRange\" },\n                { label: \"Collection Filter\", value: \"collectionFilter\" },\n                { label: \"None\", value: \"none\" },\n              ]}\n              onChange={(opt) => {\n                if (opt?.value === \"richText\") {\n                  setValue(\"dataType\", \"object\");\n                }\n              }}\n            />\n          )}\n\n          {!(\n            [\n              \"combobox\",\n              \"textarea\",\n              \"richText\",\n              \"collectionFilter\",\n              \"none\",\n            ].includes(fieldType) ||\n            ([\"array\", \"variantArray\"].includes(dataType) &&\n              dataElementType === \"object\") ||\n            ([\"includeProducts\", \"excludeProducts\"].includes(name) &&\n              dataType === \"object\")\n          ) && (\n            <Combobox\n              label=\"Input Type\"\n              name=\"inputType\"\n              control={control}\n              options={\n                fieldType === \"dateRange\"\n                  ? [{ label: \"Calendar\", value: \"calendar\" }]\n                  : [\n                      { label: \"Text\", value: \"text\" },\n                      { label: \"Number\", value: \"number\" },\n                      ...(fieldType !== \"select\"\n                        ? [\n                            { label: \"Phone Number\", value: \"phone\" },\n                            { label: \"Date\", value: \"date\" },\n                            { label: \"File\", value: \"file\" },\n                            { label: \"Calendar\", value: \"calendar\" },\n                            { label: \"Password\", value: \"password\" },\n                          ]\n                        : []),\n                    ]\n              }\n            />\n          )}\n\n          {inputType === \"number\" && (\n            <Combobox\n              label=\"Decimal Places\"\n              name=\"decimalPlaces\"\n              control={control}\n              options={[\n                { label: \"1\", value: \"0\" },\n                { label: \"1.0\", value: \"0.0\" },\n                { label: \"1.00\", value: \"0.00\" },\n                { label: \"1.000\", value: \"0.000\" },\n                { label: \"1.0000\", value: \"0.0000\" },\n                { label: \"1.00000\", value: \"0.00000\" },\n              ]}\n            />\n          )}\n\n          {[\"combobox\", \"select\"].includes(fieldType) && (\n            <Combobox\n              label=\"Options type\"\n              name=\"optionType\"\n              control={control}\n              formOptions={{ required: true }}\n              options={[\n                { label: \"Predefined\", value: \"array\" },\n                {\n                  label: \"Other Collection\",\n                  value: \"collection\",\n                  disabled: fieldType === \"combobox\",\n                },\n              ]}\n            />\n          )}\n\n          {[\"collection\"].includes(optionType) && (\n            <>\n              <Select\n                control={control}\n                label={\"Collection\"}\n                options={collections\n                  .filter((coll) => coll._id !== editCollection?._id)\n                  .map((item) => ({\n                    label: item.name,\n                    value: item.name,\n                  }))}\n                name=\"collection\"\n                formOptions={{ required: true }}\n                className={s.itemName}\n              />\n\n              {collection && (\n                <>\n                  <Combobox\n                    label=\"Option Label\"\n                    name=\"optionLabel\"\n                    control={control}\n                    formOptions={{ required: true }}\n                    options={[\n                      {\n                        label: \"ID\",\n                        value: \"_id\",\n                      },\n                      ...(collections\n                        .find((coll) => coll.name === collection)\n                        ?.fields.map((item) => ({\n                          label: item.label,\n                          value: item.name,\n                        })) || []),\n                    ]}\n                  />\n\n                  <Combobox\n                    label=\"Option Value\"\n                    name=\"optionValue\"\n                    control={control}\n                    formOptions={{ required: true }}\n                    options={[\n                      {\n                        label: \"ID\",\n                        value: \"_id\",\n                      },\n                      ...(collections\n                        .find((coll) => coll.name === collection)\n                        ?.fields.map((item) => ({\n                          label: item.label,\n                          value: item.name,\n                        })) || []),\n                    ]}\n                  />\n                </>\n              )}\n            </>\n          )}\n        </form>\n\n        {[\"combobox\", \"select\"].includes(fieldType) &&\n          optionType === \"array\" && (\n            <>\n              <h3>{label} Options</h3>\n              <Options\n                dataType={dataType}\n                options={options}\n                setOptions={(newOptions) => setValue(\"options\", newOptions)}\n              />\n            </>\n          )}\n\n        <form\n          onSubmit={handleSubmit(onSubmit)}\n          className={`${s.fieldForm} grid gap-1`}\n        >\n          {([\"file\"].includes(inputType) ||\n            [\"select\", \"combobox\"].includes(fieldType)) && (\n            <Checkbox {...register(\"multiple\")} label=\"Multiple\" />\n          )}\n\n          {inputType === \"calendar\" && (\n            <>\n              <Combobox\n                label=\"Date Window\"\n                name=\"dateWindow\"\n                control={control}\n                options={[\n                  { label: \"All time\", value: \"allTime\" },\n                  {\n                    label: \"Past including Today\",\n                    value: \"pastIncludingToday\",\n                  },\n                  {\n                    label: \"Past excluding Today\",\n                    value: \"pastExcludingToday\",\n                  },\n                  {\n                    label: \"Future including Today\",\n                    value: \"futureIncludingToday\",\n                  },\n                  {\n                    label: \"Future excluding Today\",\n                    value: \"futureExcludingToday\",\n                  },\n                ]}\n              />\n\n              <Combobox\n                label=\"Multiple Range\"\n                name=\"multipleRanges\"\n                control={control}\n                options={[\n                  { label: \"Yes\", value: true },\n                  { label: \"No\", value: false },\n                ]}\n              />\n            </>\n          )}\n        </form>\n\n        <form\n          onSubmit={handleSubmit(onSubmit)}\n          className={`flex gap-1 justify-center`}\n        >\n          {edit && (\n            <button className=\"btn\" type=\"button\" onClick={clear}>\n              Clear\n            </button>\n          )}\n          <button className=\"btn\">{edit ? \"Update\" : \"Add\"} Field</button>\n        </form>\n      </div>\n    </div>\n  );\n};\n\nconst ProductFilterFields = ({\n  name,\n  value = [],\n  setValue,\n  collection,\n  collections,\n  productCollection,\n}) => {\n  const [formOpen, setFormOpen] = useState();\n  return (\n    <>\n      <div className=\"flex justify-space-between align-center\">\n        <h3>{name}</h3>\n        <button className=\"btn\" onClick={() => setFormOpen(true)}>\n          Update {name}\n        </button>\n      </div>\n\n      <Table className={s.fields} columns={[{ label: \"Field\" }]}>\n        {value.map((item, i) => (\n          <tr key={i}>\n            <td>{item}</td>\n          </tr>\n        ))}\n      </Table>\n\n      <Modal\n        head\n        label={`Update Fields`}\n        open={formOpen}\n        setOpen={() => {\n          setFormOpen(false);\n        }}\n        className={s.nestedObjectFormModal}\n      >\n        <ProductFilterFieldsForm\n          editCollection={collection}\n          collections={collections}\n          productCollection={productCollection}\n          onSubmit={(newValues) => {\n            setValue([...(value || []), ...newValues]);\n            setFormOpen(false);\n          }}\n        />\n      </Modal>\n    </>\n  );\n};\nconst ProductFilterFieldsForm = ({ productCollection, onSubmit }) => {\n  const { handleSubmit, control } = useForm();\n  return (\n    <form\n      onSubmit={handleSubmit((values) => onSubmit(values.fields))}\n      className=\"grid gap-1 p-1\"\n    >\n      <CustomRadio\n        control={control}\n        name=\"fields\"\n        className={s.itemColumnsRadio}\n        multiple\n        label=\"Fields\"\n        options={productCollection.fields\n          .filter(\n            (item) =>\n              !(item.inputType === \"file\" || item.inputType === \"calendar\")\n          )\n          .map((item) => ({\n            label: item.label,\n            value: item.name,\n          }))}\n      />\n\n      <div className=\"flex justify-center\">\n        <button className=\"btn\">Update</button>\n      </div>\n    </form>\n  );\n};\n\nconst NestedObjectFields = ({\n  name,\n  value = [],\n  setValue,\n  collection,\n  collections,\n}) => {\n  const [edit, setEdit] = useState(null);\n  const [formOpen, setFormOpen] = useState(null);\n  return (\n    <>\n      <div className=\"flex justify-space-between align-center\">\n        <h3>{name} Fields</h3>\n        <button className=\"btn\" onClick={() => setFormOpen(true)}>\n          Add {name} Field\n        </button>\n      </div>\n      <Table\n        className={s.fields}\n        columns={[\n          { label: \"Name\" },\n          { label: \"Data Type\" },\n          { label: \"Label\" },\n          { label: \"Field Type\" },\n          { label: \"Input Type\" },\n          { label: \"Required\" },\n          { label: \"Action\", action: true },\n        ]}\n        placeholder=\"No fields yet.\"\n      >\n        {value.map((item, i) => (\n          <tr key={i}>\n            <td>\n              <span className=\"ellipsis\">{item.name}</span>\n            </td>\n            <td>{item.dataType}</td>\n            <td>{item.label}</td>\n            <td>{item.fieldType}</td>\n            <td>{item.inputType}</td>\n            <td>{item.required ? \"Yes\" : \"No\"}</td>\n            <TableActions\n              actions={[\n                {\n                  icon: <FaPencilAlt />,\n                  label: \"Edit\",\n                  callBack: () => {\n                    setEdit(item);\n                    setFormOpen(true);\n                  },\n                },\n                {\n                  icon: <FaRegTrashAlt />,\n                  label: \"Delete\",\n                  callBack: () =>\n                    Prompt({\n                      type: \"confirmation\",\n                      message: `Are you sure you want to remove this Field?`,\n                      callback: () => {\n                        setValue(\n                          value.filter((field) => field.name !== item.name)\n                        );\n                      },\n                    }),\n                },\n              ]}\n            />\n          </tr>\n        ))}\n      </Table>\n\n      <Modal\n        head\n        label={`${edit ? \"Update\" : \"Add\"} ${name} Field`}\n        open={formOpen}\n        setOpen={() => {\n          setFormOpen(false);\n          setEdit(null);\n        }}\n        className={s.nestedObjectFormModal}\n      >\n        <FieldForm\n          key={edit ? \"edit\" : \"add\"}\n          edit={edit}\n          fields={value}\n          editCollection={collection}\n          collections={collections}\n          productCollection={collections.find((c) => c?.name === \"Product\")}\n          onSuccess={(newField) => {\n            if (edit) {\n              setValue(\n                value.map((item) =>\n                  item.name.toLowerCase() === newField.name.toLowerCase()\n                    ? newField\n                    : item\n                )\n              );\n              setEdit(null);\n            } else {\n              setValue([...value, newField]);\n            }\n            setFormOpen(false);\n          }}\n          clear={() => setEdit(null)}\n        />\n      </Modal>\n    </>\n  );\n};\n\nconst Options = ({ dataType, options, setOptions }) => {\n  const [edit, setEdit] = useState(null);\n  return (\n    <section className={s.optionsWrapper}>\n      <Table\n        className={`${s.options}`}\n        columns={[{ label: \"Label\" }, { label: \"Value\" }, { label: \"Action\" }]}\n      >\n        <tr className=\"inlineForm\">\n          <td>\n            <OptionsForm\n              dataType={dataType}\n              edit={edit}\n              onSuccess={(newOption) => {\n                if (edit) {\n                  setOptions(\n                    (options || []).map((item) =>\n                      item._id === newOption._id ? newOption : item\n                    )\n                  );\n                } else {\n                  setOptions([newOption, ...(options || [])]);\n                }\n                setEdit(null);\n              }}\n              clearForm={() => setEdit(null)}\n            />\n          </td>\n        </tr>\n        {options?.map((item, i) => (\n          <tr key={i}>\n            <td>{item.label}</td>\n            <td>{item.value?.toString()}</td>\n            <TableActions\n              actions={[\n                {\n                  icon: <FaPencilAlt />,\n                  label: \"Edit\",\n                  callBack: () => {\n                    setEdit(item);\n                  },\n                },\n                {\n                  icon: <FaRegTrashAlt />,\n                  label: \"Delete\",\n                  callBack: () =>\n                    Prompt({\n                      type: \"confirmation\",\n                      message: `Are you sure you want to remove this Option?`,\n                      callback: () => {\n                        setOptions(\n                          (options || []).filter(\n                            (product) => product._id !== item._id\n                          )\n                        );\n                      },\n                    }),\n                },\n              ]}\n            />\n          </tr>\n        ))}\n      </Table>\n    </section>\n  );\n};\nconst OptionsForm = ({ dataType, edit, onSuccess, clearForm }) => {\n  const {\n    handleSubmit,\n    register,\n    formState: { errors },\n    reset,\n  } = useForm({\n    resolver: useYup(optionsSchema),\n  });\n  useEffect(() => {\n    reset({\n      label: edit?.label || \"\",\n      value: edit?.value || \"\",\n    });\n  }, [edit]);\n  return (\n    <form\n      onSubmit={handleSubmit((values) => {\n        if (dataType === \"boolean\") {\n          values.value = [\"1\", 1, \"true\"].includes(values.value.toLowerCase());\n        } else if (dataType === \"number\") {\n          values.value = +values.value;\n        }\n        onSuccess({\n          ...values,\n          _id: edit?._id || Math.random().toString(36).substr(-8),\n        });\n        reset();\n      })}\n    >\n      <Input {...register(\"label\")} placeholder=\"Label\" error={errors.label} />\n      <Input {...register(\"value\")} placeholder=\"Value\" error={errors.value} />\n\n      <section className=\"btns\">\n        <button className=\"btn clear border iconOnly\" type=\"submit\">\n          {edit ? <FaCheck /> : <FaPlus />}\n        </button>\n        {edit && (\n          <button\n            className=\"btn clear border iconOnly\"\n            type=\"button\"\n            onClick={() => {\n              clearForm();\n              // reset();\n            }}\n          >\n            <FaTimes />\n          </button>\n        )}\n      </section>\n    </form>\n  );\n};\n\nexport default Form;\n","import { useState, useEffect, useContext } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport {\n  Input,\n  Textarea,\n  FileInputNew,\n  CalendarInput,\n  DynamicTable,\n  Combobox,\n  Table,\n  Select,\n  CustomRadio,\n  MobileNumberInput,\n  moment,\n  RichText,\n  Checkbox,\n  TableActions,\n} from \"Components/elements\";\nimport { useYup, useFetch } from \"hooks\";\nimport { Prompt, Modal } from \"Components/modal\";\nimport { FaPencilAlt, FaRegTrashAlt } from \"react-icons/fa\";\nimport { findProperties } from \"helpers\";\nimport * as yup from \"yup\";\nimport s from \"./payments.module.scss\";\nimport { endpoints } from \"config\";\nimport { SiteContext } from \"SiteContext\";\nimport { FieldForm } from \"./form\";\n\nconst MainForm = ({ collection, productCollection, edit, onSuccess }) => {\n  const {\n    post: saveData,\n    put: updateData,\n    loading,\n  } = useFetch(\n    `${endpoints.adminDynamic}/${collection.name}/${edit?._id || \"\"}`\n  );\n\n  return (\n    <div className={`grid gap-1`}>\n      <DynamicForm\n        collection={collection}\n        fields={collection.fields}\n        productCollection={productCollection}\n        edit={edit}\n        loading={loading}\n        onSubmit={(values) => {\n          let payload = { ...values };\n\n          if (collection.name === \"Product\" && \"variants\" in payload) {\n            payload.variants = JSON.stringify(payload.variants);\n          }\n\n          if (collection.fields.some((field) => field.dataType === \"object\")) {\n            collection.fields\n              .filter((item) => item.dataType === \"object\")\n              .forEach((field) => {\n                if (values[field.name]) {\n                  payload[field.name] = JSON.stringify(values[field.name]);\n                }\n              });\n          }\n\n          findProperties(\"_id\", payload).forEach((item) => {\n            item.path.reduce((obj, key, i, arr) => {\n              if (i === arr.length - 1 && obj[key].length <= 20) {\n                delete obj[key];\n              }\n              return obj[key];\n            }, payload);\n          });\n\n          if (collection.fields.some((field) => field.inputType === \"file\")) {\n            payload = new FormData();\n            collection.fields.forEach((field) => {\n              if (collection.name === \"Product\" && field.name === \"variants\") {\n                return;\n              }\n              const value = values[field.name];\n              if (value === undefined) {\n                return;\n              }\n              if (field.inputType === \"file\" && value.length) {\n                for (const file of value) {\n                  payload.append(`${field.name}`, file.uploadFilePath || file);\n                }\n                return;\n              }\n              if ([\"array\", \"variantArray\"].includes(field.dataType)) {\n                for (const item of value) {\n                  payload.append(`${field.name}`, item);\n                }\n                return;\n              }\n              if (field.dataType === \"object\") {\n                payload.append(`${field.name}`, JSON.stringify(value));\n                return;\n              }\n\n              return payload.append(field.name, value);\n            });\n            if (collection.name === \"Product\" && \"variants\" in values) {\n              payload.append(\"variants\", JSON.stringify(values.variants));\n            }\n          }\n          (edit ? updateData : saveData)(payload)\n            .then(({ data }) => {\n              if (!data.success) {\n                return Prompt({ type: \"error\", message: data.message });\n              }\n              onSuccess(data.data);\n            })\n            .catch((err) => Prompt({ type: \"error\", message: err.message }));\n        }}\n      />\n    </div>\n  );\n};\n\nconst DynamicForm = ({\n  collection,\n  fields: collectionFields,\n  productCollection,\n  edit,\n  loading,\n  onSubmit,\n}) => {\n  const [_fields, set_fields] = useState([]);\n  const {\n    handleSubmit,\n    register,\n    reset,\n    setValue,\n    watch,\n    control,\n    getValues,\n    formState: { errors },\n  } = useForm({\n    resolver: useYup(\n      yup.object({\n        ...collectionFields\n          .map((f) => {\n            let field;\n            if ([\"objectId\", \"string\", \"date\"].includes(f.dataType)) {\n              field = yup.string();\n            }\n            if (f.dataType === \"number\") {\n              field = yup.number().typeError(\"Please enter a valid number\");\n            }\n            if (f.inputType === \"phone\") {\n              field = yup.string().phone(\"Please enter a valid phone number\");\n            }\n            if ([\"array\", \"variantArray\"].includes(f.dataType)) {\n              field = yup.array();\n              if (f.min) {\n                field = field.min(f.min, `At least ${f.min} items required`);\n              }\n            }\n            if (f.required) {\n              field = field.required(\n                field.errorMessage || `${f.label} is required`\n              );\n            }\n            return field;\n          })\n          .reduce((p, c, i) => {\n            p[collectionFields[i]?.name] = c;\n            return p;\n          }, {}),\n      })\n    ),\n  });\n\n  const fields = (\n    collection?.name === \"Product\" ? _fields : collectionFields\n  ).map((field, i) => {\n    if (collection?.name === \"Product\" && field.name === \"variants\") {\n      return null;\n    }\n    if (field.dataType === \"object\" && field.fieldType === \"collectionFilter\") {\n      const value = watch(field.name);\n      return (\n        <ProductFilterForm\n          key={field.name}\n          field={field}\n          value={value}\n          productCollection={productCollection}\n          setValue={setValue}\n        />\n      );\n    }\n    if (\n      [\"array\", \"variantArray\"].includes(field.dataType) &&\n      field.dataElementType === \"object\"\n    ) {\n      const values = watch(field.name);\n      return (\n        <NestedObjectTable\n          collection={collection}\n          key={field.name}\n          values={values}\n          field={field}\n          setValue={setValue}\n        />\n      );\n    }\n    if (field.inputType === \"file\") {\n      return (\n        <FileInputNew\n          key={field.name}\n          control={control}\n          name={field.name}\n          label={field.label}\n          multiple={field.multiple}\n          thumbnail\n        />\n      );\n    }\n    if (field.fieldType === \"dateRange\") {\n      if (field.inputType === \"calendar\") {\n        return (\n          <CalendarInput\n            key={field.name}\n            control={control}\n            label={field.label}\n            name={field.name}\n            dateWindow={field.dateWindow}\n            required={field.required}\n            disabledDates={field.disabledDates || []}\n            multipleRanges={field.multipleRanges}\n          />\n        );\n      }\n    }\n    if (field.fieldType === \"input\") {\n      if (field.inputType === \"phone\") {\n        return (\n          <MobileNumberInput\n            label={field.label}\n            key={field.name}\n            name={field.name}\n            formOptions={{ required: field.required }}\n            control={control}\n          />\n        );\n      }\n      return (\n        <Input\n          key={field.name}\n          {...register(field.name)}\n          type={field.inputType || \"text\"}\n          label={field.label}\n          required={field.required}\n          error={errors[field.name]}\n          autoFocus={i === 0}\n        />\n      );\n    }\n    if (field.fieldType === \"textarea\") {\n      return (\n        <Textarea\n          key={field.name}\n          {...register(field.name)}\n          label={field.label}\n          required={field.required}\n          error={errors[field.name]}\n          autoFocus={i === 0}\n        />\n      );\n    }\n    if (field.fieldType === \"richText\") {\n      return (\n        <RichText\n          key={field.name}\n          control={control}\n          name={field.name}\n          autoFocus={i === 0}\n          label={field.label}\n          required={field.required}\n        />\n      );\n    }\n    if (field.fieldType === \"combobox\") {\n      return (\n        <Combobox\n          key={field.name}\n          label={field.label}\n          control={control}\n          name={field.name}\n          multiple={field.multiple}\n          formOptions={{ required: field.required }}\n          options={field.options || []}\n        />\n      );\n    }\n    if (field.fieldType === \"select\") {\n      return (\n        <Select\n          key={field.name}\n          control={control}\n          label={field.label}\n          {...(field.optionType === \"predefined\" && {\n            options: field.options || [],\n          })}\n          {...(field.optionType === \"collection\" && {\n            url: `${endpoints.adminDynamic}/${field.collection}`,\n          })}\n          getQuery={(inputValue, selected) => ({\n            ...(inputValue && { [field.optionLabel]: inputValue }),\n            ...(selected && { [field.optionValue]: selected }),\n          })}\n          handleData={(item) => ({\n            label: item[field.optionLabel],\n            value: item[field.optionValue],\n          })}\n          multiple={field.multiple}\n          name={field.name}\n          formOptions={{ required: field.required }}\n          className={s.itemName}\n        />\n      );\n    }\n  });\n\n  const addVariant = watch(\"addVariant\");\n  const category = watch(\"category\");\n\n  useEffect(() => {\n    const defualtStoreSubcategoryFields = [\n      {\n        name: \"title\",\n        required: true,\n        label: \"Title\",\n        dataType: \"string\",\n        fieldType: \"input\",\n        inputType: \"text\",\n      },\n      {\n        name: \"description\",\n        inputType: \"text\",\n        dataType: \"string\",\n        fieldType: \"textarea\",\n        label: \"Description\",\n        required: true,\n      },\n      {\n        name: \"images\",\n        required: true,\n        label: \"Images\",\n        dataType: \"array\",\n        fieldType: \"input\",\n        inputType: \"file\",\n        dataElementType: \"string\",\n        multiple: true,\n      },\n      {\n        name: \"price\",\n        inputType: \"number\",\n        dataType: \"number\",\n        fieldType: \"input\",\n        label: \"Price\",\n        required: true,\n        decimalPlaces: \"0.00\",\n      },\n      {\n        name: \"whatsappNumber\",\n        required: true,\n        label: \"WhatsApp\",\n        dataType: \"string\",\n        fieldType: \"input\",\n        inputType: \"phone\",\n      },\n    ];\n    const _edit = { ...edit };\n    if (edit) {\n      collectionFields.forEach((field) => {\n        if (field.inputType === \"date\") {\n          _edit[field.name] = moment(_edit[field.name], \"YYYY-MM-DD\");\n        } else if (field.inputType === \"datetime-local\") {\n          _edit[field.name] = moment(_edit[field.name], \"YYYY-MM-DD hh:mm\");\n        } else if (\n          field.dataType === \"objectId\" &&\n          typeof edit[field.name] === \"object\"\n        ) {\n          _edit[field.name] = edit[field.name][field.optionValue];\n        } else if (\n          field.dataElementType === \"objectId\" &&\n          typeof (edit[field.name] || [])[0] === \"object\"\n        ) {\n          _edit[field.name] = edit[field.name].map(\n            (item) => item[field.optionValue]\n          );\n        } else if (\n          field.name === \"variants\" &&\n          collection?.name === \"Product\"\n        ) {\n          _edit.addVariant = !!edit.variants?.length;\n        }\n        if (\n          collection?.name === \"Store Subcategory\" &&\n          field.name === \"fields\"\n        ) {\n          _edit.fields = edit.fields || defualtStoreSubcategoryFields;\n        }\n      });\n    } else {\n      if (collection?.name === \"Store Subcategory\") {\n        _edit.fields = defualtStoreSubcategoryFields;\n      }\n    }\n    reset(_edit);\n  }, [edit]);\n  useEffect(() => {\n    if (category) {\n      set_fields(\n        collectionFields.filter(\n          (item) => !item.category || item.category === category\n        )\n      );\n    } else {\n      set_fields(collectionFields.filter((item) => item.name === \"category\"));\n    }\n  }, [category]);\n\n  return (\n    <form\n      onSubmit={handleSubmit((values) => {\n        if (collection?.name === \"Product\") {\n          const fields = _fields.map((item) => item.name);\n          const data = {};\n          Object.entries(values)\n            .filter(([key, value]) => fields.includes(key))\n            .forEach(([key, value]) => {\n              data[key] = value;\n            });\n          onSubmit({\n            ...data,\n            _id: edit?._id || Math.random().toString(36).substr(-8),\n          });\n        } else {\n          onSubmit({\n            ...values,\n            _id: edit?._id || Math.random().toString(36).substr(-8),\n          });\n        }\n      })}\n      className={`${s.dynamicForm} grid gap-1 p-1`}\n    >\n      {fields}\n\n      {collection?.name === \"Product\" &&\n        category &&\n        collection?.fields.some((item) => \"variantArray\" === item.dataType) && (\n          <Checkbox {...register(\"addVariant\")} label=\"Add Variant\" />\n        )}\n\n      {addVariant && (\n        <Variants\n          collection={collection}\n          setValue={setValue}\n          getValues={getValues}\n        />\n      )}\n\n      <div className=\"btns\">\n        <button className=\"btn\" disabled={loading}>\n          {edit ? \"Update\" : \"Submit\"}\n        </button>\n      </div>\n    </form>\n  );\n};\n\nconst Variants = ({ collection, setValue, getValues }) => {\n  const [formOpen, setFormOpen] = useState(false);\n  const [edit, setEdit] = useState(null);\n  const [variants, setVariants] = useState(getValues(\"variants\") || []);\n  const [fields, setFields] = useState(\n    collection.fields.filter((item) => item.dataType === \"variantArray\")\n  );\n\n  return (\n    <div className={s.productVariants}>\n      <div className=\"flex justify-space-between mb-1\">\n        <h3>Product Variants</h3>\n        <button className=\"btn\" type=\"button\" onClick={() => setFormOpen(true)}>\n          Add Variant\n        </button>\n      </div>\n\n      <Table\n        columns={[\n          ...fields.map((item) => ({ label: item.label })),\n          { label: \"Price\" },\n          { label: \"Images\" },\n          { label: \"Actions\" },\n        ]}\n      >\n        {variants.map((item, i) => (\n          <tr key={i}>\n            <td>{item[fields[0]?.name]}</td>\n            <td>{item[fields[1]?.name]}</td>\n            <td>{item.price}</td>\n            <td>{(item.images || []).length}</td>\n            <TableActions\n              actions={[\n                {\n                  icon: <FaPencilAlt />,\n                  label: \"Edit\",\n                  callBack: () => {\n                    setEdit(item);\n                    setFormOpen(true);\n                  },\n                },\n                {\n                  icon: <FaRegTrashAlt />,\n                  label: \"Delete\",\n                  callBack: () =>\n                    Prompt({\n                      type: \"confirmation\",\n                      message: `Are you sure you want to remove this Variant?`,\n                      callback: () => {\n                        setVariants(variants.filter((i) => i._id !== item._id));\n                        setValue(\n                          \"variants\",\n                          variants.filter((i) => i._id !== item._id)\n                        );\n                      },\n                    }),\n                },\n              ]}\n            />\n          </tr>\n        ))}\n      </Table>\n\n      <Modal\n        head\n        label={`${edit ? \"Update\" : \"Add\"} Item`}\n        open={formOpen}\n        setOpen={() => {\n          setFormOpen(false);\n          setEdit(null);\n        }}\n        className={s.nestedObjectFormModal}\n      >\n        <VariantForm\n          edit={edit}\n          fields={fields}\n          images={getValues(\"images\")}\n          onSubmit={(newObj) => {\n            if (edit) {\n              setVariants(\n                variants.map((item) =>\n                  item._id === newObj._id ? newObj : item\n                )\n              );\n              setValue(\n                \"variants\",\n                variants.map((item) =>\n                  item._id === newObj._id ? newObj : item\n                )\n              );\n              setEdit(null);\n            } else {\n              setVariants([...variants, newObj]);\n              setValue(\"variants\", [...variants, newObj]);\n            }\n            // setValues\n            setFormOpen(false);\n          }}\n        />\n      </Modal>\n    </div>\n  );\n};\nconst VariantForm = ({ edit, fields, images, onSubmit }) => {\n  const { handleSubmit, control, register, reset, errors } = useForm({\n    resolver: useYup(\n      yup.object({\n        price: yup.number().typeError(\"Please enter a valid number\"),\n        // yup.string()\n      })\n    ),\n  });\n  useEffect(() => {\n    if (edit) {\n      reset({ ...edit });\n    }\n  }, []);\n\n  const _fields = fields.map((field, i) => {\n    if (field.fieldType === \"combobox\") {\n      return (\n        <Combobox\n          key={field.name}\n          label={field.label}\n          control={control}\n          name={field.name}\n          // multiple={field.multiple}\n          formOptions={{ required: field.required }}\n          options={field.options || []}\n        />\n      );\n    }\n    if (field.fieldType === \"select\") {\n      return (\n        <Select\n          key={field.name}\n          control={control}\n          label={field.label}\n          {...(field.optionType === \"predefined\" && {\n            options: field.options,\n          })}\n          {...(field.optionType === \"collection\" && {\n            url: `${endpoints.adminDynamic}/${field.collection}`,\n          })}\n          getQuery={(inputValue, selected) => ({\n            ...(inputValue && { [field.optionLabel]: inputValue }),\n            ...(selected && { [field.optionValue]: selected }),\n          })}\n          handleData={(item) => ({\n            label: item[field.optionLabel],\n            value: item[field.optionValue],\n          })}\n          // multiple={field.multiple}\n          name={field.name}\n          formOptions={{ required: field.required }}\n          className={s.itemName}\n        />\n      );\n    }\n  });\n  return (\n    <form\n      className={`${s.variantForm} p-1 grid gap-1`}\n      onSubmit={handleSubmit((values) => {\n        onSubmit({\n          ...values,\n          _id: edit?._id || Math.random().toString(36).substr(-8),\n        });\n      })}\n    >\n      <CustomRadio\n        control={control}\n        label=\"Images\"\n        name={`images`}\n        className={s.variantImages}\n        multiple\n        selectedClassName={s.selected}\n        options={images\n          .filter(\n            (item) => typeof item === \"string\" || \"uploadFilePath\" in item\n          )\n          .map((item) => {\n            if (typeof item === \"string\") {\n              return { value: item };\n            }\n            if (\"uploadFilePath\" in item) {\n              return { value: item.uploadFilePath };\n            }\n            if (\"type\" in item && item.type.startsWith(\"image\")) {\n              const url = URL.createObjectURL(item);\n              return { value: url };\n            }\n          })}\n        renderItem={(opt) => <img src={opt.value} />}\n      />\n\n      {_fields}\n\n      <Input label=\"Price Difference\" type=\"number\" {...register(\"price\")} />\n\n      <div className=\"btns\">\n        <button className=\"btn\">{edit ? \"Update\" : \"Submit\"}</button>\n      </div>\n    </form>\n  );\n};\n\nconst NestedObjectTable = ({ collection, field, values = [], setValue }) => {\n  const [formOpen, setFormOpen] = useState(false);\n  const [edit, setEdit] = useState(null);\n  const { config } = useContext(SiteContext);\n  const orderFields =\n    collection.name === \"Order\"\n      ? collection.fields\n          .find((item) => item.name === \"products\")\n          .fields.filter((item) => ![\"product\", \"variant\"].includes(item.name))\n      : null;\n  return (\n    <section className={s.nestedTable} onSubmit={(e) => e.stopPropagation()}>\n      <div className=\"flex justify-space-between align-center mb-1\">\n        <h3>{field.label}</h3>\n        {!(collection.name === \"Order\" && field.name === \"products\") && (\n          <button\n            className=\"btn\"\n            type=\"button\"\n            onClick={() => setFormOpen(true)}\n          >\n            Add\n          </button>\n        )}\n      </div>\n      {collection.name === \"Order\" && field.name === \"products\" ? (\n        <>\n          <ul className={s.products}>\n            {(values || []).map((item, i) => (\n              <li key={i} className={s.product}>\n                <div className={s.thumbnail}>\n                  <img src={(item.variant?.images || item.product.images)[0]} />\n                </div>\n                <div className={s.productDetail}>\n                  <h3>{item.product?.title}</h3>\n                  {(orderFields || []).map((field) => (\n                    <p key={field.name}>\n                      <strong>{field.label}</strong>:{\" \"}\n                      <span>{item[field.name]}</span>\n                    </p>\n                  ))}\n                </div>\n                <span className={s.price}>\n                  {config?.siteConfig?.currency}{\" \"}\n                  {(\n                    (item.product.price + (item.variant?.price || 0)) *\n                    (item.qty || 1)\n                  ).toLocaleString()}\n                </span>\n              </li>\n            ))}\n          </ul>\n          <hr />\n          <p className={s.subtotal}>\n            Subtotal ({values.reduce((p, c) => p + (c.qty || 1), 0)} item):{\" \"}\n            <strong>\n              {config?.siteConfig.currency +\n                \" \" +\n                values\n                  .reduce(\n                    (p, c) =>\n                      p +\n                      (c.product.price + (c.variant?.price || 0)) *\n                        (c.qty || 1),\n                    0\n                  )\n                  .toLocaleString()}\n            </strong>\n          </p>\n        </>\n      ) : (\n        <DynamicTable\n          fields={field.fields}\n          data={values}\n          actions={(item) => [\n            {\n              icon: <FaPencilAlt />,\n              label: \"Edit\",\n              callBack: () => {\n                setEdit(item);\n                setFormOpen(true);\n              },\n            },\n            {\n              icon: <FaRegTrashAlt />,\n              label: \"Delete\",\n              callBack: () =>\n                Prompt({\n                  type: \"confirmation\",\n                  message: `Are you sure you want to remove this Collection?`,\n                  callback: () => {\n                    setValue(\n                      field.name,\n                      values.filter((i) => i._id !== item._id)\n                    );\n                  },\n                }),\n            },\n          ]}\n        />\n      )}\n\n      <Modal\n        head\n        label={`${edit ? \"Update\" : \"Add\"} Item`}\n        open={formOpen}\n        setOpen={() => {\n          setFormOpen(false);\n          setEdit(null);\n        }}\n        className={s.nestedObjectFormModal}\n      >\n        {collection.name === \"Store Subcategory\" && field.name === \"fields\" ? (\n          <FieldForm\n            edit={edit}\n            key={edit ? \"edit\" : \"add\"}\n            fields={values}\n            editCollection={collection}\n            // collections={collections}\n            // productCollection={collections.find((c) => c?.name === \"Product\")}\n            onSuccess={(newField) => {\n              if (edit) {\n                setValue(\n                  field.name,\n                  values.map((item) =>\n                    item.name.toLowerCase() === newField.name.toLowerCase()\n                      ? newField\n                      : item\n                  )\n                );\n                setEdit(null);\n              } else {\n                setValue(field.name, [...values, newField]);\n              }\n              setFormOpen(false);\n            }}\n            // clear={() => setEdit(null)}\n          />\n        ) : (\n          <DynamicForm\n            edit={edit}\n            fields={field.fields}\n            onSubmit={(newObj) => {\n              if (edit) {\n                setValue(\n                  field.name,\n                  values.map((item) =>\n                    item._id === newObj._id ? newObj : item\n                  )\n                );\n                setEdit(null);\n              } else {\n                setValue(field.name, [...values, newObj]);\n              }\n              setFormOpen(false);\n            }}\n          />\n        )}\n      </Modal>\n    </section>\n  );\n};\n\nconst ProductFilterForm = ({ field, value, productCollection, setValue }) => {\n  const [formOpen, setFormOpen] = useState(false);\n  return (\n    <section className={s.nestedTable} onSubmit={(e) => e.stopPropagation()}>\n      <div className=\"flex justify-space-between align-center mb-1\">\n        <h3>{field.label} Filters</h3>\n        <button className=\"btn\" type=\"button\" onClick={() => setFormOpen(true)}>\n          Update {field.label}\n        </button>\n      </div>\n\n      <Table\n        className={s.fields}\n        columns={[\n          { label: \"Field\" },\n          { label: \"Data Type\" },\n          { label: \"Filter Type\" },\n          { label: \"value\" },\n          // { label: \"Input Type\" },\n          // { label: \"Required\" },\n        ]}\n      >\n        {Object.entries(value || {}).map(([key, value], i) => (\n          <tr key={i}>\n            <td>{key}</td>\n            <td>\n              {\n                productCollection.fields.find((item) => item.name === key)\n                  ?.dataType\n              }\n            </td>\n            <td>{value.filterType}</td>\n            <td>\n              {value.filterType === \"minMax\" && (\n                <>\n                  Min: {value.min}; Max: {value.max}\n                </>\n              )}\n              {value.filterType === \"arrayContains\" && (\n                <>{value.array?.length || 0} items</>\n              )}\n              {value.filterType === \"stringContains\" && <>{value.text}</>}\n            </td>\n          </tr>\n        ))}\n      </Table>\n\n      <Modal\n        head\n        label={`${field.label} Filters`}\n        open={formOpen}\n        setOpen={() => {\n          setFormOpen(false);\n        }}\n        className={s.nestedObjectFormModal}\n      >\n        <ProductFilterFieldsForm\n          productCollection={productCollection}\n          value={value}\n          onSubmit={(newObj) => {\n            setValue(field.name, newObj);\n            setFormOpen(false);\n          }}\n        />\n      </Modal>\n    </section>\n  );\n};\nconst ProductFilterFieldsForm = ({\n  value = {},\n  productCollection,\n  onSubmit,\n}) => {\n  const {\n    handleSubmit,\n    register,\n    control,\n    watch,\n    reset,\n    formState: { errors },\n  } = useForm();\n  const fields = watch(\"fields\");\n  useEffect(() => {\n    const formValues = {\n      fields: Object.keys(value),\n    };\n    Object.entries(value).forEach(([key, value]) => {\n      const field = productCollection.fields.find(\n        (field) => field.name === key\n      );\n      if (!field) return;\n\n      if (field.dataType === \"number\" && value.filterType === \"minMax\") {\n        formValues[key + \"___min\"] = value.min || \"\";\n        formValues[key + \"___max\"] = value.max || \"\";\n      } else if (\n        field.dataType === \"string\" &&\n        [\"input\", \"textarea\"].includes(field.fieldType)\n      ) {\n        formValues[key] = value.text;\n      } else if (field.fieldType === \"combobox\") {\n        formValues[key] = value.array;\n      } else if (field.fieldType === \"select\") {\n        formValues[key] = value.array;\n      }\n    });\n    reset(formValues);\n  }, []);\n  return (\n    <form\n      onSubmit={handleSubmit((values) => {\n        const data = {};\n        Object.entries(values).forEach(([key, value]) => {\n          let [fieldName, subLabel] = key.split(\"___\");\n          if (subLabel) {\n            key = fieldName;\n          }\n          if (!values.fields.includes(key)) {\n            return;\n          }\n          const field = productCollection.fields.find(\n            (field) => field.name === key\n          );\n          if (!field) {\n            return;\n          }\n          if (\n            field.dataType === \"string\" &&\n            [\"input\", \"textarea\"].includes(field.fieldType)\n          ) {\n            data[key] = {\n              filterType: \"stringContains\",\n              text: value,\n            };\n          } else if (field.dataType === \"number\") {\n            data[fieldName] = {\n              ...data[fieldName],\n              filterType: \"minMax\",\n              [subLabel]: +value,\n            };\n          } else if (\n            [\"string\", \"objectId\"].includes(field.dataType) &&\n            field.fieldType === \"select\"\n          ) {\n            data[key] = {\n              filterType: \"arrayContains\",\n              array: value,\n            };\n          }\n        });\n        onSubmit(data);\n      })}\n      className=\"grid gap-1 p-1\"\n    >\n      <CustomRadio\n        control={control}\n        name=\"fields\"\n        className={s.itemColumnsRadio}\n        multiple\n        label=\"Fields\"\n        options={productCollection.fields\n          .filter(\n            (item) =>\n              !(item.inputType === \"file\" || item.inputType === \"calendar\")\n          )\n          .map((item) => ({\n            label: item.label,\n            value: item.name,\n          }))}\n      />\n\n      {(fields || []).map((f, i) => {\n        const field = productCollection.fields.find(\n          (field) => field.name === f\n        );\n        if (!field) return;\n\n        if (\n          field.dataType === \"string\" &&\n          [\"input\", \"textarea\"].includes(field.fieldType)\n        ) {\n          return (\n            <Input\n              key={i}\n              {...register(field.name)}\n              type={\"text\"}\n              label={`${field.label} contains`}\n              required={field.required}\n              error={errors[field.name]}\n            />\n          );\n        } else if (field.dataType === \"number\") {\n          return (\n            <div key={i} className=\"flex gap-1\">\n              <Input\n                className=\"all-columns\"\n                {...register(field.name + \"___min\")}\n                type={\"number\"}\n                label={`Minimum ${field.label}`}\n                required={field.required}\n                error={errors[field.name + \"___min\"]}\n              />\n              <Input\n                className=\"all-columns\"\n                {...register(field.name + \"___max\")}\n                type={\"number\"}\n                label={`Maximum ${field.label}`}\n                required={field.required}\n                error={errors[field.name + \"___max\"]}\n              />\n            </div>\n          );\n        } else if (\n          // [\"string\", \"objectId\"].includes(field.dataType) &&\n          field.fieldType === \"select\"\n        ) {\n          return (\n            <Select\n              key={i}\n              control={control}\n              label={field.label}\n              multiple\n              {...(field.optionType === \"predefined\" && {\n                options: field.options,\n              })}\n              {...(field.optionType === \"collection\" && {\n                url: `${endpoints.adminDynamic}/${field.collection}`,\n              })}\n              getQuery={(inputValue, selected) => ({\n                ...(inputValue && { [field.optionLabel]: inputValue }),\n                ...(selected && { [field.optionValue]: selected }),\n              })}\n              handleData={(item) => ({\n                label: item[field.optionLabel],\n                value: item[field.optionValue],\n              })}\n              name={field.name}\n              formOptions={{ required: true }}\n              className={s.itemName}\n            />\n          );\n        } else if (\n          // [\"string\", \"objectId\"].includes(field.dataType) &&\n          field.fieldType === \"combobox\"\n        ) {\n          return (\n            <Combobox\n              key={i}\n              label={field.label}\n              control={control}\n              name={field.name}\n              multiple\n              formOptions={{ required: true }}\n              options={field.options || []}\n            />\n          );\n        }\n      })}\n\n      <div className=\"flex justify-center\">\n        <button className=\"btn\">Update</button>\n      </div>\n    </form>\n  );\n};\n\nexport default MainForm;\n","import { useContext, useEffect, useState } from \"react\";\nimport { SiteContext } from \"SiteContext\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport { useFetch } from \"hooks\";\nimport { Prompt, Modal } from \"Components/modal\";\nimport { paths, endpoints } from \"config\";\nimport { DynamicTable, ImportExport } from \"Components/elements\";\nimport { FaPencilAlt, FaRegTrashAlt } from \"react-icons/fa\";\nimport s from \"./payments.module.scss\";\n\nimport DynamicForm from \"./dynamicForm\";\nimport { BsList } from \"react-icons/bs\";\nimport { GoArrowLeft, GoPlus } from \"react-icons/go\";\n\nconst DynamicTablePage = ({ setSidebarOpen }) => {\n  const [filters, setFilters] = useState({});\n  const { business, checkPermission } = useContext(SiteContext);\n  const [templateData, setTemplateData] = useState([]);\n  const [edit, setEdit] = useState(null);\n  const [addData, setAddData] = useState(false);\n  const [collection, setCollection] = useState(null);\n  const [productCollection, setProductCollection] = useState(null);\n  const navigate = useNavigate();\n  const { \"*\": table } = useParams();\n  const { get: getCollection, loading: gettingCollection } = useFetch(\n    `${endpoints.adminCollections}/${table}`\n  );\n  const { get: getProductCollection, loading: gettingProductCollection } =\n    useFetch(`${endpoints.adminCollections}/Product`);\n  const { remove: deleteData } = useFetch(\n    `${endpoints.adminDynamic}/${table}/{ID}`\n  );\n\n  useEffect(() => {\n    getCollection()\n      .then(({ data }) => {\n        if (data.success) {\n          const _template = [];\n          for (let i = 0; i < 5; i++) {\n            const item = {};\n            data.data.fields.forEach((field) => {\n              if (field.dataType === \"date\") {\n                return (item[field.name] = new Date()\n                  .toISOString()\n                  .substring(0, 10));\n              }\n              if (field.dataType === \"number\") {\n                return (item[field.name] =\n                  +(Math.random() * 1000).toFixed(0) + 1000);\n              }\n              if (field.dataType === \"objectId\") {\n                return (item[field.name] =\n                  new Date().getTime().toString(16) +\n                  (+(Math.random() * 10000000000000000000).toFixed(0)).toString(\n                    16\n                  ));\n              }\n              if (\n                [\"combobox\", \"select\"].includes(field.fieldType) &&\n                field.options?.length\n              ) {\n                return (item[field.name] =\n                  field.options[i]?.value || field.options[0]?.value);\n              }\n              item[field.name] = `${field.label} ${i}`;\n            });\n            _template.push(item);\n          }\n          setTemplateData(_template);\n          return setCollection(data.data);\n        }\n      })\n      .catch((err) => Prompt({ type: \"error\", message: err.message }));\n    if (table === \"Campaign\") {\n      getProductCollection()\n        .then(({ data }) => {\n          if (data.success) {\n            return setProductCollection(data.data);\n          }\n        })\n        .catch((err) => Prompt({ type: \"error\", message: err.message }));\n    }\n  }, []);\n  return (\n    <div className={`${s.content} grid gap-1 m-a p-1`}>\n      <div className=\"flex justify-space-between\">\n        <div\n          className={`flex align-center pointer gap_5  ml-1`}\n          onClick={() => setSidebarOpen((prev) => !prev)}\n        >\n          <BsList style={{ fontSize: \"1.75rem\" }} />\n          <h2>{table}</h2>\n          {checkPermission(`${business?.business._id}_${table}_create`) && (\n            <button\n              className=\"btn clear iconOnly\"\n              onClick={(e) => {\n                e.stopPropagation();\n                setAddData(true);\n              }}\n            >\n              <GoPlus />\n            </button>\n          )}\n        </div>\n        <div className=\"flex gap-1\">\n          <button\n            className=\"btn clear iconOnly\"\n            onClick={() =>\n              navigate(\n                paths.dashboard.replace(\"*\", \"\") +\n                  paths.dynamicTables.replace(\"/*\", \"\")\n              )\n            }\n          >\n            <GoArrowLeft />\n          </button>\n        </div>\n      </div>\n      <DynamicTable\n        admin\n        fields={collection?.fields}\n        loading={gettingCollection}\n        url={`${endpoints.adminDynamic}/${table}`}\n        filters={filters}\n        pagination\n        actions={(item) => [\n          ...(checkPermission(`${business?.business._id}_${table}_update`)\n            ? [\n                {\n                  icon: <FaPencilAlt />,\n                  label: \"Edit\",\n                  callBack: () => {\n                    setEdit(item);\n                    setAddData(true);\n                  },\n                },\n              ]\n            : []),\n          ...(checkPermission(`${business?.business._id}_${table}_delete`)\n            ? [\n                {\n                  icon: <FaRegTrashAlt />,\n                  label: \"Delete\",\n                  callBack: () =>\n                    Prompt({\n                      type: \"confirmation\",\n                      message: `Are you sure you want to remove this Collection?`,\n                      callback: () => {\n                        deleteData({}, { params: { \"{ID}\": item._id } }).then(\n                          ({ data }) => {\n                            if (data.success) {\n                              setFilters((prev) => ({ ...prev }));\n                              // setData((prev) =>\n                              //   prev.filter((data) => data._id !== item._id)\n                              // );\n                            } else {\n                              Prompt({ type: \"error\", message: data.message });\n                            }\n                          }\n                        );\n                      },\n                    }),\n                },\n              ]\n            : []),\n        ]}\n      />\n      <Modal\n        head\n        label={`${edit ? \"Update\" : \"Add\"} ${collection?.name || \"Collection\"}`}\n        open={addData}\n        setOpen={() => {\n          setAddData(false);\n          setEdit(null);\n        }}\n        className={s.dynamicFormModal}\n      >\n        <DynamicForm\n          edit={edit}\n          collection={collection}\n          {...([\"Campaign\", \"Order\"].includes(collection?.name) && {\n            productCollection,\n          })}\n          onSuccess={(newData) => {\n            if (edit) {\n              setFilters((prev) => ({ ...prev }));\n              // setData((prev) =>\n              //   prev.map((t) => (t._id === edit._id ? newData : t))\n              // );\n              setEdit(null);\n            } else {\n              setFilters((prev) => ({ ...prev }));\n              // setData((prev) => [...prev, newData]);\n            }\n            setAddData(false);\n          }}\n        />\n      </Modal>\n    </div>\n  );\n};\n\nexport default DynamicTablePage;\n","import { useEffect, useState, useCallback, useContext } from \"react\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport { useFetch } from \"hooks\";\nimport { Prompt, Modal } from \"Components/modal\";\nimport { paths, endpoints } from \"config\";\nimport { Table, TableActions } from \"Components/elements\";\nimport { FaPencilAlt, FaRegTrashAlt } from \"react-icons/fa\";\nimport s from \"./payments.module.scss\";\n\nimport CollectionForm from \"./form\";\nimport DynamicTable from \"./dynamicTable\";\nimport SchemaForm from \"./schemaTemplateForm\";\nimport { SiteContext } from \"SiteContext\";\nimport { BsList } from \"react-icons/bs\";\nimport { GoPlus } from \"react-icons/go\";\n\nconst Collections = ({ setSidebarOpen }) => {\n  const { checkPermission } = useContext(SiteContext);\n  const [edit, setEdit] = useState(null);\n  const [addCollection, setAddCollection] = useState(false);\n  const [importSchema, setImportSchema] = useState(false);\n  const [collections, setCollections] = useState([]);\n  const { get: getCollections, loading } = useFetch(endpoints.adminCollections);\n  const { remove: deleteCollection, loading: deleting } = useFetch(\n    endpoints.adminCollections + `/{ID}`\n  );\n  const navigate = useNavigate();\n  const { \"*\": table } = useParams();\n\n  const fetchRecords = useCallback(() => {\n    getCollections()\n      .then(({ data }) => {\n        if (data.success) {\n          return setCollections(data.data);\n        }\n      })\n      .catch((err) => Prompt({ type: \"error\", message: err.message }));\n  }, []);\n\n  useEffect(() => {\n    fetchRecords();\n  }, []);\n\n  if (table) {\n    return <DynamicTable setSidebarOpen={setSidebarOpen} />;\n  }\n  return (\n    <div className={`${s.content} grid gap-1 m-a p-1`}>\n      <div className={`flex ${s.head} justify-space-between`}>\n        <div\n          className={`flex align-center pointer gap_5  ml-1`}\n          onClick={() => setSidebarOpen((prev) => !prev)}\n        >\n          <BsList style={{ fontSize: \"1.75rem\" }} />\n          <h2>All Tables</h2>\n          <button\n            className=\"btn clear iconOnly\"\n            onClick={(e) => {\n              e.stopPropagation();\n              setAddCollection(true);\n            }}\n          >\n            <GoPlus />\n          </button>\n        </div>\n      </div>\n      <Table\n        loading={loading}\n        className={s.collections}\n        columns={[{ label: \"Name\" }, { label: \"Action\" }]}\n      >\n        {collections.map((item, i) => (\n          <tr\n            key={i}\n            onClick={(e) => {\n              if (e.target.tagName === \"TD\") {\n                navigate(paths.dynamicTable.replace(\":table\", item.name));\n              }\n            }}\n          >\n            <td>{item.name}</td>\n            <TableActions\n              actions={[\n                ...(checkPermission(\"dynamic_table_update\")\n                  ? [\n                      {\n                        icon: <FaPencilAlt />,\n                        label: \"Edit\",\n                        callBack: () => {\n                          setEdit(item);\n                          setAddCollection(true);\n                        },\n                      },\n                    ]\n                  : []),\n                ...(checkPermission(\"dynamic_table_delete\")\n                  ? [\n                      {\n                        icon: <FaRegTrashAlt />,\n                        label: \"Delete\",\n                        disabled: deleting,\n                        callBack: () =>\n                          Prompt({\n                            type: \"confirmation\",\n                            message: `Are you sure you want to remove this Collection?`,\n                            callback: () => {\n                              deleteCollection(\n                                {},\n                                {\n                                  params: {\n                                    \"{ID}\": item._id,\n                                  },\n                                }\n                              )\n                                .then(({ data }) => {\n                                  if (data?.success) {\n                                    setCollections((prev) =>\n                                      prev.filter(\n                                        (product) => product._id !== item._id\n                                      )\n                                    );\n                                  }\n                                })\n                                .catch((err) =>\n                                  Prompt({\n                                    type: \"error\",\n                                    message: err.message,\n                                  })\n                                );\n                            },\n                          }),\n                      },\n                    ]\n                  : []),\n              ]}\n            />\n          </tr>\n        ))}\n      </Table>\n\n      <Modal\n        head\n        label={`${edit ? \"Update\" : \"Add\"} Table`}\n        open={addCollection}\n        setOpen={() => {\n          setAddCollection(false);\n          setEdit(null);\n        }}\n        className={s.collectionFormModal}\n      >\n        <CollectionForm\n          collections={collections}\n          edit={edit}\n          onSuccess={(newCollection) => {\n            if (edit) {\n              setCollections((prev) =>\n                prev.map((t) =>\n                  t._id.toLowerCase() === edit._id.toLowerCase()\n                    ? newCollection\n                    : t\n                )\n              );\n              setEdit(newCollection);\n            } else {\n              setEdit(newCollection);\n              setCollections((prev) => [...prev, newCollection]);\n            }\n            // setAddCollection(false);\n          }}\n        />\n      </Modal>\n\n      {/* <Modal\n        head\n        label=\"Import Schema\"\n        open={importSchema}\n        setOpen={() => {\n          setImportSchema(false);\n        }}\n        className={s.collectionFormModal}\n      >\n        <SchemaForm\n          onSuccess={(schemas) => {\n            setImportSchema(false);\n            fetchRecords();\n          }}\n        />\n      </Modal> */}\n    </div>\n  );\n};\n\nexport default Collections;\n","import { useState, useEffect, useCallback } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { Select } from \"Components/elements\";\nimport { useYup, useFetch } from \"hooks\";\nimport { Prompt } from \"Components/modal\";\nimport * as yup from \"yup\";\nimport s from \"./payments.module.scss\";\nimport { endpoints } from \"config\";\n\nconst mainSchema = yup.object({\n  schema_id: yup.string().required(),\n});\n\nconst Form = ({ onSuccess }) => {\n  const { handleSubmit, control } = useForm({\n    resolver: useYup(mainSchema),\n  });\n  const [schemas, setSchemas] = useState([]);\n  const { get: getSchemas, loading } = useFetch(endpoints.schemaTemplates);\n  const { post: saveSchema, loading: savingSchema } = useFetch(\n    endpoints.schemaTemplates\n  );\n\n  useEffect(() => {\n    getSchemas()\n      .then(({ data }) => {\n        if (data?.success) {\n          setSchemas(data.data);\n        }\n      })\n      .catch((err) => Prompt({ type: \"error\", message: err.message }));\n  }, []);\n  return (\n    <div className={`grid gap-1 p-1`}>\n      <form\n        onSubmit={handleSubmit((values) => {\n          saveSchema(values)\n            .then(({ data }) => {\n              if (!data.success) {\n                return Prompt({ type: \"error\", message: data.message });\n              }\n              return Prompt({\n                type: \"success\",\n                message: data.message,\n                callback: () => {\n                  onSuccess(data.data);\n                },\n              });\n            })\n            .catch((err) => Prompt({ type: \"error\", message: err.message }));\n        })}\n        className={`${s.mainForm} grid gap-1`}\n      >\n        <Select\n          control={control}\n          name=\"schema_id\"\n          label=\"Select Schema\"\n          options={schemas.map((item) => ({\n            label: item.name,\n            value: item._id,\n          }))}\n          formOptions={{ required: true }}\n        />\n        <div className=\"btns mt-1\">\n          <button className=\"btn\" disabled={loading || savingSchema}>\n            Submit\n          </button>\n        </div>\n      </form>\n    </div>\n  );\n};\n\nexport default Form;\n"],"names":["yup","arr","message","this","test","value","path","createError","includes","replace","mainSchema","name","required","optionsSchema","label","defaultFields","FieldForm","edit","fields","editCollection","collections","onSuccess","clear","useForm","resolver","useYup","noneOf","filter","item","map","dataType","fieldType","inputType","handleSubmit","register","reset","watch","setValue","control","clearErrors","errors","formState","dataElementType","dataElements","collection","optionType","options","onSubmit","useCallback","values","data","Object","entries","forEach","key","category","subcategory","multiRange","decimalPlaces","unique","useEffect","className","s","url","endpoints","getQuery","inputValue","selected","handleData","type","disabled","error","formOptions","coll","_id","find","NestedObjectFields","newValue","onChange","opt","Options","setOptions","newOptions","onClick","useState","setEdit","formOpen","setFormOpen","columns","action","placeholder","i","actions","icon","callBack","Prompt","callback","field","head","open","setOpen","productCollection","c","newField","toLowerCase","OptionsForm","newOption","clearForm","toString","product","Math","random","substr","setFields","editField","setEditField","err","setErr","setError","useFetch","saveCollection","post","updateCollection","put","tableName","loading","length","undefined","then","success","catch","JSON","stringify","readOnly","prev","DynamicForm","collectionFields","_fields","set_fields","f","typeError","phone","min","errorMessage","reduce","p","getValues","ProductFilterForm","NestedObjectTable","multiple","thumbnail","dateWindow","disabledDates","multipleRanges","autoFocus","optionLabel","optionValue","addVariant","defualtStoreSubcategoryFields","_edit","moment","variants","some","Variants","setVariants","price","images","VariantForm","newObj","selectedClassName","uploadFilePath","startsWith","URL","createObjectURL","renderItem","src","config","useContext","SiteContext","orderFields","e","stopPropagation","variant","title","siteConfig","currency","qty","toLocaleString","filterType","max","array","text","ProductFilterFieldsForm","formValues","keys","split","fieldName","subLabel","saveData","updateData","payload","findProperties","obj","FormData","file","append","setSidebarOpen","filters","setFilters","business","checkPermission","setTemplateData","addData","setAddData","setCollection","setProductCollection","navigate","useNavigate","table","useParams","getCollection","get","gettingCollection","getProductCollection","deleteData","remove","_template","Date","toISOString","substring","toFixed","getTime","push","style","fontSize","paths","admin","pagination","params","newData","schema_id","addCollection","setAddCollection","setCollections","getCollections","deleteCollection","deleting","fetchRecords","target","tagName","newCollection","t"],"sourceRoot":""}