{"version":3,"file":"static/js/764.51cfaacd.chunk.js","mappings":"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","sources":["webpack://cash-app/./src/Views/Dashboard/Accounting/quotes.module.scss?8207","Views/Dashboard/Accounting/MasterForm.js","Views/Dashboard/Accounting/index.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"content\":\"quotes_content__d6QGt\",\"innerWrapper\":\"quotes_innerWrapper__0o8+D\",\"sidebar\":\"quotes_sidebar__OueuR\",\"addButton\":\"quotes_addButton__XE+Gn\",\"btns\":\"quotes_btns__y2nuy\",\"listItem\":\"quotes_listItem__ityEv\",\"label\":\"quotes_label__VuSPM\",\"accountName\":\"quotes_accountName__zyenQ\",\"nestedList\":\"quotes_nestedList__B-cIy\",\"open\":\"quotes_open__aa1x+\",\"innerContent\":\"quotes_innerContent__wCHU6\",\"innerContentWrapper\":\"quotes_innerContentWrapper__rKsb7\",\"vouchers\":\"quotes_vouchers__t8sKZ\",\"footer\":\"quotes_footer__AWxAV\",\"analysysPlaceholder\":\"quotes_analysysPlaceholder__0wx94\",\"masterFormModal\":\"quotes_masterFormModal__36AN0\",\"masterForm\":\"quotes_masterForm__dXJKs\",\"print\":\"quotes_print__ir6Gn\",\"logo\":\"quotes_logo__Vsg-f\",\"box\":\"quotes_box__+p8As\",\"items\":\"quotes_items__ANNmM\",\"taxes\":\"quotes_taxes__cyTAG\",\"totalAmount\":\"quotes_totalAmount__rIs44\",\"word\":\"quotes_word__sjhD8\",\"digit\":\"quotes_digit__VyweO\",\"sign\":\"quotes_sign__sG6wg\",\"signature\":\"quotes_signature__YnCoV\",\"head\":\"quotes_head__uo7Hz\",\"quotes\":\"quotes_quotes__tCxCu\",\"date\":\"quotes_date__KOSsI\",\"customer\":\"quotes_customer__6hEHP\",\"net\":\"quotes_net__h-6C4\",\"actions\":\"quotes_actions__Qdwow\",\"addQuoteForm\":\"quotes_addQuoteForm__fmLXp\",\"itemForm\":\"quotes_itemForm__E47xe\",\"itemName\":\"quotes_itemName__hYpvW\",\"mainForm\":\"quotes_mainForm__Neb5l\"};","import { useEffect } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { Input, Combobox } from \"Components/elements\";\nimport { useYup, useFetch } from \"hooks\";\nimport { Prompt } from \"Components/modal\";\nimport * as yup from \"yup\";\nimport s from \"./quotes.module.scss\";\nimport { endpoints } from \"config\";\n\nconst mainSchema = yup.object({\n  name: yup.string().required(\"Please enter a name\"),\n  parent: yup.string(),\n  type: yup\n    .string()\n    .oneOf([\n      \"Cash\",\n      \"Bank\",\n      \"Customers\",\n      \"Suppliers\",\n      \"Sales\",\n      \"Purchase\",\n      \"Stock\",\n      \"null\",\n      \"Tax\",\n      null,\n    ])\n    .nullable(),\n  isGroup: yup.boolean().required(),\n  openingBalance: yup\n    .number()\n    .required(\"Please enter opening balance\")\n    .typeError(\"Please enter a valid number\"),\n});\n\nconst Form = ({ edit, masters = [], onSuccess }) => {\n  const {\n    handleSubmit,\n    register,\n    reset,\n    control,\n    formState: { errors },\n  } = useForm({\n    resolver: useYup(mainSchema),\n  });\n\n  const {\n    post: createMaster,\n    put: updateMaster,\n    loading,\n  } = useFetch(endpoints.accountingMasters + `/${edit?._id || \"\"}`);\n\n  useEffect(() => {\n    reset({\n      name: edit?.name || \"\",\n      parent: edit?.parent || \"null\",\n      type: edit?.type || \"null\",\n      isGroup: edit?.isGroup ?? true,\n      openingBalance: edit?.openingBalance || 0,\n    });\n  }, [edit]);\n  return (\n    <form\n      onSubmit={handleSubmit((values) => {\n        if (values.parent === \"null\") {\n          values.parent = null;\n        }\n        if (values.type === \"null\") {\n          values.type = null;\n        }\n        (edit?._id ? updateMaster : createMaster)(values)\n          .then(({ data }) => {\n            if (!data.success) {\n              return Prompt({ type: \"error\", message: data.message });\n            }\n            onSuccess(data.data);\n          })\n          .catch((err) => Prompt({ type: \"error\", message: err.message }));\n      })}\n      className={`${s.masterForm} grid gap-1`}\n    >\n      <Input label=\"Name\" {...register(\"name\")} required error={errors.name} />\n\n      <Combobox\n        label=\"Parent\"\n        name=\"parent\"\n        control={control}\n        options={[\n          { label: \"None\", value: \"null\" },\n          ...masters.map((item) => ({ label: item.name, value: item._id })),\n        ]}\n      />\n\n      <Combobox\n        label=\"Type\"\n        name=\"type\"\n        control={control}\n        options={[\n          { label: \"None\", value: \"null\" },\n          { label: \"Cash\", value: \"Cash\" },\n          { label: \"Bank\", value: \"Bank\" },\n          { label: \"Customers\", value: \"Customers\" },\n          { label: \"Suppliers\", value: \"Suppliers\" },\n          { label: \"Sales\", value: \"Sales\" },\n          { label: \"Purchase\", value: \"Purchase\" },\n          { label: \"Stock\", value: \"Stock\" },\n          { label: \"Tax\", value: \"Tax\" },\n        ]}\n      />\n\n      <Combobox\n        label=\"Is Group\"\n        name=\"isGroup\"\n        control={control}\n        formOptions={{ required: true }}\n        options={[\n          { label: \"No\", value: false },\n          { label: \"Yes\", value: true },\n        ]}\n      />\n\n      <Input\n        label=\"Opening Balance\"\n        type=\"number\"\n        {...register(\"openingBalance\")}\n        required\n        error={errors.openingBalance}\n      />\n\n      <div className=\"btns\">\n        <button className=\"btn\" disabled={loading}>\n          {edit?._id ? \"Update\" : \"Submit\"}\n        </button>\n      </div>\n    </form>\n  );\n};\n\nexport default Form;\n","import { useState, useEffect, useMemo, useRef } from \"react\";\nimport { Table, Moment, Tabs } from \"Components/elements\";\nimport { Prompt, Modal } from \"Components/modal\";\nimport s from \"./quotes.module.scss\";\nimport { useFetch } from \"hooks\";\nimport { endpoints } from \"config\";\n\nimport MasterForm from \"./MasterForm\";\nimport {\n  BsDashSquare,\n  BsFillPlusSquareFill,\n  BsList,\n  BsPlusSquare,\n} from \"react-icons/bs\";\nimport { FiEdit3 } from \"react-icons/fi\";\nimport { PiTreeViewBold } from \"react-icons/pi\";\nimport { CgSpinner } from \"react-icons/cg\";\nimport { da } from \"date-fns/locale\";\n\nconst buildTree = (accounts) => {\n  const accountMap = {};\n  accounts.forEach((account) => {\n    account.children = [];\n    accountMap[account._id] = account;\n  });\n\n  const tree = [];\n\n  accounts.forEach((account) => {\n    if (account.parent) {\n      const parent = accountMap[account.parent];\n      if (parent) {\n        parent.children.push(account);\n      }\n    } else {\n      tree.push(account);\n    }\n  });\n\n  return tree;\n};\n\nconst AccountNode = ({ account, setAddMaster, onClick = () => {} }) => {\n  const [children, setChildren] = useState([]);\n  const [open, setOpen] = useState(false);\n  const { get: getMasters, loading } = useFetch(endpoints.accountingMasters);\n\n  useEffect(() => {\n    if (account.children) {\n      if (account.children.length === account.totalChildren) {\n        setChildren(account.children);\n        setOpen(account?.isGroup ? account.children.length > 0 : false);\n      } else if (\n        account.children.length &&\n        account.totalChildren > account.children.length\n      ) {\n        getMasters({ query: { parent: account._id } })\n          .then(({ data }) => {\n            if (data.success) {\n              setChildren(data.data);\n              setOpen(true);\n            } else {\n              Prompt({ type: \"error\", message: data.message });\n            }\n          })\n          .catch((err) => Prompt({ type: \"error\", message: err.message }));\n      }\n    }\n  }, [account.children]);\n  return (\n    <li style={{ whiteSpace: \"nowrap\" }} className={s.listItem}>\n      <div className={s.label}>\n        {account.isGroup && (\n          <>\n            {(children?.length || account.totalChildren) > 0 ? (\n              <button\n                onClick={() => {\n                  if (children?.length === account.totalChildren) {\n                    setOpen(!open);\n                  } else {\n                    getMasters({ query: { parent: account._id } })\n                      .then(({ data }) => {\n                        if (data.success) {\n                          setChildren(data.data);\n                          setOpen(true);\n                        } else {\n                          Prompt({ type: \"error\", message: data.message });\n                        }\n                      })\n                      .catch((err) =>\n                        Prompt({ type: \"error\", message: err.message })\n                      );\n                  }\n                }}\n              >\n                {loading ? (\n                  <CgSpinner className=\"spin\" />\n                ) : open ? (\n                  <BsDashSquare />\n                ) : (\n                  <BsPlusSquare />\n                )}\n              </button>\n            ) : (\n              <button\n                style={{\n                  height: \"16px\",\n                  width: \"16px\",\n                  // background: \"none\",\n                  border: \"1px dashed #818181\",\n                  borderRadius: \"2px\",\n                  pointerEvents: \"none\",\n                }}\n              />\n            )}\n          </>\n        )}\n        <strong\n          className={!account.isGroup ? s.accountName : \"\"}\n          onClick={() => {\n            if (!account.isGroup) {\n              onClick(account);\n            }\n          }}\n        >\n          {account.name}\n        </strong>\n        <div className={s.btns}>\n          <button className={s.addButton} onClick={() => setAddMaster(account)}>\n            <FiEdit3 />\n          </button>\n          {account.isGroup && (\n            <button\n              className={s.addButton}\n              onClick={() =>\n                setAddMaster({ parent: account._id, type: account.type || \"\" })\n              }\n            >\n              <BsFillPlusSquareFill />\n            </button>\n          )}\n        </div>\n      </div>\n      {open && children.length > 0 && (\n        <ul className={s.nestedList}>\n          {children.map((child) => (\n            <AccountNode\n              key={child._id}\n              account={child}\n              setAddMaster={setAddMaster}\n              onClick={onClick}\n            />\n          ))}\n        </ul>\n      )}\n    </li>\n  );\n};\n\nconst Accounting = ({ setSidebarOpen }) => {\n  const voucherTableRef = useRef();\n  const [addMaster, setAddMaster] = useState(null);\n  const [masters, setMasters] = useState([]);\n  const [tab, setTab] = useState(\"voucherListing\");\n  const [open, setOpen] = useState(true);\n  const [analysysAcc, setAnalysysAcc] = useState({});\n  const [vouchers, setVouchers] = useState([]);\n  const [filters, setFilters] = useState({});\n\n  const { get: getMasters } = useFetch(endpoints.accountingMasters);\n  const { get: getVouchers } = useFetch(endpoints.accountingVouchers);\n\n  const treeData = useMemo(() => buildTree(masters), [masters]);\n\n  useEffect(() => {\n    getMasters({ query: { isGroup: \"true\" } })\n      .then(({ data }) => {\n        if (data.success) {\n          return setMasters(data.data);\n        }\n      })\n      .catch((err) => Prompt({ type: \"error\", message: err.message }));\n  }, []);\n\n  useEffect(() => {\n    getVouchers({ query: filters })\n      .then(({ data }) => {\n        if (data.success) {\n          setVouchers(data.data);\n        } else {\n          Prompt({ type: \"error\", message: data.message });\n        }\n      })\n      .catch((err) => Prompt({ type: \"error\", message: err.message }));\n  }, [filters]);\n  return (\n    <div className={`${s.content} grid gap-1 m-a`}>\n      <div className={`flex ${s.head}`}>\n        <div\n          className={`flex align-center pointer gap_5  ml-1`}\n          onClick={() => setSidebarOpen((prev) => !prev)}\n        >\n          <BsList style={{ fontSize: \"1.75rem\" }} />\n          <h2>Accounting</h2>\n          {/* <button\n            className=\"btn clear iconOnly\"\n            onClick={(e) => {\n              e.stopPropagation();\n              setAddQuote(true);\n            }}\n          >\n            <GoPlus />\n          </button> */}\n        </div>\n      </div>\n\n      <div className={`${s.innerWrapper} ${open ? s.open : \"\"}`}>\n        <div className={s.sidebar}>\n          <button className={s.addButton} onClick={() => setAddMaster({})}>\n            <BsFillPlusSquareFill />\n          </button>\n          <ul>\n            {masters.length > 0 ? (\n              treeData.map((account) => (\n                <AccountNode\n                  key={account._id}\n                  account={account}\n                  setAddMaster={setAddMaster}\n                  onClick={(account) => {\n                    const firstRecords = (vouchers || []).filter(\n                      (item) => item.accountId === account._id\n                    );\n                    const otherRecords = (vouchers || []).filter((item) =>\n                      firstRecords.some((rec) => rec.rec_id === item.rec_id)\n                    );\n                    const allRecords = [...firstRecords, ...otherRecords]\n                      .filter(\n                        (obj, index, self) =>\n                          index ===\n                          self.findIndex(\n                            (o) =>\n                              o.rec_id === obj.rec_id && o.index === obj.index\n                          )\n                      )\n                      .sort((a, b) => (new Date(a) > new Date(b) ? 1 : -1))\n                      .sort((a, b) => (a.index > b.index ? 1 : -1));\n                    setAnalysysAcc({\n                      account: allRecords[0],\n                      rows: allRecords.slice(1),\n                    });\n                    setTab(\"analysys\");\n\n                    // setFilters((prev) => ({\n                    //   ...prev,\n                    //   accountId: account._id,\n                    // }));\n                  }}\n                />\n              ))\n            ) : (\n              <p\n                style={{\n                  marginTop: \"1rem\",\n                  marginBottom: \"1rem\",\n                  textAlign: \"center\",\n                  textWrap: \"balance\",\n                  color: \"#797979\",\n                }}\n              >\n                No accounts have been added yet.\n              </p>\n            )}\n          </ul>\n        </div>\n        <div className={s.innerContent}>\n          <div className=\"flex gap-1 align-center\">\n            <button\n              className=\"btn clear iconOnly\"\n              onClick={() => setOpen(!open)}\n            >\n              <PiTreeViewBold />\n            </button>\n            <Tabs\n              activeTab={tab}\n              tabs={[\n                { label: \"Voucher Listing\", value: \"voucherListing\" },\n                { label: \"Accounting Analysys\", value: \"analysys\" },\n                // { label: \"More Reports\", value: \"moreReports\" },\n              ]}\n              onChange={(tab) => setTab(tab.value)}\n            />\n          </div>\n          {tab === \"voucherListing\" && (\n            <div className={s.innerContentWrapper}>\n              <Table\n                ref={voucherTableRef}\n                url={endpoints.accountingVouchers}\n                countRecord={(data = []) =>\n                  data.reduce(\n                    (p, c, i, arr) =>\n                      p + (arr[i - 1]?.rec_id !== c.rec_id ? 1 : 0),\n                    0\n                  )\n                }\n                filters={filters}\n                filterFields={[\n                  {\n                    label: \"Type\",\n                    fieldType: \"select\",\n                    name: \"type\",\n                    optionType: \"predefined\",\n                    options: [\n                      { label: \"Invoice\", value: \"Invoice\" },\n                      { label: \"Purchase\", value: \"Purchase\" },\n                      { label: \"Receipt\", value: \"Receipt\" },\n                      { label: \"Payment\", value: \"Payment\" },\n\n                      // { label: \"None\", value: \"null\" },\n                      // { label: \"Cash\", value: \"Cash\" },\n                      // { label: \"Bank\", value: \"Bank\" },\n                      // { label: \"Customers\", value: \"Customers\" },\n                      // { label: \"Suppliers\", value: \"Suppliers\" },\n                      // { label: \"Sales\", value: \"Sales\" },\n                      // { label: \"Purchase\", value: \"Purchase\" },\n                      // { label: \"Stock\", value: \"Stock\" },\n                    ],\n                  },\n                  {\n                    label: \"Start Date\",\n                    fieldType: \"input\",\n                    inputType: \"datetime-local\",\n                    name: \"startDate\",\n                  },\n                  {\n                    label: \"End Date\",\n                    fieldType: \"input\",\n                    inputType: \"datetime-local\",\n                    name: \"endDate\",\n                  },\n                ]}\n                className={s.vouchers}\n                columns={[\n                  { label: \"Date\" },\n                  { label: \"No\" },\n                  { label: \"Type\" },\n                  { label: \"Account Name\" },\n                  { label: \"Debit\", className: \"text-right\" },\n                  { label: \"Credit\", className: \"text-right\" },\n                  // { label: \"Action\" },\n                ]}\n                tfoot={(data) => (\n                  <tfoot>\n                    <tr className={s.footer}>\n                      <td />\n                      <td />\n                      <td />\n                      <td className=\"text-right\">Total</td>\n                      <td className=\"text-right\">\n                        {data.reduce((p, c) => p + c.debit, 0).toFixed(2)}\n                      </td>\n                      <td className=\"text-right\">\n                        {data.reduce((p, c) => p + c.credit, 0).toFixed(2)}\n                      </td>\n                    </tr>\n                  </tfoot>\n                )}\n              >\n                {vouchers.map((row, i, arr) => (\n                  <tr\n                    key={i}\n                    // onClick={() => {\n                    //   setAnalysysAcc(() =>\n                    //     voucherTableRef.current?.data.filter(\n                    //       (item) => item.rec_id === row.rec_id\n                    //     )\n                    //   );\n                    //   setTab(\"analysys\");\n                    // }}\n                  >\n                    <td className=\"grid\">\n                      {arr[i - 1]?.rec_id !== row.rec_id && (\n                        <>\n                          <Moment\n                            style={{ fontSize: \"14px\" }}\n                            format=\"DD MMM YYYY\"\n                          >\n                            {row.createdAt}\n                          </Moment>\n                          <Moment format=\"hh:mma\">{row.createdAt}</Moment>\n                        </>\n                      )}\n                    </td>\n                    <td>{arr[i - 1]?.rec_id !== row.rec_id && row.no}</td>\n                    <td>{arr[i - 1]?.rec_id !== row.rec_id && row.type}</td>\n                    <td>{row.accountName}</td>\n                    <td className=\"text-right\">\n                      {row.debit ? row.debit.toFixed(2) : null}\n                    </td>\n                    <td className=\"text-right\">\n                      {row.credit ? row.credit.toFixed(2) : null}\n                    </td>\n                  </tr>\n                ))}\n              </Table>\n            </div>\n          )}\n          {tab === \"analysys\" && (\n            <Analysys account={analysysAcc?.account} rows={analysysAcc?.rows} />\n          )}\n        </div>\n      </div>\n\n      <Modal\n        open={addMaster}\n        head\n        label={`${addMaster?._id ? \"Update\" : \"Add\"} Account`}\n        className={s.masterFormModal}\n        setOpen={() => {\n          setAddMaster(null);\n        }}\n      >\n        <MasterForm\n          edit={addMaster}\n          masters={masters}\n          onSuccess={() => {\n            getMasters({ query: { isGroup: \"true\" } })\n              .then(({ data }) => {\n                if (data.success) {\n                  return setMasters(data.data);\n                }\n              })\n              .catch((err) => Prompt({ type: \"error\", message: err.message }));\n            setAddMaster(false);\n          }}\n        />\n      </Modal>\n    </div>\n  );\n};\n\nconst Analysys = ({ account, rows }) => {\n  return (\n    <div className={s.innerContentWrapper}>\n      {rows?.length > 0 ? (\n        <>\n          <p\n            style={{ fontWeight: \"600\", fontSize: \"1.2em\" }}\n            className=\"mt-1 pl_5\"\n          >\n            {account.accountName}\n          </p>\n          <Table\n            className={s.vouchers}\n            columns={[\n              { label: \"Date\" },\n              { label: \"No\" },\n              { label: \"Type\" },\n              { label: \"Account Name\" },\n              { label: \"Debit\", className: \"text-right\" },\n              { label: \"Credit\", className: \"text-right\" },\n            ]}\n            tfoot={\n              <tfoot style={{ marginTop: \"0\" }}>\n                <tr className={s.footer}>\n                  <td />\n                  <td />\n                  <td />\n                  <td className=\"text-right\">Total</td>\n                  <td className=\"text-right\">\n                    {rows.reduce((p, c) => p + c.debit, 0).toFixed(2)}\n                  </td>\n                  <td className=\"text-right\">\n                    {rows.reduce((p, c) => p + c.credit, 0).toFixed(2)}\n                  </td>\n                </tr>\n              </tfoot>\n            }\n          >\n            {rows.length <= 2 ? (\n              rows.map((row, i, arr) => {\n                return (\n                  <tr key={i}>\n                    <td className=\"grid\">\n                      {arr[i - 1]?.rec_id !== row.rec_id && (\n                        <>\n                          <Moment\n                            style={{ fontSize: \"14px\" }}\n                            format=\"DD MMM YYYY\"\n                          >\n                            {row.createdAt}\n                          </Moment>\n                          <Moment format=\"hh:mma\">{row.createdAt}</Moment>\n                        </>\n                      )}\n                    </td>\n                    <td>{arr[i - 1]?.rec_id !== row.rec_id && row.no}</td>\n                    <td>{arr[i - 1]?.rec_id !== row.rec_id && row.type}</td>\n                    <td>{row.accountName}</td>\n                    <td className=\"text-right\">\n                      {row.debit ? row.debit.toFixed(2) : null}\n                    </td>\n                    <td className=\"text-right\">\n                      {row.credit ? row.credit.toFixed(2) : null}\n                    </td>\n                  </tr>\n                );\n              })\n            ) : (\n              <tr>\n                <td />\n                <td />\n                <td />\n                <td\n                  style={{\n                    background: \"#e4e4e4\",\n                    height: \"100%\",\n                    display: \"flex\",\n                    alignItems: \"center\",\n                    margin: 0,\n                    padding: \"0 0.5rem\",\n                  }}\n                >\n                  Details:\n                </td>\n                <td className=\"text-right\">\n                  {rows.reduce((p, c) => p + c.debit, 0).toFixed(2)}\n                </td>\n                <td className=\"text-right\">\n                  {rows.reduce((p, c) => p + c.credit, 0).toFixed(2)}\n                </td>\n              </tr>\n            )}\n          </Table>\n        </>\n      ) : (\n        <p className={s.analysysPlaceholder}>No account has been selected.</p>\n      )}\n    </div>\n  );\n};\n\nexport default Accounting;\n"],"names":["mainSchema","yup","name","required","parent","type","oneOf","nullable","isGroup","openingBalance","typeError","edit","masters","onSuccess","useForm","resolver","useYup","handleSubmit","register","reset","control","errors","formState","useFetch","endpoints","_id","createMaster","post","updateMaster","put","loading","useEffect","onSubmit","values","then","data","success","Prompt","message","catch","err","className","s","label","error","options","value","map","item","formOptions","disabled","AccountNode","account","setAddMaster","onClick","useState","children","setChildren","open","setOpen","getMasters","get","length","totalChildren","query","style","whiteSpace","height","width","border","borderRadius","pointerEvents","child","Analysys","rows","fontWeight","fontSize","accountName","columns","tfoot","marginTop","reduce","p","c","debit","toFixed","credit","row","i","arr","rec_id","format","createdAt","no","background","display","alignItems","margin","padding","setSidebarOpen","voucherTableRef","useRef","addMaster","setMasters","tab","setTab","analysysAcc","setAnalysysAcc","vouchers","setVouchers","filters","getVouchers","treeData","useMemo","accounts","accountMap","forEach","tree","push","buildTree","prev","firstRecords","filter","accountId","otherRecords","some","rec","allRecords","obj","index","self","findIndex","o","sort","a","b","Date","slice","marginBottom","textAlign","textWrap","color","activeTab","tabs","onChange","ref","url","countRecord","filterFields","fieldType","optionType","inputType","head","MasterForm"],"sourceRoot":""}