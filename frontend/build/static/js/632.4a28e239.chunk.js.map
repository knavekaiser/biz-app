{"version":3,"file":"static/js/632.4a28e239.chunk.js","mappings":"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","sources":["webpack://cash-app/./src/Views/Dashboard/Reports/receipts.module.scss?df30","Views/Dashboard/Reports/ReceiptForm.js","Views/Dashboard/Reports/index.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"content\":\"receipts_content__Nsv9h\",\"receipts\":\"receipts_receipts__lcH0o\",\"addReceiptFormModal\":\"receipts_addReceiptFormModal__MtncI\",\"addReceiptForm\":\"receipts_addReceiptForm__Fvy25\",\"receiptDetail\":\"receipts_receiptDetail__slala\",\"box\":\"receipts_box__oBPA4\",\"noContent\":\"receipts_noContent__GMZ1g\",\"items\":\"receipts_items__EnQpt\",\"name\":\"receipts_name__Tcp8z\",\"itemForm\":\"receipts_itemForm__tAUhW\",\"btns\":\"receipts_btns__Mxtf+\",\"mainForm\":\"receipts_mainForm__nEpGD\",\"mainFormWrapper\":\"receipts_mainFormWrapper__moqpy\",\"invoiceTable\":\"receipts_invoiceTable__VyN7g\",\"detail\":\"receipts_detail__vGCFS\",\"label\":\"receipts_label__5dxMC\",\"viewOnly\":\"receipts_viewOnly__BzXKX\",\"print\":\"receipts_print__Ex8NP\",\"logo\":\"receipts_logo__P0qXY\",\"taxes\":\"receipts_taxes__7ZQto\",\"totalAmount\":\"receipts_totalAmount__R1ZmO\",\"word\":\"receipts_word__3bYZw\",\"digit\":\"receipts_digit__4rlKt\",\"sign\":\"receipts_sign__xQiBr\",\"signature\":\"receipts_signature__imq6x\",\"head\":\"receipts_head__D3Krr\",\"date\":\"receipts_date__Ckxpq\",\"no\":\"receipts_no__eSq2J\",\"customer\":\"receipts_customer__YT5-l\",\"net\":\"receipts_net__66aZx\",\"actions\":\"receipts_actions__-tIac\",\"itemName\":\"receipts_itemName__mtbrx\"};","import { useState, useEffect, useRef } from \"react\";\nimport { moment, Moment, Table } from \"Components/elements\";\nimport { useFetch } from \"hooks\";\nimport s from \"./receipts.module.scss\";\nimport { useReactToPrint } from \"react-to-print\";\nimport { endpoints } from \"config\";\n\nimport PrintInvoice from \"./printInvoice\";\n\nexport default function Report({ report: { _id } }) {\n  const printRef = useRef();\n  const handlePrint = useReactToPrint({ content: () => printRef.current });\n\n  const [report, setReport] = useState({});\n\n  const { get: genReport, loading } = useFetch(\n    endpoints.generateReport + `/${_id}`\n  );\n\n  useEffect(() => {\n    genReport().then(({ data }) => {\n      if (data?.success) {\n        setReport(data.data);\n      }\n    });\n  }, []);\n\n  return (\n    <div className={`grid gap-1 p-1 ${s.addReceiptForm}`}>\n      <div className={`grid wrap gap-1 ${s.receiptDetail}`}>\n        <div className=\"flex gap-1 all-columns justify-end align-center\">\n          {/* <button className=\"btn\" onClick={handlePrint}>\n            Print\n          </button> */}\n        </div>\n        <div>\n          <h3>{report.name}</h3>\n          <Table\n            loading={loading}\n            className={s.receipts}\n            columns={report.columns?.map((col) => ({ label: col.label }))}\n          >\n            {report.data?.map((item) => {\n              return null;\n              return (\n                <tr key={item._id}>\n                  <td>{item.name}</td>\n                </tr>\n              );\n            })}\n          </Table>\n        </div>\n      </div>\n    </div>\n  );\n}\n","import { useState, useEffect } from \"react\";\nimport { Table, TableActions } from \"Components/elements\";\nimport { FaRegEye } from \"react-icons/fa\";\nimport { Prompt, Modal } from \"Components/modal\";\nimport s from \"./receipts.module.scss\";\nimport { useFetch } from \"hooks\";\nimport { endpoints } from \"config\";\n\nimport ReceiptForm from \"./ReceiptForm\";\nimport { BsList } from \"react-icons/bs\";\n\nconst Receipts = ({ setSidebarOpen }) => {\n  const [receipts, setReceipts] = useState([]);\n  const [report, setReport] = useState(null);\n  const [addReceipt, setAddReceipt] = useState(false);\n\n  const { get: getReceipts, loading } = useFetch(endpoints.reports);\n\n  useEffect(() => {\n    getReceipts()\n      .then(({ data }) => {\n        if (data.success) {\n          return setReceipts(data.data);\n        }\n      })\n      .catch((err) => Prompt({ type: \"error\", message: err.message }));\n  }, []);\n  return (\n    <div className={`${s.content} grid gap-1 m-a p-1`}>\n      <div className={`flex ${s.head}`}>\n        <div\n          className={`flex align-center pointer gap_5  ml-1`}\n          onClick={() => setSidebarOpen((prev) => !prev)}\n        >\n          <BsList style={{ fontSize: \"1.75rem\" }} />\n          <h2>Reports</h2>\n        </div>\n      </div>\n      <Table\n        loading={loading}\n        className={s.receipts}\n        columns={[{ label: \"Name\" }, { label: \"Action\" }]}\n      >\n        {receipts.map((item) => (\n          <tr style={{ cursor: \"pointer\" }} key={item._id}>\n            <td>{item.name}</td>\n            <TableActions\n              className={s.actions}\n              actions={[\n                {\n                  icon: <FaRegEye />,\n                  label: \"View\",\n                  callBack: () => {\n                    setReport(item);\n                    setAddReceipt(true);\n                  },\n                },\n              ]}\n            />\n          </tr>\n        ))}\n      </Table>\n      <Modal\n        open={addReceipt}\n        head\n        label={`Report`}\n        className={s.addReceiptFormModal}\n        setOpen={() => {\n          setReport(null);\n          setAddReceipt(false);\n        }}\n      >\n        <ReceiptForm\n          report={report}\n          onSuccess={(newReceipt) => {\n            if (report) {\n              setReceipts((prev) =>\n                prev.map((item) =>\n                  item._id === newReceipt._id ? newReceipt : item\n                )\n              );\n              setReport(null);\n            } else {\n              setReceipts((prev) => [...prev, newReceipt]);\n            }\n            setAddReceipt(false);\n          }}\n        />\n      </Modal>\n    </div>\n  );\n};\n\nexport default Receipts;\n"],"names":["Report","_id","report","printRef","useRef","useReactToPrint","content","current","useState","setReport","useFetch","endpoints","genReport","get","loading","useEffect","then","data","success","className","s","name","columns","map","col","label","item","setSidebarOpen","receipts","setReceipts","addReceipt","setAddReceipt","getReceipts","catch","err","Prompt","type","message","onClick","prev","style","fontSize","cursor","actions","icon","callBack","open","head","setOpen","onSuccess","newReceipt"],"sourceRoot":""}