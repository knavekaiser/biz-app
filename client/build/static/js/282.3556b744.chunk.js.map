{"version":3,"file":"static/js/282.3556b744.chunk.js","mappings":"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","sources":["webpack://cash-app/./src/Views/Dashboard/Quotes/quotes.module.scss?b344","Views/Dashboard/Quotes/QuoteForm.js","Views/Dashboard/Quotes/index.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"content\":\"quotes_content__-M2Qc\",\"quotes\":\"quotes_quotes__lyIdy\",\"addQuoteForm\":\"quotes_addQuoteForm__snqXq\",\"quoteDetail\":\"quotes_quoteDetail__pzHnS\",\"box\":\"quotes_box__e6ggU\",\"noContent\":\"quotes_noContent__Ha+ZJ\",\"items\":\"quotes_items__NKOSp\",\"name\":\"quotes_name__Si8Tu\",\"itemForm\":\"quotes_itemForm__WeTTo\",\"mainForm\":\"quotes_mainForm__HsWhd\",\"detail\":\"quotes_detail__ntRIS\",\"label\":\"quotes_label__5Ay0F\",\"viewOnly\":\"quotes_viewOnly__ykqy6\",\"print\":\"quotes_print__uG-yF\",\"logo\":\"quotes_logo__+bb1o\",\"taxes\":\"quotes_taxes__11+N0\",\"totalAmount\":\"quotes_totalAmount__LnJMo\",\"word\":\"quotes_word__a6RJ5\",\"digit\":\"quotes_digit__AZO3W\",\"sign\":\"quotes_sign__qvFCl\",\"signature\":\"quotes_signature__l0v1M\",\"date\":\"quotes_date__Irk1E\",\"customer\":\"quotes_customer__0FOXm\",\"net\":\"quotes_net__bSXad\",\"actions\":\"quotes_actions__nz5pN\",\"itemName\":\"quotes_itemName__WTYJv\"};","import { useState, useEffect, useContext, useRef } from \"react\";\nimport { SiteContext } from \"SiteContext\";\nimport { useForm } from \"react-hook-form\";\nimport {\n  Input,\n  Textarea,\n  Combobox,\n  Table,\n  TableActions,\n  SearchField,\n  moment,\n} from \"Components/elements\";\nimport { useYup, useFetch } from \"hooks\";\nimport { Prompt } from \"Components/modal\";\nimport { FaPencilAlt, FaRegTrashAlt } from \"react-icons/fa\";\nimport * as yup from \"yup\";\nimport s from \"./quotes.module.scss\";\nimport { useReactToPrint } from \"react-to-print\";\nimport { endpoints } from \"config\";\n\n// import PrintInvoice from \"./printInvoice\";\n\nconst mainSchema = yup.object({\n  date: yup.string().required(),\n  customerName: yup.string().required(),\n  customerDetail: yup.string().required(),\n});\n\nconst itemSchema = yup.object({\n  name: yup.string().required(),\n  price: yup\n    .number()\n    .min(0, \"Price can not be less than 0\")\n    .required()\n    .typeError(\"Enter a valid Number\"),\n  qty: yup\n    .number()\n    .min(1, \"Qty can not be less than 1\")\n    .required()\n    .typeError(\"Enter a valid Number\"),\n  unit: yup.lazy((value) => {\n    switch (typeof value) {\n      case \"object\":\n        return yup.object().typeError(\"Select a unit\").required();\n      case \"string\":\n        return yup.string().required();\n      default:\n        return yup.mixed().required();\n    }\n  }),\n});\n\nconst Detail = ({ label, value, className }) => {\n  return (\n    <p className={`${s.detail} ${className || \"\"}`}>\n      <span className={s.label}>{label}:</span>{\" \"}\n      <span className={s.value}>{value}</span>\n    </p>\n  );\n};\n\nconst Form = ({ edit, quotes, onSuccess }) => {\n  const { user, config, checkPermission } = useContext(SiteContext);\n  const [viewOnly, setViewOnly] = useState(!!edit);\n  const [items, setItems] = useState(edit?.items || []);\n  const [editItem, setEditItem] = useState(null);\n  const [err, setErr] = useState(null);\n  const printRef = useRef();\n  const handlePrint = useReactToPrint({ content: () => printRef.current });\n  const { post: generateOrder, loading } = useFetch(\n    endpoints.generateOrderFromQuote\n  );\n  return (\n    <div\n      className={`grid gap-1 p-1 ${s.addQuoteForm} ${\n        viewOnly ? s.viewOnly : \"\"\n      }`}\n    >\n      {viewOnly && (\n        <div className={`flex wrap gap-1 ${s.quoteDetail}`}>\n          <div className=\"flex gap-1 all-columns justify-end align-center\">\n            {edit?._id &&\n              checkPermission(\"order_create\") &&\n              edit?.status === \"pending\" && (\n                <button\n                  className=\"btn\"\n                  disabled={loading}\n                  onClick={() =>\n                    Prompt({\n                      type: \"confirmation\",\n                      message:\n                        \"Are you sure want to generate an order from this quote?\",\n                      callback: () => {\n                        generateOrder({\n                          quote_id: edit?._id,\n                        })\n                          .then(({ data }) => {\n                            if (data.success) {\n                              onSuccess({\n                                ...edit,\n                                status: \"ordered\",\n                              });\n                              Prompt({\n                                type: \"success\",\n                                message: \"Order has been generated\",\n                              });\n                            } else {\n                              Prompt({\n                                type: \"error\",\n                                message: data.message,\n                              });\n                            }\n                          })\n                          .catch((err) =>\n                            Prompt({ type: \"error\", message: err.message })\n                          );\n                      },\n                    })\n                  }\n                >\n                  Generate Order\n                </button>\n              )}\n            {checkPermission(\"quote_update\") && (\n              <button\n                disabled={loading}\n                className=\"btn\"\n                onClick={() => setViewOnly(false)}\n              >\n                Edit\n              </button>\n            )}\n            <button className=\"btn\" onClick={handlePrint}>\n              Print\n            </button>\n          </div>\n          <div className={s.box}>\n            <h3>Customer Information</h3>\n            <Detail label=\"Name\" value={edit.customer?.name} />\n            <Detail\n              label=\"Detail\"\n              value={\n                edit.customer?.detail?.split(\"\\n\").map((line, i, arr) => (\n                  <span key={i}>\n                    {line}\n                    {arr[i + 1] && <br />}\n                  </span>\n                )) || null\n              }\n            />\n          </div>\n          <div className={s.box}>\n            <h3>Quote Information</h3>\n            <Detail\n              label=\"Status\"\n              value={edit?.status}\n              className=\"flex justify-space-between\"\n            />\n            <Detail\n              label=\"Date\"\n              value={moment(edit?.date, \"DD-MM-YYYY\")}\n              className=\"flex justify-space-between\"\n            />\n            <Detail\n              label=\"Total\"\n              value={(\n                edit.items.reduce((p, c) => p + c.qty * c.price, 0) +\n                edit.items.reduce((p, c) => p + c.qty * c.price, 0)\n              ).fix(2, config?.numberSeparator)}\n              className=\"flex justify-space-between\"\n            />\n          </div>\n        </div>\n      )}\n\n      <h3>Items</h3>\n      {items.length > 0 ? (\n        <Table\n          className={s.items}\n          columns={[\n            { label: \"Product\" },\n            { label: \"Qty\", className: \"text-right\" },\n            { label: \"Unit\" },\n            { label: \"Rate\", className: \"text-right\" },\n            { label: \"Total\", className: \"text-right\" },\n            ...(viewOnly ? [] : [{ label: \"Action\", action: true }]),\n          ]}\n        >\n          {items.map((item, i) => (\n            <tr key={i}>\n              <td className={s.name}>\n                <span className=\"ellipsis\">{item.name}</span>\n              </td>\n              <td className=\"text-right\">{item.qty}</td>\n              <td>{item.unit}</td>\n              <td className=\"text-right\">\n                {item.price.fix(2, config?.numberSeparator)}\n              </td>\n              <td className=\"text-right\">\n                {(item.price * item.qty).fix(2, config?.numberSeparator)}\n              </td>\n              {!viewOnly && (\n                <TableActions\n                  actions={[\n                    {\n                      icon: <FaPencilAlt />,\n                      label: \"Edit\",\n                      callBack: () => setEditItem(item),\n                    },\n                    {\n                      icon: <FaRegTrashAlt />,\n                      label: \"Delete\",\n                      callBack: () =>\n                        Prompt({\n                          type: \"confirmation\",\n                          message: `Are you sure you want to remove this Item?`,\n                          callback: () => {\n                            setItems((prev) =>\n                              prev.filter((product) => product._id !== item._id)\n                            );\n                          },\n                        }),\n                    },\n                  ]}\n                />\n              )}\n            </tr>\n          ))}\n        </Table>\n      ) : (\n        <p className={s.noContent}>No items yet.</p>\n      )}\n      {err && <p className=\"error\">{err}</p>}\n\n      {\n        // edit && (\n        // <div style={{ display: \"none\" }}>\n        //   <PrintInvoice ref={printRef} quote={edit} user={user} />\n        // </div>\n        // )\n      }\n\n      {!viewOnly && (\n        <>\n          <ItemForm\n            key={editItem ? \"edit\" : \"add\"}\n            edit={editItem}\n            quotes={quotes}\n            onSuccess={(newItem) => {\n              setErr(null);\n              if (editItem) {\n                setItems((prev) =>\n                  prev.map((item) =>\n                    item._id === newItem._id ? newItem : item\n                  )\n                );\n                setEditItem(null);\n              } else {\n                setItems((prev) => [...prev, newItem]);\n              }\n            }}\n          />\n\n          <h3 className=\"mt-1\">Other Information</h3>\n\n          <MainForm\n            disabled={editItem}\n            edit={edit}\n            items={items}\n            quotes={quotes}\n            setErr={setErr}\n            onSuccess={onSuccess}\n            setViewOnly={setViewOnly}\n          />\n        </>\n      )}\n    </div>\n  );\n};\n\nconst ItemForm = ({ edit, quotes, onSuccess }) => {\n  const { config } = useContext(SiteContext);\n  const {\n    handleSubmit,\n    register,\n    reset,\n    watch,\n    setValue,\n    control,\n    formState: { errors },\n  } = useForm({\n    defaultValues: {\n      unit: \"Piece\",\n    },\n    resolver: useYup(itemSchema),\n  });\n  useEffect(() => {\n    reset({ ...edit });\n  }, [edit]);\n  return (\n    <form\n      onSubmit={handleSubmit((values) => {\n        if (!edit) {\n          values._id = Math.random().toString().substr(-8);\n        }\n        onSuccess(values);\n        reset();\n      })}\n      className={`${s.itemForm} grid gap-1`}\n    >\n      <SearchField\n        label=\"Product\"\n        data={quotes\n          .reduce((p, c) => [...p, ...c.items], [])\n          .map((item) => ({\n            label: item.name,\n            value: item.name,\n            data: item,\n          }))}\n        register={register}\n        name=\"name\"\n        formOptions={{ required: true }}\n        renderListItem={(item) => <>{item.label}</>}\n        watch={watch}\n        setValue={setValue}\n        onChange={(item) => {\n          if (typeof item === \"string\") {\n            setValue(\"name\", item);\n          } else {\n            setValue(\"name\", item.name);\n            setValue(\"price\", item.price);\n          }\n        }}\n        error={errors.name}\n        className={s.itemName}\n      />\n\n      <Input\n        label=\"Price\"\n        type=\"number\"\n        required\n        {...register(\"price\")}\n        error={errors.price}\n      />\n      <Input\n        label=\"Qty\"\n        type=\"number\"\n        required\n        {...register(\"qty\")}\n        error={errors.qty}\n      />\n      <Combobox\n        label=\"Unit\"\n        control={control}\n        name=\"unit\"\n        formOptions={{ required: true }}\n        options={config.unitsOfMeasure.map((unit) => ({\n          label: unit,\n          value: unit,\n        }))}\n      />\n      <button className=\"btn\">Add</button>\n    </form>\n  );\n};\n\nconst MainForm = ({ disabled, edit, items, quotes, setErr, onSuccess }) => {\n  const {\n    handleSubmit,\n    register,\n    reset,\n    setValue,\n    watch,\n    control,\n    formState: { errors },\n  } = useForm({\n    resolver: useYup(mainSchema),\n  });\n\n  const {\n    post: saveInvoice,\n    put: updateInvoice,\n    loading,\n  } = useFetch(endpoints.quotes + `/${edit?._id || \"\"}`);\n\n  useEffect(() => {\n    reset({\n      ...edit,\n      status: edit?.status || \"pending\",\n      date: moment(edit?.date, \"YYYY-MM-DD\"),\n      customerName: edit?.customer?.name || \"\",\n      customerDetail: edit?.customer?.detail || \"\",\n    });\n  }, [edit]);\n  return (\n    <form\n      onSubmit={handleSubmit((values) => {\n        if (items.length < 1) {\n          return setErr(\"Add at least one item\");\n        }\n\n        (edit ? updateInvoice : saveInvoice)({\n          dateTime: values.date,\n          status: values.status,\n          customer: {\n            name: values.customerName,\n            detail: values.customerDetail,\n          },\n          items: items.map((item) => ({ ...item, _id: undefined })),\n        })\n          .then(({ data }) => {\n            if (!data.success) {\n              return Prompt({ type: \"error\", message: data.message });\n            }\n            onSuccess(data.data);\n          })\n          .catch((err) => Prompt({ type: \"error\", message: err.message }));\n      })}\n      className={`${s.mainForm} grid gap-1`}\n    >\n      <Input\n        label=\"Date\"\n        type=\"date\"\n        {...register(\"date\")}\n        required\n        error={errors.date}\n      />\n\n      <Combobox\n        label=\"Status\"\n        name=\"status\"\n        control={control}\n        options={[\n          { label: \"Pending\", value: \"pending\" },\n          { label: \"Ordered\", value: \"ordered\" },\n        ]}\n      />\n\n      <div className=\"all-columns\">\n        <h3>Customer Information</h3>\n      </div>\n\n      <SearchField\n        label=\"Name\"\n        data={quotes.map((item) => ({\n          label: item.customer.name,\n          value: item.customer.name,\n          data: item.customer,\n        }))}\n        register={register}\n        name=\"customerName\"\n        formOptions={{ required: true }}\n        renderListItem={(item) => <>{item.label}</>}\n        watch={watch}\n        setValue={setValue}\n        onChange={(item) => {\n          if (typeof item === \"string\") {\n            setValue(\"customerName\", item);\n          } else {\n            setValue(\"customerName\", item.name);\n            setValue(\"customerDetail\", item.detail);\n          }\n        }}\n        error={errors.customerName}\n      />\n\n      <Textarea\n        label=\"Detail\"\n        {...register(\"customerDetail\")}\n        required\n        error={errors[\"customerDetail\"]}\n      />\n\n      <div className=\"btns\">\n        {\n          //   <button\n          //   type=\"button\"\n          //   onClick={() => setViewOnly(true)}\n          //   className=\"btn\"\n          //   disabled={disabled || loading}\n          // >\n          //   Cancel\n          // </button>\n        }\n        <button className=\"btn\" disabled={disabled || loading}>\n          {edit ? \"Update\" : \"Submit\"}\n        </button>\n      </div>\n    </form>\n  );\n};\n\nexport default Form;\n","import { useState, useEffect, useContext } from \"react\";\nimport { SiteContext } from \"SiteContext\";\nimport { Table, TableActions, Moment } from \"Components/elements\";\nimport { FaRegEye, FaRegTrashAlt } from \"react-icons/fa\";\nimport { Prompt, Modal } from \"Components/modal\";\nimport s from \"./quotes.module.scss\";\nimport { useFetch } from \"hooks\";\nimport { endpoints } from \"config\";\n\nimport QuoteForm from \"./QuoteForm\";\n\nconst Quotes = () => {\n  const { config, checkPermission } = useContext(SiteContext);\n  const [quotes, setQuotes] = useState([]);\n  const [quote, setQuote] = useState(null);\n  const [addQuote, setAddQuote] = useState(false);\n\n  const { get: getQuotes, loading } = useFetch(endpoints.quotes);\n  const { remove: deleteQuote } = useFetch(endpoints.quotes + \"/{ID}\");\n\n  useEffect(() => {\n    getQuotes()\n      .then(({ data }) => {\n        if (data.success) {\n          return setQuotes(data.data);\n        }\n      })\n      .catch((err) => Prompt({ type: \"error\", message: err.message }));\n  }, []);\n  return (\n    <div className={`${s.content} grid gap-1 m-a p-1`}>\n      <div className=\"flex\">\n        <h2>All Quotes</h2>\n        {checkPermission(\"quote_create\") && (\n          <button className=\"btn m-a mr-0\" onClick={() => setAddQuote(true)}>\n            Add Quote\n          </button>\n        )}\n      </div>\n      <Table\n        loading={loading}\n        className={s.quotes}\n        columns={[\n          { label: \"Date\" },\n          { label: \"Customer\" },\n          { label: \"Status\" },\n          { label: \"Net Amount\", className: \"text-right\" },\n          { label: \"Action\" },\n        ]}\n      >\n        {quotes.map((item) => (\n          <tr\n            onClick={() => {\n              setQuote(item);\n              setAddQuote(true);\n            }}\n            style={{ cursor: \"pointer\" }}\n            key={item._id}\n          >\n            <td className={s.date}>\n              <Moment format=\"DD/MM/YYYY\">{item.date}</Moment>\n            </td>\n            <td className={s.customer}>{item.customer?.name}</td>\n            <td>{item.status}</td>\n            <td className={`text-right ${s.net}`}>\n              {(\n                item.items.reduce((p, c) => p + c.qty * c.price, 0) +\n                item.items.reduce((p, c) => p + c.qty * c.price, 0)\n              ).fix(2, config?.numberSeparator)}\n            </td>\n            <TableActions\n              className={s.actions}\n              actions={[\n                {\n                  icon: <FaRegEye />,\n                  label: \"View\",\n                  callBack: () => {\n                    setQuote(item);\n                    setAddQuote(true);\n                  },\n                },\n                ...(checkPermission(\"quote_delete\")\n                  ? [\n                      {\n                        icon: <FaRegTrashAlt />,\n                        label: \"Delete\",\n                        callBack: () =>\n                          Prompt({\n                            type: \"confirmation\",\n                            message: `Are you sure you want to remove this quote?`,\n                            callback: () => {\n                              deleteQuote(\n                                {},\n                                { params: { \"{ID}\": item._id } }\n                              ).then(({ data }) => {\n                                if (data.success) {\n                                  setQuotes((prev) =>\n                                    prev.filter(\n                                      (quote) => quote._id !== item._id\n                                    )\n                                  );\n                                } else {\n                                  Prompt({\n                                    type: \"error\",\n                                    message: data.message,\n                                  });\n                                }\n                              });\n                            },\n                          }),\n                      },\n                    ]\n                  : []),\n              ]}\n            />\n          </tr>\n        ))}\n      </Table>\n      <Modal\n        open={addQuote}\n        head\n        label={`${quote ? \"View / Update\" : \"Add\"} Quote`}\n        className={s.addQuoteFormModal}\n        setOpen={() => {\n          setQuote(null);\n          setAddQuote(false);\n        }}\n      >\n        <QuoteForm\n          edit={quote}\n          quotes={quotes}\n          onSuccess={(newQuote) => {\n            if (quote) {\n              setQuotes((prev) =>\n                prev.map((item) =>\n                  item._id === newQuote._id ? newQuote : item\n                )\n              );\n              setQuote(null);\n            } else {\n              setQuotes((prev) => [...prev, newQuote]);\n            }\n            setAddQuote(false);\n          }}\n        />\n      </Modal>\n    </div>\n  );\n};\n\nexport default Quotes;\n"],"names":["mainSchema","yup","date","required","customerName","customerDetail","itemSchema","name","price","min","typeError","qty","unit","value","Detail","label","className","s","ItemForm","edit","quotes","onSuccess","config","useContext","SiteContext","useForm","defaultValues","resolver","useYup","handleSubmit","register","reset","watch","setValue","control","errors","formState","useEffect","onSubmit","values","_id","Math","random","toString","substr","data","reduce","p","c","items","map","item","formOptions","renderListItem","onChange","error","type","options","unitsOfMeasure","MainForm","disabled","setErr","useFetch","endpoints","saveInvoice","post","updateInvoice","put","loading","status","moment","customer","detail","length","dateTime","undefined","then","success","Prompt","message","catch","err","user","checkPermission","useState","viewOnly","setViewOnly","setItems","editItem","setEditItem","printRef","useRef","handlePrint","useReactToPrint","content","current","generateOrder","onClick","callback","quote_id","split","line","i","arr","fix","numberSeparator","columns","action","actions","icon","callBack","prev","filter","product","newItem","setQuotes","quote","setQuote","addQuote","setAddQuote","getQuotes","get","deleteQuote","remove","style","cursor","format","params","open","head","setOpen","QuoteForm","newQuote"],"sourceRoot":""}