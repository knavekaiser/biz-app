{"version":3,"file":"static/js/337.10f9239d.chunk.js","mappings":"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","sources":["webpack://cash-app/./src/Views/Dashboard/Quotes/quotes.module.scss?b344","Views/Dashboard/Quotes/printInvoice.js","Views/Dashboard/Quotes/QuoteForm.js","Views/Dashboard/Quotes/index.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"content\":\"quotes_content__-M2Qc\",\"quotes\":\"quotes_quotes__lyIdy\",\"addQuoteForm\":\"quotes_addQuoteForm__snqXq\",\"quoteDetail\":\"quotes_quoteDetail__pzHnS\",\"box\":\"quotes_box__e6ggU\",\"noContent\":\"quotes_noContent__Ha+ZJ\",\"items\":\"quotes_items__NKOSp\",\"name\":\"quotes_name__Si8Tu\",\"itemForm\":\"quotes_itemForm__WeTTo\",\"mainForm\":\"quotes_mainForm__HsWhd\",\"detail\":\"quotes_detail__ntRIS\",\"label\":\"quotes_label__5Ay0F\",\"viewOnly\":\"quotes_viewOnly__ykqy6\",\"print\":\"quotes_print__uG-yF\",\"logo\":\"quotes_logo__+bb1o\",\"taxes\":\"quotes_taxes__11+N0\",\"totalAmount\":\"quotes_totalAmount__LnJMo\",\"word\":\"quotes_word__a6RJ5\",\"digit\":\"quotes_digit__AZO3W\",\"sign\":\"quotes_sign__qvFCl\",\"signature\":\"quotes_signature__l0v1M\",\"date\":\"quotes_date__Irk1E\",\"customer\":\"quotes_customer__0FOXm\",\"net\":\"quotes_net__bSXad\",\"actions\":\"quotes_actions__nz5pN\",\"itemName\":\"quotes_itemName__WTYJv\"};","import { forwardRef, useContext, useEffect, useState } from \"react\";\nimport { SiteContext } from \"SiteContext\";\n\nimport { Table, moment } from \"Components/elements\";\n\nimport s from \"./quotes.module.scss\";\n\nconst Detail = ({ label, value }) => {\n  return (\n    <p className={s.detail}>\n      <span className={s.label}>{label}</span>:{\" \"}\n      <span className={s.value}>{value}</span>\n    </p>\n  );\n};\n\nconst PrintInvoice = forwardRef(({ quote, user }, ref) => {\n  const { config } = useContext(SiteContext);\n  const [itemsStyle, setItemsStyle] = useState(null);\n  useEffect(() => {\n    if (config?.printQuote) {\n      const itemColumnSort = [\"no\", \"product\", \"qty\", \"unit\", \"total\"];\n      const columns = [\n        ...config.printQuote.itemColumns\n          .sort((a, b) =>\n            itemColumnSort.indexOf(a) > itemColumnSort.indexOf(b) ? 1 : -1\n          )\n          .filter((col) => ![\"no\", \"product\"].includes(col)),\n      ];\n      setItemsStyle({\n        gridTemplateColumns: `${\n          config.printQuote.itemColumns.includes(\"no\") ? \"3rem\" : \"\"\n        } ${\n          config.printQuote.itemColumns.includes(\"product\")\n            ? 42 - 6 * columns.length + \"rem\"\n            : \"\"\n        } repeat(auto-fit, minmax(86px, 1fr))`,\n      });\n    }\n  }, [quote]);\n\n  if (!config?.printQuote) {\n    return (\n      <div className={s.print} ref={ref}>\n        <p>Please update print configuration in the settings.</p>\n      </div>\n    );\n  }\n  return (\n    <div className={s.print} ref={ref}>\n      <header>\n        {user.logo && <img className={s.logo} src={user.logo} />}\n        <div>\n          <h2>{user.name}</h2>\n          {user.motto && <p>{user.motto}</p>}\n        </div>\n        <h4>Quote</h4>\n      </header>\n\n      <div className={`${s.info} flex wrap gap-1 mt-1`}>\n        <div className={`${s.box} flex-1`}>\n          <p>To:</p>\n          <Detail label=\"Name\" value={quote.customer?.name} />\n          <Detail\n            label=\"Detail\"\n            value={\n              quote.customer?.detail?.split(\"\\n\").map((line, i, arr) => (\n                <span key={i}>\n                  {line}\n                  {arr[i + 1] && <br />}\n                </span>\n              )) || null\n            }\n          />\n        </div>\n        <div className={`${s.box} flex-1`}>\n          <Detail label=\"Date\" value={moment(quote?.date, \"DD-MM-YYYY\")} />\n          {config.printQuote.businessInfo.includes(\"gstin\") && (\n            <Detail label=\"GSTIN\" value={user.gstin} />\n          )}\n          {config.printQuote.businessInfo.includes(\"pan\") && (\n            <Detail label=\"PAN\" value={user.pan} />\n          )}\n          {user.bankDetails && (\n            <>\n              {config.printQuote.businessInfo.includes(\"bank\") && (\n                <Detail label=\"Bank\" value={user.bankDetails.bankName} />\n              )}\n              {config.printQuote.businessInfo.includes(\"branch\") && (\n                <Detail label=\"Branch\" value={user.bankDetails.branch} />\n              )}\n              {config.printQuote.businessInfo.includes(\"accountNumber\") && (\n                <Detail label=\"A/C No.\" value={user.bankDetails.accNo} />\n              )}\n            </>\n          )}\n          {config.printQuote.businessInfo.includes(\"ifsc\") && (\n            <Detail label=\"IFSC\" value={user.ifsc} />\n          )}\n          {config.printQuote.businessInfo.includes(\"address\") && (\n            <Detail label=\"Address\" value={`${user.address?.street || \"\"}`} />\n          )}\n          {config.printQuote.businessInfo.includes(\"phone\") && (\n            <Detail label=\"Phone\" value={user.phone} />\n          )}\n          {config.printQuote.businessInfo.includes(\"email\") && (\n            <Detail label=\"Email\" value={user.email} />\n          )}\n        </div>\n      </div>\n\n      {config.printQuote.itemColumns.length > 0 && (\n        <Table\n          className={`${s.items} mt-1`}\n          theadTrStyle={{ ...itemsStyle }}\n          columns={config.printQuote.itemColumns.map((key) => {\n            if (key === \"no\") return { label: \"No\" };\n            if (key === \"product\") return { label: \"Product\" };\n            if (key === \"price\")\n              return { label: \"Price\", className: \"text-right\" };\n            if (key === \"qty\") return { label: \"QTY\", className: \"text-right\" };\n            if (key === \"unit\") return { label: \"Unit\" };\n            if (key === \"total\")\n              return {\n                label: `Total (${config.printQuote.currency})`,\n                className: \"text-right\",\n              };\n          })}\n        >\n          {quote.items.map((item, i) => (\n            <tr key={i} style={{ ...itemsStyle }}>\n              {config.printQuote.itemColumns.includes(\"no\") && <td>{i + 1}</td>}\n              {config.printQuote.itemColumns.includes(\"product\") && (\n                <td>\n                  <span className=\"ellipsis\">{item.name}</span>\n                </td>\n              )}\n              {config.printQuote.itemColumns.includes(\"price\") && (\n                <td className=\"text-right\">\n                  {item.price.fix(2, config?.numberSeparator)}\n                </td>\n              )}\n              {config.printQuote.itemColumns.includes(\"qty\") && (\n                <td className=\"text-right\">{item.qty}</td>\n              )}\n              {config.printQuote.itemColumns.includes(\"unit\") && (\n                <td>{item.unit}</td>\n              )}\n              {config.printQuote.itemColumns.includes(\"total\") && (\n                <td className=\"text-right\">\n                  {(item.price * item.qty).fix(2, config?.numberSeparator)}\n                </td>\n              )}\n            </tr>\n          ))}\n        </Table>\n      )}\n\n      {quote.gst && (\n        <Table\n          className={`${s.taxes} mt-1`}\n          columns={[\n            { label: \"No.\" },\n            { label: \"Description of Tax\" },\n            { label: \"Rate of Tax\", className: \"text-right\" },\n            {\n              label: `Taxable Amount (${config.printQuote.currency})`,\n              className: \"text-right\",\n            },\n            {\n              label: `Tax Amount (${config.printQuote.currency})`,\n              className: \"text-right\",\n            },\n          ]}\n        >\n          <tr>\n            <td>1</td>\n            <td>Integrated GST</td>\n            <td className=\"text-right\">\n              {quote.gst.fix(2, config?.numberSeparator)}\n            </td>\n            <td className=\"text-right\">\n              {quote.items\n                .reduce((p, c) => p + c.qty * c.price, 0)\n                .fix(2, config?.numberSeparator)}\n            </td>\n            <td className=\"text-right\">\n              {quote.items\n                .reduce((p, c) => p + c.qty * c.price, 0)\n                .percent(quote.gst)\n                .fix(2, config?.numberSeparator)}\n            </td>\n          </tr>\n        </Table>\n      )}\n\n      <div className={`${s.totalAmount} mt-1`}>\n        <p className={s.word}>\n          Total:{\" \"}\n          {(\n            quote.items.reduce((p, c) => p + c.qty * c.price, 0) +\n            quote.items\n              .reduce((p, c) => p + c.qty * c.price, 0)\n              .percent(quote.gst || 0)\n          ).toWords()}\n        </p>\n        <p className={s.digit}>\n          {(\n            quote.items.reduce((p, c) => p + c.qty * c.price, 0) +\n            quote.items\n              .reduce((p, c) => p + c.qty * c.price, 0)\n              .percent(quote.gst || 0)\n          ).fix(2, config?.numberSeparator)}\n        </p>\n      </div>\n\n      {(user.terms?.length || user.ownerDetails?.name) && (\n        <footer className=\"flex gap-1 align-end mt-1\">\n          {user.terms?.length > 0 && (\n            <div className={`${s.box} flex-1 mb-2`}>\n              <strong>Terms & Conditions:</strong>{\" \"}\n              <ol className={`ml-2 mt-1`}>\n                {user.terms?.map((item, i) => (\n                  <li key={i}>{item}</li>\n                ))}\n              </ol>\n            </div>\n          )}\n          {user.ownerDetails?.name && (\n            <div className={s.sign}>\n              <p>For {user.name}</p>\n              {user.ownerDetails.signature && (\n                <img\n                  className={s.signature}\n                  src={user.ownerDetails.signature}\n                />\n              )}\n              <p>\n                <strong>{user.ownerDetails.name}</strong>\n              </p>\n            </div>\n          )}\n        </footer>\n      )}\n    </div>\n  );\n});\n\nexport default PrintInvoice;\n","import { useState, useEffect, useContext, useRef } from \"react\";\nimport { SiteContext } from \"SiteContext\";\nimport { useForm } from \"react-hook-form\";\nimport {\n  Input,\n  Textarea,\n  Combobox,\n  Table,\n  TableActions,\n  SearchField,\n  moment,\n} from \"Components/elements\";\nimport { useYup, useFetch } from \"hooks\";\nimport { Prompt } from \"Components/modal\";\nimport { FaPencilAlt, FaRegTrashAlt } from \"react-icons/fa\";\nimport * as yup from \"yup\";\nimport s from \"./quotes.module.scss\";\nimport { useReactToPrint } from \"react-to-print\";\nimport { endpoints } from \"config\";\n\nimport PrintInvoice from \"./printInvoice\";\n\nconst mainSchema = yup.object({\n  date: yup.string().required(),\n  customerName: yup.string().required(),\n  customerDetail: yup.string().required(),\n});\n\nconst itemSchema = yup.object({\n  name: yup.string().required(),\n  price: yup\n    .number()\n    .min(0, \"Price can not be less than 0\")\n    .required()\n    .typeError(\"Enter a valid Number\"),\n  qty: yup\n    .number()\n    .min(1, \"Qty can not be less than 1\")\n    .required()\n    .typeError(\"Enter a valid Number\"),\n  unit: yup.lazy((value) => {\n    switch (typeof value) {\n      case \"object\":\n        return yup.object().typeError(\"Select a unit\").required();\n      case \"string\":\n        return yup.string().required();\n      default:\n        return yup.mixed().required();\n    }\n  }),\n});\n\nconst Detail = ({ label, value, className }) => {\n  return (\n    <p className={`${s.detail} ${className || \"\"}`}>\n      <span className={s.label}>{label}:</span>{\" \"}\n      <span className={s.value}>{value}</span>\n    </p>\n  );\n};\n\nconst Form = ({ edit, quotes, onSuccess }) => {\n  const { user, config, checkPermission } = useContext(SiteContext);\n  const [viewOnly, setViewOnly] = useState(!!edit);\n  const [items, setItems] = useState(edit?.items || []);\n  const [editItem, setEditItem] = useState(null);\n  const [err, setErr] = useState(null);\n  const printRef = useRef();\n  const handlePrint = useReactToPrint({ content: () => printRef.current });\n  const { post: generateOrder, loading } = useFetch(\n    endpoints.generateOrderFromQuote\n  );\n  return (\n    <div\n      className={`grid gap-1 p-1 ${s.addQuoteForm} ${\n        viewOnly ? s.viewOnly : \"\"\n      }`}\n    >\n      {viewOnly && (\n        <div className={`flex wrap gap-1 ${s.quoteDetail}`}>\n          <div className=\"flex gap-1 all-columns justify-end align-center\">\n            {edit?._id &&\n              checkPermission(\"order_create\") &&\n              edit?.status === \"pending\" && (\n                <button\n                  className=\"btn\"\n                  disabled={loading}\n                  onClick={() =>\n                    Prompt({\n                      type: \"confirmation\",\n                      message:\n                        \"Are you sure want to generate an order from this quote?\",\n                      callback: () => {\n                        generateOrder({\n                          quote_id: edit?._id,\n                        })\n                          .then(({ data }) => {\n                            if (data.success) {\n                              onSuccess({\n                                ...edit,\n                                status: \"ordered\",\n                              });\n                              Prompt({\n                                type: \"success\",\n                                message: \"Order has been generated\",\n                              });\n                            } else {\n                              Prompt({\n                                type: \"error\",\n                                message: data.message,\n                              });\n                            }\n                          })\n                          .catch((err) =>\n                            Prompt({ type: \"error\", message: err.message })\n                          );\n                      },\n                    })\n                  }\n                >\n                  Generate Order\n                </button>\n              )}\n            {checkPermission(\"quote_update\") && (\n              <button\n                disabled={loading}\n                className=\"btn\"\n                onClick={() => setViewOnly(false)}\n              >\n                Edit\n              </button>\n            )}\n            <button className=\"btn\" onClick={handlePrint}>\n              Print\n            </button>\n          </div>\n          <div className={s.box}>\n            <h3>Customer Information</h3>\n            <Detail label=\"Name\" value={edit.customer?.name} />\n            <Detail\n              label=\"Detail\"\n              value={\n                edit.customer?.detail?.split(\"\\n\").map((line, i, arr) => (\n                  <span key={i}>\n                    {line}\n                    {arr[i + 1] && <br />}\n                  </span>\n                )) || null\n              }\n            />\n          </div>\n          <div className={s.box}>\n            <h3>Quote Information</h3>\n            <Detail\n              label=\"Status\"\n              value={edit?.status}\n              className=\"flex justify-space-between\"\n            />\n            <Detail\n              label=\"Date\"\n              value={moment(edit?.date, \"DD-MM-YYYY\")}\n              className=\"flex justify-space-between\"\n            />\n            <Detail\n              label=\"Total\"\n              value={(\n                edit.items.reduce((p, c) => p + c.qty * c.price, 0) +\n                edit.items.reduce((p, c) => p + c.qty * c.price, 0)\n              ).fix(2, config?.numberSeparator)}\n              className=\"flex justify-space-between\"\n            />\n          </div>\n        </div>\n      )}\n\n      <h3>Items</h3>\n      {items.length > 0 ? (\n        <Table\n          className={s.items}\n          columns={[\n            { label: \"Product\" },\n            { label: \"Qty\", className: \"text-right\" },\n            { label: \"Unit\" },\n            { label: \"Rate\", className: \"text-right\" },\n            { label: \"Total\", className: \"text-right\" },\n            ...(viewOnly ? [] : [{ label: \"Action\", action: true }]),\n          ]}\n        >\n          {items.map((item, i) => (\n            <tr key={i}>\n              <td className={s.name}>\n                <span className=\"ellipsis\">{item.name}</span>\n              </td>\n              <td className=\"text-right\">{item.qty}</td>\n              <td>{item.unit}</td>\n              <td className=\"text-right\">\n                {item.price.fix(2, config?.numberSeparator)}\n              </td>\n              <td className=\"text-right\">\n                {(item.price * item.qty).fix(2, config?.numberSeparator)}\n              </td>\n              {!viewOnly && (\n                <TableActions\n                  actions={[\n                    {\n                      icon: <FaPencilAlt />,\n                      label: \"Edit\",\n                      callBack: () => setEditItem(item),\n                    },\n                    {\n                      icon: <FaRegTrashAlt />,\n                      label: \"Delete\",\n                      callBack: () =>\n                        Prompt({\n                          type: \"confirmation\",\n                          message: `Are you sure you want to remove this Item?`,\n                          callback: () => {\n                            setItems((prev) =>\n                              prev.filter((product) => product._id !== item._id)\n                            );\n                          },\n                        }),\n                    },\n                  ]}\n                />\n              )}\n            </tr>\n          ))}\n        </Table>\n      ) : (\n        <p className={s.noContent}>No items yet.</p>\n      )}\n      {err && <p className=\"error\">{err}</p>}\n\n      {edit && (\n        <div style={{ display: \"none\" }}>\n          <PrintInvoice ref={printRef} quote={edit} user={user} />\n        </div>\n      )}\n\n      {!viewOnly && (\n        <>\n          <ItemForm\n            key={editItem ? \"edit\" : \"add\"}\n            edit={editItem}\n            quotes={quotes}\n            onSuccess={(newItem) => {\n              setErr(null);\n              if (editItem) {\n                setItems((prev) =>\n                  prev.map((item) =>\n                    item._id === newItem._id ? newItem : item\n                  )\n                );\n                setEditItem(null);\n              } else {\n                setItems((prev) => [...prev, newItem]);\n              }\n            }}\n          />\n\n          <h3 className=\"mt-1\">Other Information</h3>\n\n          <MainForm\n            disabled={editItem}\n            edit={edit}\n            items={items}\n            quotes={quotes}\n            setErr={setErr}\n            onSuccess={onSuccess}\n            setViewOnly={setViewOnly}\n          />\n        </>\n      )}\n    </div>\n  );\n};\n\nconst ItemForm = ({ edit, quotes, onSuccess }) => {\n  const { config } = useContext(SiteContext);\n  const {\n    handleSubmit,\n    register,\n    reset,\n    watch,\n    setValue,\n    control,\n    formState: { errors },\n  } = useForm({\n    defaultValues: {\n      unit: \"Piece\",\n    },\n    resolver: useYup(itemSchema),\n  });\n  useEffect(() => {\n    reset({ ...edit });\n  }, [edit]);\n  return (\n    <form\n      onSubmit={handleSubmit((values) => {\n        if (!edit) {\n          values._id = Math.random().toString().substr(-8);\n        }\n        onSuccess(values);\n        reset();\n      })}\n      className={`${s.itemForm} grid gap-1`}\n    >\n      <SearchField\n        label=\"Product\"\n        data={quotes\n          .reduce((p, c) => [...p, ...c.items], [])\n          .map((item) => ({\n            label: item.name,\n            value: item.name,\n            data: item,\n          }))}\n        register={register}\n        name=\"name\"\n        formOptions={{ required: true }}\n        renderListItem={(item) => <>{item.label}</>}\n        watch={watch}\n        setValue={setValue}\n        onChange={(item) => {\n          if (typeof item === \"string\") {\n            setValue(\"name\", item);\n          } else {\n            setValue(\"name\", item.name);\n            setValue(\"price\", item.price);\n          }\n        }}\n        error={errors.name}\n        className={s.itemName}\n      />\n\n      <Input\n        label=\"Price\"\n        type=\"number\"\n        required\n        {...register(\"price\")}\n        error={errors.price}\n      />\n      <Input\n        label=\"Qty\"\n        type=\"number\"\n        required\n        {...register(\"qty\")}\n        error={errors.qty}\n      />\n      <Combobox\n        label=\"Unit\"\n        control={control}\n        name=\"unit\"\n        formOptions={{ required: true }}\n        options={config.unitsOfMeasure.map((unit) => ({\n          label: unit,\n          value: unit,\n        }))}\n      />\n      <button className=\"btn\">Add</button>\n    </form>\n  );\n};\n\nconst MainForm = ({ disabled, edit, items, quotes, setErr, onSuccess }) => {\n  const {\n    handleSubmit,\n    register,\n    reset,\n    setValue,\n    watch,\n    control,\n    formState: { errors },\n  } = useForm({\n    resolver: useYup(mainSchema),\n  });\n\n  const {\n    post: saveInvoice,\n    put: updateInvoice,\n    loading,\n  } = useFetch(endpoints.quotes + `/${edit?._id || \"\"}`);\n\n  useEffect(() => {\n    reset({\n      ...edit,\n      status: edit?.status || \"pending\",\n      date: moment(edit?.date, \"YYYY-MM-DD\"),\n      customerName: edit?.customer?.name || \"\",\n      customerDetail: edit?.customer?.detail || \"\",\n    });\n  }, [edit]);\n  return (\n    <form\n      onSubmit={handleSubmit((values) => {\n        if (items.length < 1) {\n          return setErr(\"Add at least one item\");\n        }\n\n        (edit ? updateInvoice : saveInvoice)({\n          dateTime: values.date,\n          status: values.status,\n          customer: {\n            name: values.customerName,\n            detail: values.customerDetail,\n          },\n          items: items.map((item) => ({ ...item, _id: undefined })),\n        })\n          .then(({ data }) => {\n            if (!data.success) {\n              return Prompt({ type: \"error\", message: data.message });\n            }\n            onSuccess(data.data);\n          })\n          .catch((err) => Prompt({ type: \"error\", message: err.message }));\n      })}\n      className={`${s.mainForm} grid gap-1`}\n    >\n      <Input\n        label=\"Date\"\n        type=\"date\"\n        {...register(\"date\")}\n        required\n        error={errors.date}\n      />\n\n      <Combobox\n        label=\"Status\"\n        name=\"status\"\n        control={control}\n        options={[\n          { label: \"Pending\", value: \"pending\" },\n          { label: \"Ordered\", value: \"ordered\" },\n        ]}\n      />\n\n      <div className=\"all-columns\">\n        <h3>Customer Information</h3>\n      </div>\n\n      <SearchField\n        label=\"Name\"\n        data={quotes.map((item) => ({\n          label: item.customer.name,\n          value: item.customer.name,\n          data: item.customer,\n        }))}\n        register={register}\n        name=\"customerName\"\n        formOptions={{ required: true }}\n        renderListItem={(item) => <>{item.label}</>}\n        watch={watch}\n        setValue={setValue}\n        onChange={(item) => {\n          if (typeof item === \"string\") {\n            setValue(\"customerName\", item);\n          } else {\n            setValue(\"customerName\", item.name);\n            setValue(\"customerDetail\", item.detail);\n          }\n        }}\n        error={errors.customerName}\n      />\n\n      <Textarea\n        label=\"Detail\"\n        {...register(\"customerDetail\")}\n        required\n        error={errors[\"customerDetail\"]}\n      />\n\n      <div className=\"btns\">\n        {\n          //   <button\n          //   type=\"button\"\n          //   onClick={() => setViewOnly(true)}\n          //   className=\"btn\"\n          //   disabled={disabled || loading}\n          // >\n          //   Cancel\n          // </button>\n        }\n        <button className=\"btn\" disabled={disabled || loading}>\n          {edit ? \"Update\" : \"Submit\"}\n        </button>\n      </div>\n    </form>\n  );\n};\n\nexport default Form;\n","import { useState, useEffect, useContext } from \"react\";\nimport { SiteContext } from \"SiteContext\";\nimport { Table, TableActions, Moment } from \"Components/elements\";\nimport { FaRegEye, FaRegTrashAlt } from \"react-icons/fa\";\nimport { Prompt, Modal } from \"Components/modal\";\nimport s from \"./quotes.module.scss\";\nimport { useFetch } from \"hooks\";\nimport { endpoints } from \"config\";\n\nimport QuoteForm from \"./QuoteForm\";\n\nconst Quotes = () => {\n  const { config, checkPermission } = useContext(SiteContext);\n  const [quotes, setQuotes] = useState([]);\n  const [quote, setQuote] = useState(null);\n  const [addQuote, setAddQuote] = useState(false);\n\n  const { get: getQuotes, loading } = useFetch(endpoints.quotes);\n  const { remove: deleteQuote } = useFetch(endpoints.quotes + \"/{ID}\");\n\n  useEffect(() => {\n    getQuotes()\n      .then(({ data }) => {\n        if (data.success) {\n          return setQuotes(data.data);\n        }\n      })\n      .catch((err) => Prompt({ type: \"error\", message: err.message }));\n  }, []);\n  return (\n    <div className={`${s.content} grid gap-1 m-a p-1`}>\n      <div className=\"flex\">\n        <h2>All Quotes</h2>\n        {checkPermission(\"quote_create\") && (\n          <button className=\"btn m-a mr-0\" onClick={() => setAddQuote(true)}>\n            Add Quote\n          </button>\n        )}\n      </div>\n      <Table\n        loading={loading}\n        className={s.quotes}\n        columns={[\n          { label: \"Date\" },\n          { label: \"Customer\" },\n          { label: \"Status\" },\n          { label: \"Net Amount\", className: \"text-right\" },\n          { label: \"Action\" },\n        ]}\n      >\n        {quotes.map((item) => (\n          <tr\n            onClick={() => {\n              setQuote(item);\n              setAddQuote(true);\n            }}\n            style={{ cursor: \"pointer\" }}\n            key={item._id}\n          >\n            <td className={s.date}>\n              <Moment format=\"DD/MM/YYYY\">{item.date}</Moment>\n            </td>\n            <td className={s.customer}>{item.customer?.name}</td>\n            <td>{item.status}</td>\n            <td className={`text-right ${s.net}`}>\n              {(\n                item.items.reduce((p, c) => p + c.qty * c.price, 0) +\n                item.items.reduce((p, c) => p + c.qty * c.price, 0)\n              ).fix(2, config?.numberSeparator)}\n            </td>\n            <TableActions\n              className={s.actions}\n              actions={[\n                {\n                  icon: <FaRegEye />,\n                  label: \"View\",\n                  callBack: () => {\n                    setQuote(item);\n                    setAddQuote(true);\n                  },\n                },\n                ...(checkPermission(\"quote_delete\")\n                  ? [\n                      {\n                        icon: <FaRegTrashAlt />,\n                        label: \"Delete\",\n                        callBack: () =>\n                          Prompt({\n                            type: \"confirmation\",\n                            message: `Are you sure you want to remove this quote?`,\n                            callback: () => {\n                              deleteQuote(\n                                {},\n                                { params: { \"{ID}\": item._id } }\n                              ).then(({ data }) => {\n                                if (data.success) {\n                                  setQuotes((prev) =>\n                                    prev.filter(\n                                      (quote) => quote._id !== item._id\n                                    )\n                                  );\n                                } else {\n                                  Prompt({\n                                    type: \"error\",\n                                    message: data.message,\n                                  });\n                                }\n                              });\n                            },\n                          }),\n                      },\n                    ]\n                  : []),\n              ]}\n            />\n          </tr>\n        ))}\n      </Table>\n      <Modal\n        open={addQuote}\n        head\n        label={`${quote ? \"View / Update\" : \"Add\"} Quote`}\n        className={s.addQuoteFormModal}\n        setOpen={() => {\n          setQuote(null);\n          setAddQuote(false);\n        }}\n      >\n        <QuoteForm\n          edit={quote}\n          quotes={quotes}\n          onSuccess={(newQuote) => {\n            if (quote) {\n              setQuotes((prev) =>\n                prev.map((item) =>\n                  item._id === newQuote._id ? newQuote : item\n                )\n              );\n              setQuote(null);\n            } else {\n              setQuotes((prev) => [...prev, newQuote]);\n            }\n            setAddQuote(false);\n          }}\n        />\n      </Modal>\n    </div>\n  );\n};\n\nexport default Quotes;\n"],"names":["Detail","label","value","className","s","forwardRef","ref","quote","user","config","useContext","SiteContext","useState","itemsStyle","setItemsStyle","useEffect","printQuote","itemColumnSort","columns","itemColumns","sort","a","b","indexOf","filter","col","includes","gridTemplateColumns","length","logo","src","name","motto","customer","detail","split","map","line","i","arr","moment","date","businessInfo","gstin","pan","bankDetails","bankName","branch","accNo","ifsc","address","street","phone","email","theadTrStyle","key","currency","items","item","style","price","fix","numberSeparator","qty","unit","gst","reduce","p","c","percent","toWords","terms","ownerDetails","signature","mainSchema","yup","required","customerName","customerDetail","itemSchema","min","typeError","ItemForm","edit","quotes","onSuccess","useForm","defaultValues","resolver","useYup","handleSubmit","register","reset","watch","setValue","control","errors","formState","onSubmit","values","_id","Math","random","toString","substr","data","formOptions","renderListItem","onChange","error","type","options","unitsOfMeasure","MainForm","disabled","setErr","useFetch","endpoints","saveInvoice","post","updateInvoice","put","loading","status","dateTime","undefined","then","success","Prompt","message","catch","err","checkPermission","viewOnly","setViewOnly","setItems","editItem","setEditItem","printRef","useRef","handlePrint","useReactToPrint","content","current","generateOrder","onClick","callback","quote_id","action","actions","icon","callBack","prev","product","display","newItem","setQuotes","setQuote","addQuote","setAddQuote","getQuotes","get","deleteQuote","remove","cursor","format","params","open","head","setOpen","QuoteForm","newQuote"],"sourceRoot":""}