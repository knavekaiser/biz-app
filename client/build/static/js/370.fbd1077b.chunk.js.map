{"version":3,"file":"static/js/370.fbd1077b.chunk.js","mappings":"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","sources":["webpack://cash-app/./src/Views/Dashboard/Roles/roles.module.scss?8831","Views/Dashboard/Roles/RoleForm.js","Views/Dashboard/Roles/index.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"content\":\"roles_content__7vddl\",\"roles\":\"roles_roles__IXgwH\",\"addRoleForm\":\"roles_addRoleForm__gw1ju\",\"roleDetail\":\"roles_roleDetail__Ns1JZ\",\"box\":\"roles_box__c7xQ0\",\"noContent\":\"roles_noContent__TV7sS\",\"permissions\":\"roles_permissions__eDI5R\",\"name\":\"roles_name__-FVjs\",\"mainForm\":\"roles_mainForm__PfIjB\",\"detail\":\"roles_detail__9YIVy\",\"label\":\"roles_label__vRLQk\",\"itemForm\":\"roles_itemForm__5GcJC\",\"itemName\":\"roles_itemName__Ox8V2\"};","import { useContext, useEffect } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { Input, Table, Checkbox } from \"Components/elements\";\nimport { useYup, useFetch } from \"hooks\";\nimport { Prompt } from \"Components/modal\";\nimport * as yup from \"yup\";\nimport s from \"./roles.module.scss\";\nimport { endpoints, tables } from \"config\";\nimport { SiteContext } from \"SiteContext\";\n\nconst mainSchema = yup.object({\n  name: yup.string().required(),\n  permissions: yup.array().of(yup.string()),\n});\n\nconst Form = ({ edit, dynamicTables, onSuccess }) => {\n  const { user } = useContext(SiteContext);\n  const {\n    handleSubmit,\n    register,\n    reset,\n    watch,\n    setValue,\n    formState: { errors },\n  } = useForm({\n    resolver: useYup(mainSchema),\n  });\n\n  const {\n    post: saveRole,\n    put: updateRole,\n    loading,\n  } = useFetch(endpoints.roles + `/${edit?._id || \"\"}`);\n\n  const permissions = watch(\"permissions\");\n\n  useEffect(() => {\n    reset({ name: edit?.name || \"\", permissions: edit?.permissions || [] });\n  }, [edit]);\n  return (\n    <div className={`grid gap-1 p-1 ${s.addRoleForm}`}>\n      <form\n        onSubmit={handleSubmit((values) => {\n          (edit ? updateRole : saveRole)(values)\n            .then(({ data }) => {\n              if (!data.success) {\n                return Prompt({ type: \"error\", message: data.message });\n              }\n              onSuccess(data.data);\n            })\n            .catch((err) => Prompt({ type: \"error\", message: err.message }));\n        })}\n        className={`${s.mainForm} grid gap-1`}\n      >\n        <div className={s.box}>\n          <Input\n            label=\"Name\"\n            {...register(\"name\")}\n            required\n            error={errors.name}\n          />\n        </div>\n\n        <div className={`${s.box} all-columns`}>\n          <h3>Permissions</h3>\n\n          <Table\n            className={s.permissions}\n            columns={[\n              { label: \"Table\" },\n              { label: \"Read\", className: \"align-center\" },\n              { label: \"Create\", className: \"align-center\" },\n              { label: \"Update\", className: \"align-center\" },\n              { label: \"Delete\", className: \"align-center\" },\n            ]}\n          >\n            {[...tables, ...dynamicTables].map((table, i) => (\n              <tr key={table.value}>\n                <td className={s.name}>{table.label}</td>\n                {table.actions.map((action, j) => {\n                  const value = `${table.value}_${action || j}`;\n                  const el = (\n                    <td className=\"align-center\" key={value}>\n                      <Checkbox\n                        checked={(permissions || []).includes(value)}\n                        disabled={\n                          (value === \"dynamic_table_read\" &&\n                            (permissions || []).some((item) =>\n                              item.startsWith(user._id)\n                            )) ||\n                          (value.endsWith(\"_read\") &&\n                            (permissions || []).some(\n                              (item) =>\n                                item !== value &&\n                                item.startsWith(value.replace(\"_read\", \"\"))\n                            ))\n                        }\n                        onChange={(e) => {\n                          if ((permissions || []).includes(value)) {\n                            setValue(\n                              \"permissions\",\n                              permissions.filter((item) => item !== value)\n                            );\n                          } else {\n                            setValue(\"permissions\", [\n                              ...new Set([\n                                ...(permissions || []),\n                                ...(value.startsWith(user._id)\n                                  ? [\"dynamic_table_read\"]\n                                  : []),\n                                ...(/^(.*)(create|update|delete)$/.test(value)\n                                  ? [\n                                      value.replace(\n                                        /(create|update|delete)$/,\n                                        \"read\"\n                                      ),\n                                    ]\n                                  : []),\n                                value,\n                              ]),\n                            ]);\n                          }\n                        }}\n                      />\n                    </td>\n                  );\n                  if (j === 0 && action === \"read\") {\n                    return el;\n                  } else if (j === 1 && action === \"create\") {\n                    return el;\n                  } else if (j === 2 && action === \"update\") {\n                    return el;\n                  } else if (j === 3 && action === \"delete\") {\n                    return el;\n                  }\n                  return <td key={`${table.value}_${j}`} />;\n                })}\n              </tr>\n            ))}\n          </Table>\n        </div>\n\n        <div className=\"btns\">\n          <button className=\"btn\" disabled={loading}>\n            {edit ? \"Update\" : \"Submit\"}\n          </button>\n        </div>\n      </form>\n    </div>\n  );\n};\n\nexport default Form;\n","import { useState, useEffect, useContext } from \"react\";\nimport { SiteContext } from \"SiteContext\";\nimport { Table, TableActions } from \"Components/elements\";\nimport { FaPencilAlt, FaRegTrashAlt } from \"react-icons/fa\";\nimport { Prompt, Modal } from \"Components/modal\";\nimport s from \"./roles.module.scss\";\nimport { useFetch } from \"hooks\";\nimport { endpoints } from \"config\";\n\nimport RoleForm from \"./RoleForm\";\n\nconst Roles = () => {\n  const { checkPermission } = useContext(SiteContext);\n  const [dynamicTables, setDynamicTables] = useState([]);\n  const [roles, setRoles] = useState([]);\n  const [role, setRole] = useState(null);\n  const [addRole, setAddRole] = useState(false);\n\n  const { get: getTables } = useFetch(endpoints.collections);\n  const { get: getRoles, loading } = useFetch(endpoints.roles);\n  const { remove: deleteRole } = useFetch(endpoints.roles + \"/{ID}\");\n\n  useEffect(() => {\n    getTables().then(({ data }) => {\n      if (data.success) {\n        setDynamicTables(\n          data.data.map((item) => ({\n            label: item.name,\n            value: `${item.user}_${item.name}`,\n            actions: [\"read\", \"create\", \"update\", \"delete\"],\n          }))\n        );\n      }\n    });\n    getRoles()\n      .then(({ data }) => {\n        if (data.success) {\n          return setRoles(data.data);\n        }\n      })\n      .catch((err) => {\n        console.log(err);\n        Prompt({ type: \"error\", message: err.message });\n      });\n  }, []);\n\n  return (\n    <div className={`${s.content} grid gap-1 m-a p-1`}>\n      <div className=\"flex\">\n        <h2>All Roles</h2>\n        {checkPermission(\"role_create\") && (\n          <button className=\"btn m-a mr-0\" onClick={() => setAddRole(true)}>\n            Add Role\n          </button>\n        )}\n      </div>\n      <Table\n        loading={loading}\n        className={s.roles}\n        columns={[{ label: \"Name\" }, { label: \"Action\" }]}\n      >\n        {roles.map((item) => (\n          <tr\n            onClick={() => {\n              setRole(item);\n              setAddRole(true);\n            }}\n            style={{ cursor: \"pointer\" }}\n            key={item._id}\n          >\n            <td className={s.date}>{item.name}</td>\n            <TableActions\n              className={s.actions}\n              actions={[\n                ...(checkPermission(\"role_update\")\n                  ? [\n                      {\n                        icon: <FaPencilAlt />,\n                        label: \"View\",\n                        callBack: () => {\n                          setRole(item);\n                          setAddRole(true);\n                        },\n                      },\n                    ]\n                  : []),\n                ...(checkPermission(\"role_delete\")\n                  ? [\n                      {\n                        icon: <FaRegTrashAlt />,\n                        label: \"Delete\",\n                        callBack: () =>\n                          Prompt({\n                            type: \"confirmation\",\n                            message: `Are you sure you want to remove this role?`,\n                            callback: () => {\n                              deleteRole(\n                                {},\n                                { params: { \"{ID}\": item._id } }\n                              ).then(({ data }) => {\n                                if (data.success) {\n                                  setRoles((prev) =>\n                                    prev.filter((role) => role._id !== item._id)\n                                  );\n                                } else {\n                                  Prompt({\n                                    type: \"error\",\n                                    message: data.message,\n                                  });\n                                }\n                              });\n                            },\n                          }),\n                      },\n                    ]\n                  : []),\n              ]}\n            />\n          </tr>\n        ))}\n      </Table>\n      <Modal\n        open={addRole}\n        head\n        label={`${role ? \"View / Update\" : \"Add\"} Role`}\n        className={s.addRoleFormModal}\n        setOpen={() => {\n          setRole(null);\n          setAddRole(false);\n        }}\n      >\n        <RoleForm\n          edit={role}\n          dynamicTables={dynamicTables}\n          onSuccess={(newRole) => {\n            if (role) {\n              setRoles((prev) =>\n                prev.map((item) => (item._id === newRole._id ? newRole : item))\n              );\n              setRole(null);\n            } else {\n              setRoles((prev) => [...prev, newRole]);\n            }\n            setAddRole(false);\n          }}\n        />\n      </Modal>\n    </div>\n  );\n};\n\nexport default Roles;\n"],"names":["mainSchema","yup","name","required","permissions","of","edit","dynamicTables","onSuccess","user","useContext","SiteContext","useForm","resolver","useYup","handleSubmit","register","reset","watch","setValue","errors","formState","useFetch","endpoints","_id","saveRole","post","updateRole","put","loading","useEffect","className","s","onSubmit","values","then","data","success","Prompt","type","message","catch","err","label","error","columns","tables","map","table","i","actions","action","j","value","el","checked","includes","disabled","some","item","startsWith","endsWith","replace","onChange","e","filter","Set","test","checkPermission","useState","setDynamicTables","roles","setRoles","role","setRole","addRole","setAddRole","getTables","get","getRoles","deleteRole","remove","console","log","onClick","style","cursor","icon","callBack","callback","params","prev","open","head","setOpen","RoleForm","newRole"],"sourceRoot":""}