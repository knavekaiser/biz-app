{"version":3,"file":"static/js/336.17ae858d.chunk.js","mappings":"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","sources":["webpack://cash-app/./src/Views/Dashboard/DynamicTables/payments.module.scss?11a5","Views/Dashboard/DynamicTables/form.js","Views/Dashboard/DynamicTables/dynamicForm.js","Views/Dashboard/DynamicTables/dynamicTable.js","Views/Dashboard/DynamicTables/schemaTemplateForm.js","Views/Dashboard/DynamicTables/index.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"content\":\"payments_content__IFmGS\",\"collections\":\"payments_collections__aUD1E\",\"tableName\":\"payments_tableName__SC9cR\",\"payments\":\"payments_payments__f-3VA\",\"addCollectionForm\":\"payments_addCollectionForm__uvDAO\",\"purchaseDetail\":\"payments_purchaseDetail__xUC0q\",\"box\":\"payments_box__CwP-4\",\"noContent\":\"payments_noContent__c-DhQ\",\"items\":\"payments_items__1jTir\",\"name\":\"payments_name__5JIzV\",\"optionsWrapper\":\"payments_optionsWrapper__Jm1Bf\",\"options\":\"payments_options__7hWF-\",\"mainForm\":\"payments_mainForm__q8uCG\",\"detail\":\"payments_detail__GhQ+d\",\"label\":\"payments_label__In51Z\",\"viewOnly\":\"payments_viewOnly__BCbxL\",\"collectionFormModal\":\"payments_collectionFormModal__j01Qt\",\"dynamicForm\":\"payments_dynamicForm__5VZjL\",\"productVariants\":\"payments_productVariants__3rRSI\",\"images\":\"payments_images__7eM1q\",\"selected\":\"payments_selected__svHW5\",\"products\":\"payments_products__bpHoL\",\"product\":\"payments_product__OhaFh\",\"thumbnail\":\"payments_thumbnail__7LzJX\",\"productDetail\":\"payments_productDetail__kav7L\",\"price\":\"payments_price__-vbWT\",\"subtotal\":\"payments_subtotal__3uG9s\",\"variantForm\":\"payments_variantForm__vgAuK\",\"variantImages\":\"payments_variantImages__DSXvb\",\"fieldFormWrapper\":\"payments_fieldFormWrapper__6dJ8W\",\"dataDetail\":\"payments_dataDetail__fg7Zq\",\"inputDetail\":\"payments_inputDetail__Shd7w\",\"fieldForm\":\"payments_fieldForm__vs119\",\"fields\":\"payments_fields__8z6ul\",\"nestedObjectFormModal\":\"payments_nestedObjectFormModal__GsBJu\",\"dynamicFormModal\":\"payments_dynamicFormModal__8uNVH\"};","import { useState, useEffect, useCallback, useRef } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport {\n  Input,\n  Combobox,\n  Table,\n  TableActions,\n  Checkbox,\n  Select,\n  CustomRadio,\n} from \"Components/elements\";\nimport { useYup, useFetch } from \"hooks\";\nimport { Prompt, Modal } from \"Components/modal\";\nimport {\n  FaPencilAlt,\n  FaRegTrashAlt,\n  FaTimes,\n  FaCheck,\n  FaPlus,\n} from \"react-icons/fa\";\nimport * as yup from \"yup\";\nimport s from \"./payments.module.scss\";\nimport { endpoints } from \"config\";\n\nyup.addMethod(yup.string, \"noneOf\", function (arr, message) {\n  return this.test(\"noneOf\", message, function (value) {\n    const { path, createError } = this;\n    return (\n      !arr.includes(value) ||\n      createError({\n        path,\n        message: message?.replace(`{value}`, value) || message,\n      })\n    );\n  });\n});\n\nconst mainSchema = yup.object({\n  name: yup.string().required(),\n});\n\nconst optionsSchema = yup.object({\n  label: yup.string().required(),\n  value: yup.string().required(),\n});\n\nconst Form = ({ edit, collections, onSuccess }) => {\n  const [fields, setFields] = useState(edit?.fields || []);\n  const [editField, setEditField] = useState(null);\n  const [err, setErr] = useState(null);\n\n  const {\n    handleSubmit,\n    register,\n    reset,\n    setValue,\n    watch,\n    formState: { errors },\n    setError,\n  } = useForm({\n    resolver: useYup(mainSchema),\n  });\n  const {\n    post: saveCollection,\n    put: updateCollection,\n    loading,\n  } = useFetch(endpoints.collections + `/${edit?._id || \"\"}`);\n  const tableName = watch(\"name\");\n  const onSubmit = useCallback(\n    (values) => {\n      if (!values.name && tableName) {\n        values.name = tableName;\n      }\n      if (!values.name) {\n        setError(\"name\", {\n          type: \"required\",\n          message: \"Table name is required\",\n        });\n        return;\n      }\n      if (fields.length < 1) {\n        return setErr(\"Add at least one field\");\n      }\n      if (values.name === \"Product\") {\n        if (!fields.find((item) => item.name === \"images\")) {\n          return setErr('\"images\" is a required field');\n        }\n        if (!fields.find((item) => item.name === \"title\")) {\n          return setErr('\"title\" is a required field');\n        }\n        if (!fields.find((item) => item.name === \"price\")) {\n          return setErr('\"price\" is a required field');\n        }\n        if (!fields.find((item) => item.name === \"whatsappNumber\")) {\n          return setErr('\"whatsappNumber\" is a required field');\n        }\n      }\n\n      (edit ? updateCollection : saveCollection)({\n        name: values.name,\n        fields: fields.map((item) => ({ ...item, _id: undefined })),\n      })\n        .then(({ data }) => {\n          if (!data.success) {\n            return Prompt({ type: \"error\", message: data.message });\n          }\n          onSuccess(data.data);\n        })\n        .catch((err) => Prompt({ type: \"error\", message: err.message }));\n    },\n    [fields, tableName]\n  );\n\n  useEffect(() => {\n    if (\n      fields.length > 0 &&\n      JSON.stringify(fields) !== JSON.stringify(edit?.fields || [])\n    ) {\n      onSubmit({ name: edit?.name || \"\" });\n    }\n  }, [fields, edit]);\n  useEffect(() => {\n    reset({ ...edit });\n  }, [edit]);\n  return (\n    <div className={`grid gap-1 p-1 ${s.addCollectionForm}`}>\n      <h3>Table Information</h3>\n\n      <form\n        onSubmit={handleSubmit(onSubmit)}\n        className={`${s.mainForm} grid gap-1`}\n      >\n        <Input\n          label=\"Table Name (singular)\"\n          type=\"text\"\n          {...register(\"name\")}\n          required\n          readOnly={edit}\n          error={errors.name}\n        />\n      </form>\n\n      <h3>Fields</h3>\n      <Table\n        className={s.fields}\n        columns={[\n          { label: \"Name\" },\n          ...(edit?.name === \"Product\" ? [{ label: \"Subcategory\" }] : []),\n          { label: \"Data Type\" },\n          { label: \"Label\" },\n          { label: \"Field Type\" },\n          { label: \"Input Type\" },\n          { label: \"Required\" },\n          { label: \"Action\", action: true },\n        ]}\n        placeholder=\"No fields yet.\"\n      >\n        {fields.map((item, i) => (\n          <tr key={i}>\n            <td>\n              <span className=\"ellipsis\">{item.name}</span>\n            </td>\n            {edit?.name === \"Product\" && <td>{item.subcategory}</td>}\n            <td>{item.dataType}</td>\n            <td>{item.label}</td>\n            <td>{item.fieldType}</td>\n            <td>{item.inputType}</td>\n            <td>{item.required ? \"Yes\" : \"No\"}</td>\n            <TableActions\n              actions={[\n                {\n                  icon: <FaPencilAlt />,\n                  label: \"Edit\",\n                  callBack: () => setEditField(item),\n                },\n                {\n                  icon: <FaRegTrashAlt />,\n                  label: \"Delete\",\n                  callBack: () =>\n                    Prompt({\n                      type: \"confirmation\",\n                      message: `Are you sure you want to remove this Field?`,\n                      callback: () => {\n                        setFields((prev) =>\n                          prev.filter((product) => product.name !== item.name)\n                        );\n                      },\n                    }),\n                },\n              ]}\n            />\n          </tr>\n        ))}\n      </Table>\n      {err && <p className=\"error\">{err}</p>}\n\n      <FieldForm\n        key={editField ? \"edit\" : \"add\"}\n        edit={editField}\n        editCollection={edit}\n        fields={fields}\n        collections={collections}\n        productCollection={collections.find((c) => c?.name === \"Product\")}\n        onSuccess={(newField) => {\n          setErr(null);\n          if (editField) {\n            setFields((prev) => {\n              return prev.map((item) =>\n                item.name.toLowerCase() === newField.name.toLowerCase()\n                  ? newField\n                  : item\n              );\n            });\n            setEditField(null);\n          } else {\n            setFields((prev) => [...prev, newField]);\n          }\n        }}\n        clear={() => setEditField(null)}\n      />\n\n      <form\n        onSubmit={handleSubmit(onSubmit)}\n        className={`${s.mainForm} grid gap-1`}\n      >\n        {\n          //   <div className=\"btns mt-1\">\n          //   <button className=\"btn\" disabled={editField || loading}>\n          //     {edit ? \"Update\" : \"Submit\"}\n          //   </button>\n          // </div>\n        }\n      </form>\n    </div>\n  );\n};\n\nconst defaultFields = [\n  \"title\",\n  \"description\",\n  \"images\",\n  \"price\",\n  \"whatsappNumber\",\n  \"category\",\n  \"subcategory\",\n];\n\nconst FieldForm = ({\n  edit,\n  fields,\n  editCollection,\n  collections,\n  onSuccess,\n  clear,\n}) => {\n  const {\n    handleSubmit,\n    register,\n    reset,\n    watch,\n    setValue,\n    control,\n    formState: { errors },\n  } = useForm({\n    resolver: useYup(\n      yup.object({\n        name: yup\n          .string()\n          .noneOf(\n            fields\n              .filter((item) => (!edit ? true : edit.name !== item.name))\n              .map((item) => item.name),\n            `{value} already exists`\n          )\n          .required(),\n        dataType: yup.string().required(),\n        label: yup.string().required(),\n        fieldType: yup.string(),\n        inputType: yup.string(),\n        required: yup.boolean(),\n      })\n    ),\n  });\n  const name = watch(\"name\");\n  const inputType = watch(\"inputType\");\n  const dataType = watch(\"dataType\");\n  const dataElementType = watch(\"dataElementType\");\n  const dataElements = watch(\"fields\");\n  const collection = watch(\"collection\");\n  const fieldType = watch(\"fieldType\");\n  const optionType = watch(\"optionType\");\n  const options = watch(\"options\");\n  const label = watch(\"label\");\n\n  useEffect(() => {\n    if (editCollection?.name === \"Product\") {\n      if (name === \"latlng\") {\n        setValue(\"dataType\", \"string\");\n        setValue(\"fieldType\", \"googleMap\");\n        setValue(\"label\", \"Location\");\n      }\n    }\n  }, [name, editCollection]);\n\n  const onSubmit = useCallback(\n    (values) => {\n      if (editCollection?.name === \"Product\") {\n        const data = {};\n        Object.entries(values).forEach(([key, value]) => {\n          if (\n            (key === \"subcategory\" &&\n              !defaultFields\n                .filter((item) => item !== \"subcategory\")\n                .includes(key)) ||\n            key !== \"subcategory\"\n          ) {\n            data[key] = value;\n          }\n        });\n        onSuccess(data);\n      } else {\n        onSuccess(values);\n      }\n      reset({\n        category: \"\",\n        subcategory: \"\",\n        name: \"\",\n        inputType: \"\",\n        dataType: \"\",\n        dataElementType: \"\",\n        dataElements: \"\",\n        collection: \"\",\n        fieldType: \"\",\n        optionType: \"\",\n        options: [],\n        multiRange: \"\",\n        label: \"\",\n        required: \"\",\n        decimalPlaces: \"\",\n        unique: \"\",\n      });\n    },\n    [edit]\n  );\n  useEffect(() => {\n    reset({ ...edit });\n  }, [edit]);\n\n  return (\n    <div className={s.fieldFormWrapper}>\n      <div className={s.dataDetail}>\n        <form\n          onSubmit={handleSubmit(onSubmit)}\n          className={`${s.fieldForm} grid gap-1`}\n        >\n          <div className=\"flex all-columns gap-1 justify-space-between align-center\">\n            <h3>Data</h3>\n\n            {editCollection?.name === \"Product\" &&\n              !defaultFields.includes(name) && (\n                <Select\n                  label=\"Subcategory\"\n                  control={control}\n                  url={endpoints.dynamic + \"/Subcategory\"}\n                  getQuery={(inputValue, selected) => ({\n                    ...(inputValue && { name: inputValue }),\n                    ...(selected && { name: selected }),\n                  })}\n                  handleData={(item) => ({\n                    label: item.name,\n                    value: item.name,\n                  })}\n                  name=\"subcategory\"\n                />\n              )}\n\n            <Checkbox {...register(\"unique\")} label=\"Unique\" />\n          </div>\n\n          <Input\n            label=\"Field Name\"\n            type=\"text\"\n            required\n            disabled={edit}\n            {...register(\"name\")}\n            error={errors.name}\n          />\n          <Combobox\n            label=\"Data Type\"\n            name=\"dataType\"\n            control={control}\n            formOptions={{ required: true }}\n            options={[\n              { label: \"String\", value: \"string\" },\n              { label: \"Number\", value: \"number\" },\n              { label: \"Date\", value: \"date\" },\n              { label: \"Boolean\", value: \"boolean\" },\n              { label: \"Array\", value: \"array\" },\n              { label: \"Variant Array\", value: \"variantArray\" },\n              { label: \"Object\", value: \"object\" },\n              { label: \"Object ID\", value: \"objectId\" },\n            ]}\n            disabled={edit || [\"richText\", \"googleMap\"].includes(fieldType)}\n          />\n\n          {dataType === \"objectId\" && (\n            <>\n              <Select\n                control={control}\n                label=\"Collection\"\n                options={collections\n                  .filter((coll) => coll._id !== editCollection?._id)\n                  .map((item) => ({\n                    label: item.name,\n                    value: item.name,\n                  }))}\n                name=\"collection\"\n                formOptions={{ required: true }}\n                className={s.itemName}\n              />\n\n              {collection && (\n                <Combobox\n                  label=\"Foreign Field\"\n                  name=\"foreignField\"\n                  control={control}\n                  formOptions={{ required: true }}\n                  options={[\n                    {\n                      label: \"ID\",\n                      value: \"_id\",\n                    },\n                    ...(collections\n                      .find((coll) => coll.name === collection)\n                      ?.fields.map((item) => ({\n                        label: item.label,\n                        value: item.name,\n                      })) || []),\n                  ]}\n                />\n              )}\n            </>\n          )}\n\n          {[\"array\", \"variantArray\"].includes(dataType) && (\n            <Combobox\n              label=\"Data Element Type\"\n              name=\"dataElementType\"\n              control={control}\n              formOptions={{ required: true }}\n              options={[\n                { label: \"String\", value: \"string\" },\n                { label: \"Number\", value: \"number\" },\n                { label: \"Date\", value: \"date\" },\n                { label: \"Object\", value: \"object\" },\n              ]}\n            />\n          )}\n        </form>\n\n        {dataType === \"object\" &&\n          ![\"includeProducts\", \"excludeProducts\"].includes(name) && (\n            <NestedObjectFields\n              name={label || name}\n              value={dataElements}\n              setValue={(newValue) => setValue(\"objectFields\", newValue)}\n              collection={editCollection}\n              collections={collections}\n            />\n          )}\n\n        {\n          // dataType === \"object\" &&\n          // name === \"includeProducts\" &&\n          // (productCollection ? (\n          //   <ProductFilterFields\n          //     name={`${\n          //       name === \"includeProducts\"\n          //         ? \"Include Products\"\n          //         : \"Exclude Products\"\n          //     } filters`}\n          //     value={dataElements}\n          //     setValue={(newValue) => setValue(\"includeProducts\", newValue)}\n          //     collection={editCollection}\n          //     collections={collections}\n          //     productCollection={productCollection}\n          //   />\n          // ) : (\n          //   <p>\n          //     Please add \"Product\" table to add \"includeProducts\" or\n          //     \"excludeProducts\"\n          //   </p>\n          // ))\n        }\n\n        {[\"array\", \"variantArray\"].includes(dataType) &&\n          dataElementType === \"object\" && (\n            <NestedObjectFields\n              name={label || name}\n              value={dataElements}\n              setValue={(newValue) => setValue(\"fields\", newValue)}\n              collection={editCollection}\n              collections={collections}\n            />\n          )}\n      </div>\n\n      <div className={s.inputDetail}>\n        <form\n          onSubmit={handleSubmit(onSubmit)}\n          className={`${s.fieldForm} grid gap-1`}\n        >\n          <div className=\"flex all-columns justify-space-between align-center\">\n            <h3 className=\"all-columns\">Input Field</h3>\n            <Checkbox {...register(\"required\")} label=\"Required\" />\n          </div>\n          <Input\n            label=\"Label\"\n            type=\"text\"\n            required\n            {...register(\"label\")}\n            error={errors.label}\n          />\n\n          {!(\n            [\"array\", \"variantArray\"].includes(dataType) &&\n            dataElementType === \"object\"\n          ) && (\n            <Combobox\n              label=\"Field Type\"\n              name=\"fieldType\"\n              control={control}\n              formOptions={{ required: true }}\n              options={[\n                { label: \"Input\", value: \"input\" },\n                { label: \"Textarea\", value: \"textarea\" },\n                { label: \"Rich Text\", value: \"richText\" },\n                { label: \"Combobox\", value: \"combobox\" },\n                { label: \"Autocomplete\", value: \"select\" },\n                { label: \"Date Range\", value: \"dateRange\" },\n                { label: \"Google Map\", value: \"googleMap\" },\n                { label: \"Collection Filter\", value: \"collectionFilter\" },\n                { label: \"None\", value: \"none\" },\n              ]}\n              onChange={(opt) => {\n                if (opt?.value === \"richText\") {\n                  setValue(\"dataType\", \"object\");\n                } else if (opt?.value === \"googleMap\") {\n                  setValue(\"dataType\", \"string\");\n                }\n              }}\n            />\n          )}\n\n          {!(\n            [\n              \"combobox\",\n              \"textarea\",\n              \"richText\",\n              \"collectionFilter\",\n              \"none\",\n              \"googleMap\",\n            ].includes(fieldType) ||\n            ([\"array\", \"variantArray\"].includes(dataType) &&\n              dataElementType === \"object\") ||\n            ([\"includeProducts\", \"excludeProducts\"].includes(name) &&\n              dataType === \"object\")\n          ) && (\n            <Combobox\n              label=\"Input Type\"\n              name=\"inputType\"\n              control={control}\n              options={\n                fieldType === \"dateRange\"\n                  ? [{ label: \"Calendar\", value: \"calendar\" }]\n                  : [\n                      { label: \"Text\", value: \"text\" },\n                      { label: \"Number\", value: \"number\" },\n                      ...(fieldType !== \"select\"\n                        ? [\n                            { label: \"Phone Number\", value: \"phone\" },\n                            { label: \"Date\", value: \"date\" },\n                            { label: \"File\", value: \"file\" },\n                            { label: \"Calendar\", value: \"calendar\" },\n                            { label: \"Password\", value: \"password\" },\n                          ]\n                        : []),\n                    ]\n              }\n            />\n          )}\n\n          {inputType === \"number\" && (\n            <Combobox\n              label=\"Decimal Places\"\n              name=\"decimalPlaces\"\n              control={control}\n              options={[\n                { label: \"1\", value: \"0\" },\n                { label: \"1.0\", value: \"0.0\" },\n                { label: \"1.00\", value: \"0.00\" },\n                { label: \"1.000\", value: \"0.000\" },\n                { label: \"1.0000\", value: \"0.0000\" },\n                { label: \"1.00000\", value: \"0.00000\" },\n              ]}\n            />\n          )}\n\n          {[\"combobox\", \"select\"].includes(fieldType) && (\n            <Combobox\n              label=\"Options type\"\n              name=\"optionType\"\n              control={control}\n              formOptions={{ required: true }}\n              options={[\n                { label: \"Predefined\", value: \"array\" },\n                {\n                  label: \"Other Collection\",\n                  value: \"collection\",\n                  disabled: fieldType === \"combobox\",\n                },\n              ]}\n            />\n          )}\n\n          {[\"collection\"].includes(optionType) && (\n            <>\n              <Select\n                control={control}\n                label={\"Collection\"}\n                options={collections\n                  .filter((coll) => coll._id !== editCollection?._id)\n                  .map((item) => ({\n                    label: item.name,\n                    value: item.name,\n                  }))}\n                name=\"collection\"\n                formOptions={{ required: true }}\n                className={s.itemName}\n              />\n\n              {collection && (\n                <>\n                  <Combobox\n                    label=\"Option Label\"\n                    name=\"optionLabel\"\n                    control={control}\n                    formOptions={{ required: true }}\n                    options={[\n                      {\n                        label: \"ID\",\n                        value: \"_id\",\n                      },\n                      ...(collections\n                        .find((coll) => coll.name === collection)\n                        ?.fields.map((item) => ({\n                          label: item.label,\n                          value: item.name,\n                        })) || []),\n                    ]}\n                  />\n\n                  <Combobox\n                    label=\"Option Value\"\n                    name=\"optionValue\"\n                    control={control}\n                    formOptions={{ required: true }}\n                    options={[\n                      {\n                        label: \"ID\",\n                        value: \"_id\",\n                      },\n                      ...(collections\n                        .find((coll) => coll.name === collection)\n                        ?.fields.map((item) => ({\n                          label: item.label,\n                          value: item.name,\n                        })) || []),\n                    ]}\n                  />\n                </>\n              )}\n            </>\n          )}\n        </form>\n\n        {[\"combobox\", \"select\"].includes(fieldType) &&\n          optionType === \"array\" && (\n            <>\n              <h3>{label} Options</h3>\n              <Options\n                dataType={dataType}\n                options={options}\n                setOptions={(newOptions) => setValue(\"options\", newOptions)}\n              />\n            </>\n          )}\n\n        <form\n          onSubmit={handleSubmit(onSubmit)}\n          className={`${s.fieldForm} grid gap-1`}\n        >\n          {([\"file\"].includes(inputType) ||\n            [\"select\", \"combobox\"].includes(fieldType)) && (\n            <Checkbox {...register(\"multiple\")} label=\"Multiple\" />\n          )}\n\n          {inputType === \"calendar\" && (\n            <>\n              <Combobox\n                label=\"Date Window\"\n                name=\"dateWindow\"\n                control={control}\n                options={[\n                  { label: \"All time\", value: \"allTime\" },\n                  {\n                    label: \"Past including Today\",\n                    value: \"pastIncludingToday\",\n                  },\n                  {\n                    label: \"Past excluding Today\",\n                    value: \"pastExcludingToday\",\n                  },\n                  {\n                    label: \"Future including Today\",\n                    value: \"futureIncludingToday\",\n                  },\n                  {\n                    label: \"Future excluding Today\",\n                    value: \"futureExcludingToday\",\n                  },\n                ]}\n              />\n\n              <Combobox\n                label=\"Multiple Range\"\n                name=\"multipleRanges\"\n                control={control}\n                options={[\n                  { label: \"Yes\", value: true },\n                  { label: \"No\", value: false },\n                ]}\n              />\n            </>\n          )}\n        </form>\n\n        <form\n          onSubmit={handleSubmit(onSubmit)}\n          className={`flex gap-1 justify-center`}\n        >\n          {edit && (\n            <button className=\"btn\" type=\"button\" onClick={clear}>\n              Clear\n            </button>\n          )}\n          <button className=\"btn\">{edit ? \"Update\" : \"Add\"} Field</button>\n        </form>\n      </div>\n    </div>\n  );\n};\n\nconst ProductFilterFields = ({\n  name,\n  value = [],\n  setValue,\n  collection,\n  collections,\n  productCollection,\n}) => {\n  const [formOpen, setFormOpen] = useState();\n  return (\n    <>\n      <div className=\"flex justify-space-between align-center\">\n        <h3>{name}</h3>\n        <button className=\"btn\" onClick={() => setFormOpen(true)}>\n          Update {name}\n        </button>\n      </div>\n\n      <Table className={s.fields} columns={[{ label: \"Field\" }]}>\n        {value.map((item, i) => (\n          <tr key={i}>\n            <td>{item}</td>\n          </tr>\n        ))}\n      </Table>\n\n      <Modal\n        head\n        label={`Update Fields`}\n        open={formOpen}\n        setOpen={() => {\n          setFormOpen(false);\n        }}\n        className={s.nestedObjectFormModal}\n      >\n        <ProductFilterFieldsForm\n          editCollection={collection}\n          collections={collections}\n          productCollection={productCollection}\n          onSubmit={(newValues) => {\n            setValue([...(value || []), ...newValues]);\n            setFormOpen(false);\n          }}\n        />\n      </Modal>\n    </>\n  );\n};\nconst ProductFilterFieldsForm = ({ productCollection, onSubmit }) => {\n  const { handleSubmit, control } = useForm();\n  return (\n    <form\n      onSubmit={handleSubmit((values) => onSubmit(values.fields))}\n      className=\"grid gap-1 p-1\"\n    >\n      <CustomRadio\n        control={control}\n        name=\"fields\"\n        className={s.itemColumnsRadio}\n        multiple\n        label=\"Fields\"\n        options={productCollection.fields\n          .filter(\n            (item) =>\n              !(item.inputType === \"file\" || item.inputType === \"calendar\")\n          )\n          .map((item) => ({\n            label: item.label,\n            value: item.name,\n          }))}\n      />\n\n      <div className=\"flex justify-center\">\n        <button className=\"btn\">Update</button>\n      </div>\n    </form>\n  );\n};\n\nconst NestedObjectFields = ({\n  name,\n  value = [],\n  setValue,\n  collection,\n  collections,\n}) => {\n  const [edit, setEdit] = useState(null);\n  const [formOpen, setFormOpen] = useState(null);\n  return (\n    <>\n      <div className=\"flex justify-space-between align-center\">\n        <h3>{name} Fields</h3>\n        <button className=\"btn\" onClick={() => setFormOpen(true)}>\n          Add {name} Field\n        </button>\n      </div>\n      <Table\n        className={s.fields}\n        columns={[\n          { label: \"Name\" },\n          { label: \"Data Type\" },\n          { label: \"Label\" },\n          { label: \"Field Type\" },\n          { label: \"Input Type\" },\n          { label: \"Required\" },\n          { label: \"Action\", action: true },\n        ]}\n        placeholder=\"No fields yet.\"\n      >\n        {value.map((item, i) => (\n          <tr key={i}>\n            <td>\n              <span className=\"ellipsis\">{item.name}</span>\n            </td>\n            <td>{item.dataType}</td>\n            <td>{item.label}</td>\n            <td>{item.fieldType}</td>\n            <td>{item.inputType}</td>\n            <td>{item.required ? \"Yes\" : \"No\"}</td>\n            <TableActions\n              actions={[\n                {\n                  icon: <FaPencilAlt />,\n                  label: \"Edit\",\n                  callBack: () => {\n                    setEdit(item);\n                    setFormOpen(true);\n                  },\n                },\n                {\n                  icon: <FaRegTrashAlt />,\n                  label: \"Delete\",\n                  callBack: () =>\n                    Prompt({\n                      type: \"confirmation\",\n                      message: `Are you sure you want to remove this Field?`,\n                      callback: () => {\n                        setValue(\n                          value.filter((field) => field.name !== item.name)\n                        );\n                      },\n                    }),\n                },\n              ]}\n            />\n          </tr>\n        ))}\n      </Table>\n\n      <Modal\n        head\n        label={`${edit ? \"Update\" : \"Add\"} ${name} Field`}\n        open={formOpen}\n        setOpen={() => {\n          setFormOpen(false);\n          setEdit(null);\n        }}\n        className={s.nestedObjectFormModal}\n      >\n        <FieldForm\n          key={edit ? \"edit\" : \"add\"}\n          edit={edit}\n          fields={value}\n          editCollection={collection}\n          collections={collections}\n          productCollection={collections.find((c) => c?.name === \"Product\")}\n          onSuccess={(newField) => {\n            if (edit) {\n              setValue(\n                value.map((item) =>\n                  item.name.toLowerCase() === newField.name.toLowerCase()\n                    ? newField\n                    : item\n                )\n              );\n              setEdit(null);\n            } else {\n              setValue([...value, newField]);\n            }\n            setFormOpen(false);\n          }}\n          clear={() => setEdit(null)}\n        />\n      </Modal>\n    </>\n  );\n};\n\nconst Options = ({ dataType, options, setOptions }) => {\n  const [edit, setEdit] = useState(null);\n  return (\n    <section className={s.optionsWrapper}>\n      <Table\n        className={`${s.options}`}\n        columns={[{ label: \"Label\" }, { label: \"Value\" }, { label: \"Action\" }]}\n      >\n        <tr className=\"inlineForm\">\n          <td>\n            <OptionsForm\n              dataType={dataType}\n              edit={edit}\n              onSuccess={(newOption) => {\n                if (edit) {\n                  setOptions(\n                    (options || []).map((item) =>\n                      item._id === newOption._id ? newOption : item\n                    )\n                  );\n                } else {\n                  setOptions([newOption, ...(options || [])]);\n                }\n                setEdit(null);\n              }}\n              clearForm={() => setEdit(null)}\n            />\n          </td>\n        </tr>\n        {options?.map((item, i) => (\n          <tr key={i}>\n            <td>{item.label}</td>\n            <td>{item.value?.toString()}</td>\n            <TableActions\n              actions={[\n                {\n                  icon: <FaPencilAlt />,\n                  label: \"Edit\",\n                  callBack: () => {\n                    setEdit(item);\n                  },\n                },\n                {\n                  icon: <FaRegTrashAlt />,\n                  label: \"Delete\",\n                  callBack: () =>\n                    Prompt({\n                      type: \"confirmation\",\n                      message: `Are you sure you want to remove this Option?`,\n                      callback: () => {\n                        setOptions(\n                          (options || []).filter(\n                            (product) => product._id !== item._id\n                          )\n                        );\n                      },\n                    }),\n                },\n              ]}\n            />\n          </tr>\n        ))}\n      </Table>\n    </section>\n  );\n};\nconst OptionsForm = ({ dataType, edit, onSuccess, clearForm }) => {\n  const {\n    handleSubmit,\n    register,\n    formState: { errors },\n    reset,\n  } = useForm({\n    resolver: useYup(optionsSchema),\n  });\n  useEffect(() => {\n    reset({\n      label: edit?.label || \"\",\n      value: edit?.value || \"\",\n    });\n  }, [edit]);\n  return (\n    <form\n      onSubmit={handleSubmit((values) => {\n        if (dataType === \"boolean\") {\n          values.value = [\"1\", 1, \"true\"].includes(values.value.toLowerCase());\n        } else if (dataType === \"number\") {\n          values.value = +values.value;\n        }\n        onSuccess({\n          ...values,\n          _id: edit?._id || Math.random().toString(36).substr(-8),\n        });\n        reset();\n      })}\n    >\n      <Input {...register(\"label\")} placeholder=\"Label\" error={errors.label} />\n      <Input {...register(\"value\")} placeholder=\"Value\" error={errors.value} />\n\n      <section className=\"btns\">\n        <button className=\"btn clear border iconOnly\" type=\"submit\">\n          {edit ? <FaCheck /> : <FaPlus />}\n        </button>\n        {edit && (\n          <button\n            className=\"btn clear border iconOnly\"\n            type=\"button\"\n            onClick={() => {\n              clearForm();\n              // reset();\n            }}\n          >\n            <FaTimes />\n          </button>\n        )}\n      </section>\n    </form>\n  );\n};\n\nexport default Form;\n","import { useState, useEffect, useContext } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport {\n  Input,\n  Textarea,\n  FileInputNew,\n  CalendarInput,\n  DynamicTable,\n  Combobox,\n  Table,\n  Select,\n  CustomRadio,\n  MobileNumberInput,\n  moment,\n  RichText,\n  Checkbox,\n  TableActions,\n  GoogleMap,\n} from \"Components/elements\";\nimport { useYup, useFetch } from \"hooks\";\nimport { Prompt, Modal } from \"Components/modal\";\nimport { FaPencilAlt, FaRegTrashAlt } from \"react-icons/fa\";\nimport { findProperties } from \"helpers\";\nimport * as yup from \"yup\";\nimport s from \"./payments.module.scss\";\nimport { endpoints } from \"config\";\nimport { SiteContext } from \"SiteContext\";\n\nconst MainForm = ({ collection, productCollection, edit, onSuccess }) => {\n  const {\n    post: saveData,\n    put: updateData,\n    loading,\n  } = useFetch(`${endpoints.dynamic}/${collection.name}/${edit?._id || \"\"}`);\n\n  return (\n    <div className={`grid gap-1`}>\n      <DynamicForm\n        collection={collection}\n        fields={collection.fields}\n        productCollection={productCollection}\n        edit={edit}\n        loading={loading}\n        onSubmit={(values, addNew) => {\n          let payload = { ...values };\n\n          if (collection.name === \"Product\" && \"variants\" in payload) {\n            payload.variants = JSON.stringify(payload.variants);\n          }\n\n          if (collection.fields.some((field) => field.dataType === \"object\")) {\n            collection.fields\n              .filter((item) => item.dataType === \"object\")\n              .forEach((field) => {\n                if (values[field.name]) {\n                  payload[field.name] = JSON.stringify(values[field.name]);\n                }\n              });\n          }\n\n          findProperties(\"_id\", payload).forEach((item) => {\n            item.path.reduce((obj, key, i, arr) => {\n              if (i === arr.length - 1 && obj[key].length <= 20) {\n                delete obj[key];\n              }\n              return obj[key];\n            }, payload);\n          });\n\n          if (collection.fields.some((field) => field.inputType === \"file\")) {\n            payload = new FormData();\n            collection.fields.forEach((field) => {\n              if (collection.name === \"Product\" && field.name === \"variants\") {\n                return;\n              }\n              const value = values[field.name];\n              if (value === undefined) {\n                return;\n              }\n              if (field.inputType === \"file\" && value.length) {\n                for (const file of value) {\n                  payload.append(`${field.name}`, file.uploadFilePath || file);\n                }\n                return;\n              }\n              if ([\"array\", \"variantArray\"].includes(field.dataType)) {\n                for (const item of value) {\n                  payload.append(`${field.name}`, item);\n                }\n                return;\n              }\n              if (field.dataType === \"object\") {\n                payload.append(`${field.name}`, JSON.stringify(value));\n                return;\n              }\n\n              return payload.append(field.name, value);\n            });\n            if (collection.name === \"Product\" && \"variants\" in values) {\n              payload.append(\"variants\", JSON.stringify(values.variants));\n            }\n          }\n          (edit ? updateData : saveData)(payload)\n            .then(({ data }) => {\n              if (!data.success) {\n                return Prompt({ type: \"error\", message: data.message });\n              }\n              if (addNew) {\n                onSuccess(data.data, addNew);\n              } else {\n                onSuccess(data.data);\n              }\n            })\n            .catch((err) => Prompt({ type: \"error\", message: err.message }));\n        }}\n      />\n    </div>\n  );\n};\n\nconst DynamicForm = ({\n  prefill,\n  collection,\n  fields: collectionFields,\n  productCollection,\n  edit,\n  loading,\n  onSubmit,\n}) => {\n  const [_fields, set_fields] = useState([]);\n  const {\n    handleSubmit,\n    register,\n    reset,\n    setValue,\n    watch,\n    control,\n    getValues,\n    formState: { errors },\n  } = useForm({\n    resolver: useYup(\n      yup.object({\n        ..._fields\n          .map((f) => {\n            let field;\n            if ([\"objectId\", \"string\", \"date\"].includes(f.dataType)) {\n              field = yup.string();\n            }\n            if (f.dataType === \"number\") {\n              field = yup.number().typeError(\"Please enter a valid number\");\n            }\n            if (f.inputType === \"phone\") {\n              field = yup.string().phone(\"Please enter a valid phone number\");\n            }\n            if ([\"array\", \"variantArray\"].includes(f.dataType)) {\n              field = yup.array();\n              if (f.min) {\n                field = field.min(f.min, `At least ${f.min} items required`);\n              }\n            }\n            if (f.required) {\n              field = field.required(\n                field.errorMessage || `${f.label} is required`\n              );\n            }\n            return field;\n          })\n          .reduce((p, c, i) => {\n            p[_fields[i]?.name] = c;\n            return p;\n          }, {}),\n      })\n    ),\n  });\n\n  const category = watch(\"category\");\n\n  const addVariant = watch(\"addVariant\");\n  const subcategory = watch(\"subcategory\");\n\n  useEffect(() => {\n    const _edit = { ...edit, addNew: false };\n    if (edit) {\n      collectionFields.forEach((field) => {\n        if (field.inputType === \"date\") {\n          _edit[field.name] = moment(_edit[field.name], \"YYYY-MM-DD\");\n        } else if (field.inputType === \"datetime-local\") {\n          _edit[field.name] = moment(_edit[field.name], \"YYYY-MM-DD hh:mm\");\n        } else if (\n          field.dataType === \"objectId\" &&\n          typeof edit[field.name] === \"object\"\n        ) {\n          _edit[field.name] = edit[field.name][field.optionValue];\n        } else if (\n          field.dataElementType === \"objectId\" &&\n          typeof (edit[field.name] || [])[0] === \"object\"\n        ) {\n          _edit[field.name] = edit[field.name].map(\n            (item) => item[field.optionValue]\n          );\n        } else if (\n          field.name === \"variants\" &&\n          collection?.name === \"Product\"\n        ) {\n          _edit.addVariant = !!edit.variants?.length;\n        }\n      });\n    }\n\n    setTimeout(() => reset(_edit), 10);\n  }, [edit]);\n  useEffect(() => {\n    const _prefill = {\n      ..._fields\n        .map((item) => item.name)\n        .reduce((p, c) => {\n          p[c] = \"\";\n          return p;\n        }, {}),\n      ...prefill,\n      addNew: false,\n    };\n    if (prefill) {\n      collectionFields.forEach((field) => {\n        if (field.inputType === \"date\") {\n          _prefill[field.name] = moment(_prefill[field.name], \"YYYY-MM-DD\");\n        } else if (field.inputType === \"datetime-local\") {\n          _prefill[field.name] = moment(\n            _prefill[field.name],\n            \"YYYY-MM-DD hh:mm\"\n          );\n        } else if (\n          field.dataType === \"objectId\" &&\n          typeof prefill[field.name] === \"object\"\n        ) {\n          _prefill[field.name] = prefill[field.name][field.optionValue];\n        } else if (\n          field.dataElementType === \"objectId\" &&\n          typeof (prefill[field.name] || [])[0] === \"object\"\n        ) {\n          _prefill[field.name] = prefill[field.name].map(\n            (item) => item[field.optionValue]\n          );\n        } else if (\n          field.name === \"variants\" &&\n          collection?.name === \"Product\"\n        ) {\n          _prefill.addVariant = !!prefill.variants?.length;\n        }\n      });\n      reset(_prefill);\n    }\n  }, [prefill]);\n  useEffect(() => {\n    if (subcategory) {\n      set_fields(\n        collectionFields\n          .filter(\n            (item) => !item.subcategory || item.subcategory === subcategory\n          )\n          .sort((a, b) => {\n            if ([\"category\", \"subcategory\"].includes(a.name)) {\n              return -1;\n            }\n            return 1;\n          })\n      );\n    } else {\n      set_fields(\n        collectionFields.filter((item) =>\n          [\"category\", \"subcategory\"].includes(item.name)\n        )\n      );\n    }\n  }, [subcategory]);\n  useEffect(() => {\n    if (!category) {\n      setValue(\"subcategory\", \"\");\n    }\n  }, [category]);\n\n  const fields = (\n    collection?.name === \"Product\" ? _fields : collectionFields\n  ).map((field, i) => {\n    if (collection?.name === \"Product\" && field.name === \"variants\") {\n      return null;\n    }\n    if (field.dataType === \"object\" && field.fieldType === \"collectionFilter\") {\n      const value = watch(field.name);\n      return (\n        <ProductFilterForm\n          key={field.name}\n          field={field}\n          value={value}\n          productCollection={productCollection}\n          setValue={setValue}\n        />\n      );\n    }\n    if (\n      [\"array\", \"variantArray\"].includes(field.dataType) &&\n      field.dataElementType === \"object\"\n    ) {\n      const values = watch(field.name);\n      return (\n        <NestedObjectTable\n          collection={collection}\n          key={field.name}\n          values={values}\n          field={field}\n          setValue={setValue}\n        />\n      );\n    }\n    if (field.inputType === \"file\") {\n      return (\n        <FileInputNew\n          key={field.name}\n          control={control}\n          name={field.name}\n          label={field.label}\n          multiple={field.multiple}\n          thumbnail\n        />\n      );\n    }\n    if (field.fieldType === \"dateRange\") {\n      if (field.inputType === \"calendar\") {\n        return (\n          <CalendarInput\n            key={field.name}\n            control={control}\n            label={field.label}\n            name={field.name}\n            dateWindow={field.dateWindow}\n            required={field.required}\n            disabledDates={field.disabledDates || []}\n            multipleRanges={field.multipleRanges}\n          />\n        );\n      }\n    }\n    if (field.fieldType === \"input\") {\n      if (field.inputType === \"phone\") {\n        return (\n          <MobileNumberInput\n            label={field.label}\n            key={field.name}\n            name={field.name}\n            formOptions={{ required: field.required }}\n            control={control}\n          />\n        );\n      }\n      return (\n        <Input\n          key={field.name}\n          {...register(field.name)}\n          type={field.inputType || \"text\"}\n          label={field.label}\n          required={field.required}\n          error={errors[field.name]}\n          autoFocus={i === 0}\n        />\n      );\n    }\n    if (field.fieldType === \"textarea\") {\n      return (\n        <Textarea\n          key={field.name}\n          {...register(field.name)}\n          label={field.label}\n          required={field.required}\n          error={errors[field.name]}\n          autoFocus={i === 0}\n        />\n      );\n    }\n    if (field.fieldType === \"richText\") {\n      return (\n        <RichText\n          key={field.name}\n          control={control}\n          name={field.name}\n          autoFocus={i === 0}\n          label={field.label}\n          required={field.required}\n        />\n      );\n    }\n    if (field.fieldType === \"combobox\") {\n      return (\n        <Combobox\n          key={field.name}\n          label={field.label}\n          control={control}\n          name={field.name}\n          multiple={field.multiple}\n          formOptions={{ required: field.required }}\n          options={field.options || []}\n        />\n      );\n    }\n    if (field.fieldType === \"select\") {\n      return (\n        <Select\n          key={field.name}\n          control={control}\n          label={field.label}\n          {...(field.optionType === \"predefined\" && {\n            options: field.options || [],\n          })}\n          {...(field.optionType === \"collection\" && {\n            url: `${endpoints.dynamic}/${field.collection}`,\n          })}\n          {...(collection.name === \"Product\" &&\n            field.optionType === \"collection\" && {\n              url: `${endpoints.dynamic}/${field.collection}?${\n                category ? `category=${category}` : \"\"\n              }`,\n            })}\n          {...(collection.name === \"Product\" &&\n            field.name === \"subcategory\" && {\n              disabled: !category,\n            })}\n          getQuery={(inputValue, selected) => ({\n            ...(inputValue && { [field.optionLabel]: inputValue }),\n            ...(selected && { [field.optionValue]: selected }),\n          })}\n          handleData={(item) => ({\n            label: item[field.optionLabel],\n            value: item[field.optionValue],\n          })}\n          multiple={field.multiple}\n          name={field.name}\n          formOptions={{ required: field.required }}\n          className={s.itemName}\n        />\n      );\n    }\n    if (field.fieldType === \"googleMap\") {\n      return (\n        <GoogleMap\n          key={field.name}\n          control={control}\n          name={field.name}\n          label={field.label}\n          marker\n          autoComplete\n          formOptions={{ required: field.required }}\n        />\n      );\n    }\n  });\n\n  return (\n    <form\n      onSubmit={handleSubmit((values) => {\n        if (collection?.name === \"Product\") {\n          const fields = _fields.map((item) => item.name);\n          const data = {};\n          Object.entries(values)\n            .filter(([key, value]) => fields.includes(key))\n            .forEach(([key, value]) => {\n              data[key] = value;\n            });\n          onSubmit(\n            {\n              ...data,\n              _id: edit?._id || Math.random().toString(36).substr(-8),\n            },\n            collection.name === \"Product\" && values.addNew\n          );\n        } else {\n          onSubmit({\n            ...values,\n            _id: edit?._id || Math.random().toString(36).substr(-8),\n          });\n        }\n      })}\n      className={`${s.dynamicForm} grid gap-1 p-1`}\n    >\n      {fields}\n\n      {collection?.name === \"Product\" &&\n        subcategory &&\n        collection?.fields.some((item) => \"variantArray\" === item.dataType) && (\n          <Checkbox {...register(\"addVariant\")} label=\"Add Variant\" />\n        )}\n\n      {addVariant && (\n        <Variants\n          collection={collection}\n          setValue={setValue}\n          getValues={getValues}\n        />\n      )}\n\n      <div className=\"btns\">\n        {!edit && collection.name === \"Product\" && (\n          <button\n            className=\"btn\"\n            disabled={loading}\n            onClick={() => setValue(\"addNew\", true)}\n          >\n            {edit ? \"Update\" : \"Submit\"}\n          </button>\n        )}\n        <button\n          className=\"btn\"\n          disabled={loading}\n          onClick={() => setValue(\"addNew\", false)}\n        >\n          {edit ? \"Update\" : \"Submit\"} & Close\n        </button>\n      </div>\n    </form>\n  );\n};\n\nconst Variants = ({ collection, setValue, getValues }) => {\n  const [formOpen, setFormOpen] = useState(false);\n  const [edit, setEdit] = useState(null);\n  const [variants, setVariants] = useState(getValues(\"variants\") || []);\n  const [fields, setFields] = useState(\n    collection.fields.filter((item) => item.dataType === \"variantArray\")\n  );\n\n  return (\n    <div className={s.productVariants}>\n      <div className=\"flex justify-space-between mb-1\">\n        <h3>Product Variants</h3>\n        <button className=\"btn\" type=\"button\" onClick={() => setFormOpen(true)}>\n          Add Variant\n        </button>\n      </div>\n\n      <Table\n        columns={[\n          ...fields.map((item) => ({ label: item.label })),\n          { label: \"Price\" },\n          { label: \"Images\" },\n          { label: \"Actions\" },\n        ]}\n      >\n        {variants.map((item, i) => (\n          <tr key={i}>\n            <td>{item[fields[0]?.name]}</td>\n            <td>{item[fields[1]?.name]}</td>\n            <td>{item.price}</td>\n            <td>{(item.images || []).length}</td>\n            <TableActions\n              actions={[\n                {\n                  icon: <FaPencilAlt />,\n                  label: \"Edit\",\n                  callBack: () => {\n                    setEdit(item);\n                    setFormOpen(true);\n                  },\n                },\n                {\n                  icon: <FaRegTrashAlt />,\n                  label: \"Delete\",\n                  callBack: () =>\n                    Prompt({\n                      type: \"confirmation\",\n                      message: `Are you sure you want to remove this Variant?`,\n                      callback: () => {\n                        setVariants(variants.filter((i) => i._id !== item._id));\n                        setValue(\n                          \"variants\",\n                          variants.filter((i) => i._id !== item._id)\n                        );\n                      },\n                    }),\n                },\n              ]}\n            />\n          </tr>\n        ))}\n      </Table>\n\n      <Modal\n        head\n        label={`${edit ? \"Update\" : \"Add\"} Item`}\n        open={formOpen}\n        setOpen={() => {\n          setFormOpen(false);\n          setEdit(null);\n        }}\n        className={s.nestedObjectFormModal}\n      >\n        <VariantForm\n          edit={edit}\n          fields={fields}\n          images={getValues(\"images\")}\n          onSubmit={(newObj) => {\n            if (edit) {\n              setVariants(\n                variants.map((item) =>\n                  item._id === newObj._id ? newObj : item\n                )\n              );\n              setValue(\n                \"variants\",\n                variants.map((item) =>\n                  item._id === newObj._id ? newObj : item\n                )\n              );\n              setEdit(null);\n            } else {\n              setVariants([...variants, newObj]);\n              setValue(\"variants\", [...variants, newObj]);\n            }\n            // setValues\n            setFormOpen(false);\n          }}\n        />\n      </Modal>\n    </div>\n  );\n};\nconst VariantForm = ({ edit, fields, images, onSubmit }) => {\n  const { handleSubmit, control, register, reset, errors } = useForm({\n    resolver: useYup(\n      yup.object({\n        price: yup.number().typeError(\"Please enter a valid number\"),\n        // yup.string()\n      })\n    ),\n  });\n  useEffect(() => {\n    if (edit) {\n      reset({ ...edit });\n    }\n  }, []);\n\n  const _fields = fields.map((field, i) => {\n    if (field.fieldType === \"combobox\") {\n      return (\n        <Combobox\n          key={field.name}\n          label={field.label}\n          control={control}\n          name={field.name}\n          // multiple={field.multiple}\n          formOptions={{ required: field.required }}\n          options={field.options || []}\n        />\n      );\n    }\n    if (field.fieldType === \"select\") {\n      return (\n        <Select\n          key={field.name}\n          control={control}\n          label={field.label}\n          {...(field.optionType === \"predefined\" && {\n            options: field.options,\n          })}\n          {...(field.optionType === \"collection\" && {\n            url: `${endpoints.dynamic}/${field.collection}`,\n          })}\n          getQuery={(inputValue, selected) => ({\n            ...(inputValue && { [field.optionLabel]: inputValue }),\n            ...(selected && { [field.optionValue]: selected }),\n          })}\n          handleData={(item) => ({\n            label: item[field.optionLabel],\n            value: item[field.optionValue],\n          })}\n          // multiple={field.multiple}\n          name={field.name}\n          formOptions={{ required: field.required }}\n          className={s.itemName}\n        />\n      );\n    }\n  });\n  return (\n    <form\n      className={`${s.variantForm} p-1 grid gap-1`}\n      onSubmit={handleSubmit((values) => {\n        onSubmit({\n          ...values,\n          _id: edit?._id || Math.random().toString(36).substr(-8),\n        });\n      })}\n    >\n      <CustomRadio\n        control={control}\n        label=\"Images\"\n        name={`images`}\n        className={s.variantImages}\n        multiple\n        selectedClassName={s.selected}\n        options={images\n          .filter(\n            (item) => typeof item === \"string\" || \"uploadFilePath\" in item\n          )\n          .map((item) => {\n            if (typeof item === \"string\") {\n              return { value: item };\n            }\n            if (\"uploadFilePath\" in item) {\n              return { value: item.uploadFilePath };\n            }\n            if (\"type\" in item && item.type.startsWith(\"image\")) {\n              const url = URL.createObjectURL(item);\n              return { value: url };\n            }\n          })}\n        renderItem={(opt) => <img src={opt.value} />}\n      />\n\n      {_fields}\n\n      <Input label=\"Price Difference\" type=\"number\" {...register(\"price\")} />\n\n      <div className=\"btns\">\n        <button className=\"btn\">{edit ? \"Update\" : \"Submit\"}</button>\n      </div>\n    </form>\n  );\n};\n\nconst NestedObjectTable = ({ collection, field, values = [], setValue }) => {\n  const [formOpen, setFormOpen] = useState(false);\n  const [edit, setEdit] = useState(null);\n  const {\n    config: { siteConfig },\n  } = useContext(SiteContext);\n  const orderFields =\n    collection.name === \"Order\"\n      ? collection.fields\n          .find((item) => item.name === \"products\")\n          .fields.filter((item) => ![\"product\", \"variant\"].includes(item.name))\n      : null;\n  return (\n    <section className={s.nestedTable} onSubmit={(e) => e.stopPropagation()}>\n      <div className=\"flex justify-space-between align-center mb-1\">\n        <h3>{field.label}</h3>\n        {!(collection.name === \"Order\" && field.name === \"products\") && (\n          <button\n            className=\"btn\"\n            type=\"button\"\n            onClick={() => setFormOpen(true)}\n          >\n            Add\n          </button>\n        )}\n      </div>\n      {collection.name === \"Order\" && field.name === \"products\" ? (\n        <>\n          <ul className={s.products}>\n            {(values || []).map((item, i) => (\n              <li key={i} className={s.product}>\n                <div className={s.thumbnail}>\n                  <img src={(item.variant?.images || item.product.images)[0]} />\n                </div>\n                <div className={s.productDetail}>\n                  <h3>{item.product?.title}</h3>\n                  {(orderFields || []).map((field) => (\n                    <p key={field.name}>\n                      <strong>{field.label}</strong>:{\" \"}\n                      <span>{item[field.name]}</span>\n                    </p>\n                  ))}\n                </div>\n                <span className={s.price}>\n                  {siteConfig?.currency}{\" \"}\n                  {(\n                    (item.product.price + (item.variant?.price || 0)) *\n                    (item.qty || 1)\n                  ).toLocaleString()}\n                </span>\n              </li>\n            ))}\n          </ul>\n          <hr />\n          <p className={s.subtotal}>\n            Subtotal ({values.reduce((p, c) => p + (c.qty || 1), 0)} item):{\" \"}\n            <strong>\n              {siteConfig.currency +\n                \" \" +\n                values\n                  .reduce(\n                    (p, c) =>\n                      p +\n                      (c.product.price + (c.variant?.price || 0)) *\n                        (c.qty || 1),\n                    0\n                  )\n                  .toLocaleString()}\n            </strong>\n          </p>\n        </>\n      ) : (\n        <DynamicTable\n          fields={field.fields}\n          data={values}\n          actions={(item) => [\n            {\n              icon: <FaPencilAlt />,\n              label: \"Edit\",\n              callBack: () => {\n                setEdit(item);\n                setFormOpen(true);\n              },\n            },\n            {\n              icon: <FaRegTrashAlt />,\n              label: \"Delete\",\n              callBack: () =>\n                Prompt({\n                  type: \"confirmation\",\n                  message: `Are you sure you want to remove this Collection?`,\n                  callback: () => {\n                    setValue(\n                      field.name,\n                      values.filter((i) => i._id !== item._id)\n                    );\n                  },\n                }),\n            },\n          ]}\n        />\n      )}\n\n      <Modal\n        head\n        label={`${edit ? \"Update\" : \"Add\"} Item`}\n        open={formOpen}\n        setOpen={() => {\n          setFormOpen(false);\n          setEdit(null);\n        }}\n        className={s.nestedObjectFormModal}\n      >\n        <DynamicForm\n          edit={edit}\n          fields={field.fields}\n          onSubmit={(newObj) => {\n            if (edit) {\n              setValue(\n                field.name,\n                values.map((item) => (item._id === newObj._id ? newObj : item))\n              );\n              setEdit(null);\n            } else {\n              setValue(field.name, [...values, newObj]);\n            }\n            setFormOpen(false);\n          }}\n        />\n      </Modal>\n    </section>\n  );\n};\n\nconst ProductFilterForm = ({ field, value, productCollection, setValue }) => {\n  const [formOpen, setFormOpen] = useState(false);\n  return (\n    <section className={s.nestedTable} onSubmit={(e) => e.stopPropagation()}>\n      <div className=\"flex justify-space-between align-center mb-1\">\n        <h3>{field.label} Filters</h3>\n        <button className=\"btn\" type=\"button\" onClick={() => setFormOpen(true)}>\n          Update {field.label}\n        </button>\n      </div>\n\n      <Table\n        className={s.fields}\n        columns={[\n          { label: \"Field\" },\n          { label: \"Data Type\" },\n          { label: \"Filter Type\" },\n          { label: \"value\" },\n          // { label: \"Input Type\" },\n          // { label: \"Required\" },\n        ]}\n      >\n        {Object.entries(value || {}).map(([key, value], i) => (\n          <tr key={i}>\n            <td>{key}</td>\n            <td>\n              {\n                productCollection.fields.find((item) => item.name === key)\n                  ?.dataType\n              }\n            </td>\n            <td>{value.filterType}</td>\n            <td>\n              {value.filterType === \"minMax\" && (\n                <>\n                  Min: {value.min}; Max: {value.max}\n                </>\n              )}\n              {value.filterType === \"arrayContains\" && (\n                <>{value.array?.length || 0} items</>\n              )}\n              {value.filterType === \"stringContains\" && <>{value.text}</>}\n            </td>\n          </tr>\n        ))}\n      </Table>\n\n      <Modal\n        head\n        label={`${field.label} Filters`}\n        open={formOpen}\n        setOpen={() => {\n          setFormOpen(false);\n        }}\n        className={s.nestedObjectFormModal}\n      >\n        <ProductFilterFieldsForm\n          productCollection={productCollection}\n          value={value}\n          onSubmit={(newObj) => {\n            setValue(field.name, newObj);\n            setFormOpen(false);\n          }}\n        />\n      </Modal>\n    </section>\n  );\n};\nconst ProductFilterFieldsForm = ({\n  value = {},\n  productCollection,\n  onSubmit,\n}) => {\n  const {\n    handleSubmit,\n    register,\n    control,\n    watch,\n    reset,\n    formState: { errors },\n  } = useForm();\n  const fields = watch(\"fields\");\n  useEffect(() => {\n    const formValues = {\n      fields: Object.keys(value),\n    };\n    Object.entries(value).forEach(([key, value]) => {\n      const field = productCollection.fields.find(\n        (field) => field.name === key\n      );\n      if (!field) return;\n\n      if (field.dataType === \"number\" && value.filterType === \"minMax\") {\n        formValues[key + \"___min\"] = value.min || \"\";\n        formValues[key + \"___max\"] = value.max || \"\";\n      } else if (\n        field.dataType === \"string\" &&\n        [\"input\", \"textarea\"].includes(field.fieldType)\n      ) {\n        formValues[key] = value.text;\n      } else if (field.fieldType === \"combobox\") {\n        formValues[key] = value.array;\n      } else if (field.fieldType === \"select\") {\n        formValues[key] = value.array;\n      }\n    });\n    reset(formValues);\n  }, []);\n  return (\n    <form\n      onSubmit={handleSubmit((values) => {\n        const data = {};\n        Object.entries(values).forEach(([key, value]) => {\n          let [fieldName, subLabel] = key.split(\"___\");\n          if (subLabel) {\n            key = fieldName;\n          }\n          if (!values.fields.includes(key)) {\n            return;\n          }\n          const field = productCollection.fields.find(\n            (field) => field.name === key\n          );\n          if (!field) {\n            return;\n          }\n          if (\n            field.dataType === \"string\" &&\n            [\"input\", \"textarea\"].includes(field.fieldType)\n          ) {\n            data[key] = {\n              filterType: \"stringContains\",\n              text: value,\n            };\n          } else if (field.dataType === \"number\") {\n            data[fieldName] = {\n              ...data[fieldName],\n              filterType: \"minMax\",\n              [subLabel]: +value,\n            };\n          } else if (\n            [\"string\", \"objectId\"].includes(field.dataType) &&\n            field.fieldType === \"select\"\n          ) {\n            data[key] = {\n              filterType: \"arrayContains\",\n              array: value,\n            };\n          }\n        });\n        onSubmit(data);\n      })}\n      className=\"grid gap-1 p-1\"\n    >\n      <CustomRadio\n        control={control}\n        name=\"fields\"\n        className={s.itemColumnsRadio}\n        multiple\n        label=\"Fields\"\n        options={productCollection.fields\n          .filter(\n            (item) =>\n              !(item.inputType === \"file\" || item.inputType === \"calendar\")\n          )\n          .map((item) => ({\n            label: item.label,\n            value: item.name,\n          }))}\n      />\n\n      {(fields || []).map((f, i) => {\n        const field = productCollection.fields.find(\n          (field) => field.name === f\n        );\n        if (!field) return;\n\n        if (\n          field.dataType === \"string\" &&\n          [\"input\", \"textarea\"].includes(field.fieldType)\n        ) {\n          return (\n            <Input\n              key={i}\n              {...register(field.name)}\n              type={\"text\"}\n              label={`${field.label} contains`}\n              required={field.required}\n              error={errors[field.name]}\n            />\n          );\n        } else if (field.dataType === \"number\") {\n          return (\n            <div key={i} className=\"flex gap-1\">\n              <Input\n                className=\"all-columns\"\n                {...register(field.name + \"___min\")}\n                type={\"number\"}\n                label={`Minimum ${field.label}`}\n                required={field.required}\n                error={errors[field.name + \"___min\"]}\n              />\n              <Input\n                className=\"all-columns\"\n                {...register(field.name + \"___max\")}\n                type={\"number\"}\n                label={`Maximum ${field.label}`}\n                required={field.required}\n                error={errors[field.name + \"___max\"]}\n              />\n            </div>\n          );\n        } else if (\n          // [\"string\", \"objectId\"].includes(field.dataType) &&\n          field.fieldType === \"select\"\n        ) {\n          return (\n            <Select\n              key={i}\n              control={control}\n              label={field.label}\n              multiple\n              {...(field.optionType === \"predefined\" && {\n                options: field.options,\n              })}\n              {...(field.optionType === \"collection\" && {\n                url: `${endpoints.dynamic}/${field.collection}`,\n              })}\n              getQuery={(inputValue, selected) => ({\n                ...(inputValue && { [field.optionLabel]: inputValue }),\n                ...(selected && { [field.optionValue]: selected }),\n              })}\n              handleData={(item) => ({\n                label: item[field.optionLabel],\n                value: item[field.optionValue],\n              })}\n              name={field.name}\n              formOptions={{ required: true }}\n              className={s.itemName}\n            />\n          );\n        } else if (\n          // [\"string\", \"objectId\"].includes(field.dataType) &&\n          field.fieldType === \"combobox\"\n        ) {\n          return (\n            <Combobox\n              key={i}\n              label={field.label}\n              control={control}\n              name={field.name}\n              multiple\n              formOptions={{ required: true }}\n              options={field.options || []}\n            />\n          );\n        }\n      })}\n\n      <div className=\"flex justify-center\">\n        <button className=\"btn\">Update</button>\n      </div>\n    </form>\n  );\n};\n\nexport default MainForm;\n","import { useContext, useEffect, useState } from \"react\";\nimport { SiteContext } from \"SiteContext\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport { useFetch } from \"hooks\";\nimport { Prompt, Modal } from \"Components/modal\";\nimport { paths, endpoints } from \"config\";\nimport { DynamicTable, ImportExport } from \"Components/elements\";\nimport { FaPencilAlt, FaRegTrashAlt } from \"react-icons/fa\";\nimport s from \"./payments.module.scss\";\n\nimport DynamicForm from \"./dynamicForm\";\n\nconst DynamicTablePage = () => {\n  const [filters, setFilters] = useState({});\n  const { business, checkPermission } = useContext(SiteContext);\n  const [templateData, setTemplateData] = useState([]);\n  const [edit, setEdit] = useState(null);\n  const [addData, setAddData] = useState(false);\n  const [collection, setCollection] = useState(null);\n  const [productCollection, setProductCollection] = useState(null);\n  const navigate = useNavigate();\n  const { \"*\": table } = useParams();\n  const { get: getCollection, loading: gettingCollection } = useFetch(\n    `${endpoints.collections}/${table}`\n  );\n  const { get: getProductCollection, loading: gettingProductCollection } =\n    useFetch(`${endpoints.collections}/Product`);\n  const { remove: deleteData } = useFetch(`${endpoints.dynamic}/${table}/{ID}`);\n\n  useEffect(() => {\n    getCollection()\n      .then(({ data }) => {\n        if (data.success) {\n          const _template = [];\n          for (let i = 0; i < 5; i++) {\n            const item = {};\n            data.data.fields.forEach((field) => {\n              if (field.dataType === \"date\") {\n                return (item[field.name] = new Date()\n                  .toISOString()\n                  .substring(0, 10));\n              }\n              if (field.dataType === \"number\") {\n                return (item[field.name] =\n                  +(Math.random() * 1000).toFixed(0) + 1000);\n              }\n              if (field.dataType === \"objectId\") {\n                return (item[field.name] =\n                  new Date().getTime().toString(16) +\n                  (+(Math.random() * 10000000000000000000).toFixed(0)).toString(\n                    16\n                  ));\n              }\n              if (\n                [\"combobox\", \"select\"].includes(field.fieldType) &&\n                field.options?.length\n              ) {\n                return (item[field.name] =\n                  field.options[i]?.value || field.options[0]?.value);\n              }\n              item[field.name] = `${field.label} ${i}`;\n            });\n            _template.push(item);\n          }\n          setTemplateData(_template);\n          return setCollection(data.data);\n        }\n      })\n      .catch((err) => Prompt({ type: \"error\", message: err.message }));\n    if (table === \"Campaign\") {\n      getProductCollection()\n        .then(({ data }) => {\n          if (data.success) {\n            return setProductCollection(data.data);\n          }\n        })\n        .catch((err) => Prompt({ type: \"error\", message: err.message }));\n    }\n  }, []);\n  return (\n    <div className={`${s.content} grid gap-1 m-a p-1`}>\n      <div\n        className={`${\n          window.innerWidth <= 480 ? \"grid gap-1\" : \"flex\"\n        } justify-space-between`}\n      >\n        <h2>All {table}(s)</h2>\n        <div className={`flex gap-1 wrap`}>\n          <ImportExport\n            exportUrl={`${endpoints.dynamic}/${table}`}\n            importUrl={\n              checkPermission(`${business?.business._id}_${table}_create`)\n                ? `${endpoints.dynamicBulkCreate.replace(\":table\", table)}`\n                : null\n            }\n            collection={collection}\n            templateData={templateData}\n            onSuccess={() => setFilters((prev) => ({ ...prev }))}\n          />\n          <button\n            className=\"btn\"\n            onClick={() =>\n              navigate(\n                paths.dashboard.replace(\"*\", \"\") +\n                  paths.dynamicTables.replace(\"/*\", \"\")\n              )\n            }\n          >\n            Back\n          </button>\n          {checkPermission(`${business?.business._id}_${table}_create`) && (\n            <button className=\"btn\" onClick={() => setAddData(true)}>\n              Add {table}\n            </button>\n          )}\n        </div>\n      </div>\n      <DynamicTable\n        fields={collection?.fields}\n        loading={gettingCollection}\n        url={`${endpoints.dynamic}/${table}`}\n        filters={filters}\n        pagination\n        actions={(item) => [\n          ...(checkPermission(`${business?.business._id}_${table}_update`)\n            ? [\n                {\n                  icon: <FaPencilAlt />,\n                  label: \"Edit\",\n                  callBack: () => {\n                    setEdit(item);\n                    setAddData(true);\n                  },\n                },\n              ]\n            : []),\n          ...(checkPermission(`${business?.business._id}_${table}_delete`)\n            ? [\n                {\n                  icon: <FaRegTrashAlt />,\n                  label: \"Delete\",\n                  callBack: () =>\n                    Prompt({\n                      type: \"confirmation\",\n                      message: `Are you sure you want to remove this Collection?`,\n                      callback: () => {\n                        deleteData({}, { params: { \"{ID}\": item._id } }).then(\n                          ({ data }) => {\n                            if (data.success) {\n                              setFilters((prev) => ({ ...prev }));\n                              // setData((prev) =>\n                              //   prev.filter((data) => data._id !== item._id)\n                              // );\n                            } else {\n                              Prompt({ type: \"error\", message: data.message });\n                            }\n                          }\n                        );\n                      },\n                    }),\n                },\n              ]\n            : []),\n        ]}\n      />\n      <Modal\n        head\n        label={`${edit ? \"Update\" : \"Add\"} ${collection?.name || \"Collection\"}`}\n        open={addData}\n        setOpen={() => {\n          setAddData(false);\n          setEdit(null);\n        }}\n        className={s.dynamicFormModal}\n      >\n        <DynamicForm\n          edit={edit}\n          collection={collection}\n          prefill={addData?.title ? addData : null}\n          {...([\"Campaign\", \"Order\"].includes(collection?.name) && {\n            productCollection,\n          })}\n          onSuccess={(newData, addNew = false) => {\n            if (edit) {\n              setFilters((prev) => ({ ...prev }));\n              // setData((prev) =>\n              //   prev.map((t) => (t._id === edit._id ? newData : t))\n              // );\n              setEdit(null);\n            } else {\n              setFilters((prev) => ({ ...prev }));\n              // setData((prev) => [...prev, newData]);\n            }\n            if (addNew) {\n              setAddData({\n                category: newData.category,\n                subcategory: newData.subcategory,\n                title: newData.title,\n                price: newData.price,\n                description: newData.description,\n                whatsappNumber: newData.whatsappNumber,\n              });\n            } else {\n              setAddData(false);\n            }\n          }}\n        />\n      </Modal>\n    </div>\n  );\n};\n\nexport default DynamicTablePage;\n","import { useState, useEffect } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { Select } from \"Components/elements\";\nimport { useYup, useFetch } from \"hooks\";\nimport { Prompt } from \"Components/modal\";\nimport * as yup from \"yup\";\nimport s from \"./payments.module.scss\";\nimport { endpoints } from \"config\";\n\nconst mainSchema = yup.object({\n  schema_id: yup.string().required(),\n});\n\nconst Form = ({ onSuccess }) => {\n  const { handleSubmit, control } = useForm({\n    resolver: useYup(mainSchema),\n  });\n  const [schemas, setSchemas] = useState([]);\n  const { get: getSchemas, loading } = useFetch(endpoints.schemaTemplates);\n  const { post: saveSchema, loading: savingSchema } = useFetch(\n    endpoints.schemaTemplates\n  );\n\n  useEffect(() => {\n    getSchemas()\n      .then(({ data }) => {\n        if (data?.success) {\n          setSchemas(data.data);\n        }\n      })\n      .catch((err) => Prompt({ type: \"error\", message: err.message }));\n  }, []);\n  return (\n    <div className={`grid gap-1 p-1`}>\n      <form\n        onSubmit={handleSubmit((values) => {\n          saveSchema(values)\n            .then(({ data }) => {\n              if (!data.success) {\n                return Prompt({ type: \"error\", message: data.message });\n              }\n              Prompt({\n                type: \"success\",\n                message: data.message,\n                callback: () => {\n                  onSuccess(data.data);\n                },\n              });\n            })\n            .catch((err) => Prompt({ type: \"error\", message: err.message }));\n        })}\n        className={`${s.mainForm} grid gap-1`}\n      >\n        <Select\n          control={control}\n          name=\"schema_id\"\n          label=\"Select Schema\"\n          options={schemas.map((item) => ({\n            label: item.name,\n            value: item._id,\n          }))}\n          formOptions={{ required: true }}\n        />\n        <div className=\"btns mt-1\">\n          <button className=\"btn\" disabled={loading || savingSchema}>\n            Submit\n          </button>\n        </div>\n      </form>\n    </div>\n  );\n};\n\nexport default Form;\n","import { useEffect, useState, useCallback, useContext } from \"react\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport { useFetch } from \"hooks\";\nimport { Prompt, Modal } from \"Components/modal\";\nimport { paths, endpoints } from \"config\";\nimport { Table, TableActions } from \"Components/elements\";\nimport { FaPencilAlt, FaRegTrashAlt } from \"react-icons/fa\";\nimport s from \"./payments.module.scss\";\n\nimport CollectionForm from \"./form\";\nimport DynamicTable from \"./dynamicTable\";\nimport SchemaForm from \"./schemaTemplateForm\";\nimport { SiteContext } from \"SiteContext\";\n\nconst Collections = () => {\n  const { checkPermission } = useContext(SiteContext);\n  const [edit, setEdit] = useState(null);\n  const [addCollection, setAddCollection] = useState(false);\n  const [importSchema, setImportSchema] = useState(false);\n  const [collections, setCollections] = useState([]);\n  const { get: getCollections, loading } = useFetch(endpoints.collections);\n  const { remove: deleteCollection, loading: deleting } = useFetch(\n    endpoints.collections + `/{ID}`\n  );\n  const navigate = useNavigate();\n  const { \"*\": table } = useParams();\n\n  const fetchRecords = useCallback(() => {\n    getCollections()\n      .then(({ data }) => {\n        if (data.success) {\n          return setCollections(data.data);\n        }\n      })\n      .catch((err) => Prompt({ type: \"error\", message: err.message }));\n  }, []);\n\n  useEffect(() => {\n    fetchRecords();\n  }, []);\n\n  if (table) {\n    return <DynamicTable />;\n  }\n  return (\n    <div className={`${s.content} grid gap-1 m-a p-1`}>\n      <div className=\"flex justify-space-between\">\n        <h2>All Tables</h2>\n        <div className=\"flex gap-1\">\n          <button\n            className=\"btn m-a mr-0\"\n            onClick={() => setImportSchema(true)}\n          >\n            Import Schema\n          </button>\n          <button\n            className=\"btn m-a mr-0\"\n            onClick={() => setAddCollection(true)}\n          >\n            Add Table\n          </button>\n        </div>\n      </div>\n      <Table\n        loading={loading}\n        className={s.collections}\n        columns={[{ label: \"Name\" }, { label: \"Action\" }]}\n      >\n        {collections.map((item, i) => (\n          <tr key={i}>\n            <td\n              className={s.tableName}\n              onClick={(e) => {\n                if (e.target.tagName === \"TD\") {\n                  navigate(paths.dynamicTable.replace(\":table\", item.name));\n                }\n              }}\n            >\n              {item.name}\n            </td>\n            <TableActions\n              actions={[\n                ...(checkPermission(\"dynamic_table_update\")\n                  ? [\n                      {\n                        icon: <FaPencilAlt />,\n                        label: \"Edit\",\n                        callBack: () => {\n                          setEdit(item);\n                          setAddCollection(true);\n                        },\n                      },\n                    ]\n                  : []),\n                ...(checkPermission(\"dynamic_table_delete\")\n                  ? [\n                      {\n                        icon: <FaRegTrashAlt />,\n                        label: \"Delete\",\n                        disabled: deleting,\n                        callBack: () =>\n                          Prompt({\n                            type: \"confirmation\",\n                            message: `Are you sure you want to remove this Collection?`,\n                            callback: () => {\n                              deleteCollection(\n                                {},\n                                {\n                                  params: {\n                                    \"{ID}\": item._id,\n                                  },\n                                }\n                              )\n                                .then(({ data }) => {\n                                  if (data?.success) {\n                                    setCollections((prev) =>\n                                      prev.filter(\n                                        (product) => product._id !== item._id\n                                      )\n                                    );\n                                  }\n                                })\n                                .catch((err) =>\n                                  Prompt({\n                                    type: \"error\",\n                                    message: err.message,\n                                  })\n                                );\n                            },\n                          }),\n                      },\n                    ]\n                  : []),\n              ]}\n            />\n          </tr>\n        ))}\n      </Table>\n\n      <Modal\n        head\n        label={edit ? \"Update Collection\" : \"Add Collection\"}\n        open={addCollection}\n        setOpen={() => {\n          setAddCollection(false);\n          setEdit(null);\n        }}\n        className={s.collectionFormModal}\n      >\n        <CollectionForm\n          collections={collections}\n          edit={edit}\n          onSuccess={(newCollection) => {\n            if (edit) {\n              setCollections((prev) =>\n                prev.map((t) =>\n                  t._id.toLowerCase() === edit._id.toLowerCase()\n                    ? newCollection\n                    : t\n                )\n              );\n              setEdit(newCollection);\n            } else {\n              setEdit(newCollection);\n              setCollections((prev) => [...prev, newCollection]);\n            }\n            // setAddCollection(false);\n          }}\n        />\n      </Modal>\n\n      <Modal\n        head\n        label=\"Import Schema\"\n        open={importSchema}\n        setOpen={() => {\n          setImportSchema(false);\n        }}\n        className={s.collectionFormModal}\n      >\n        <SchemaForm\n          onSuccess={(schemas) => {\n            setImportSchema(false);\n            fetchRecords();\n          }}\n        />\n      </Modal>\n    </div>\n  );\n};\n\nexport default Collections;\n"],"names":["yup","arr","message","this","test","value","path","createError","includes","replace","mainSchema","name","required","optionsSchema","label","defaultFields","FieldForm","edit","fields","editCollection","collections","onSuccess","clear","useForm","resolver","useYup","noneOf","filter","item","map","dataType","fieldType","inputType","handleSubmit","register","reset","watch","setValue","control","errors","formState","dataElementType","dataElements","collection","optionType","options","useEffect","onSubmit","useCallback","values","data","Object","entries","forEach","key","category","subcategory","multiRange","decimalPlaces","unique","className","s","url","endpoints","getQuery","inputValue","selected","handleData","type","disabled","error","formOptions","coll","_id","find","NestedObjectFields","newValue","onChange","opt","Options","setOptions","newOptions","onClick","useState","setEdit","formOpen","setFormOpen","columns","action","placeholder","i","actions","icon","callBack","Prompt","callback","field","head","open","setOpen","productCollection","c","newField","toLowerCase","OptionsForm","newOption","clearForm","toString","product","Math","random","substr","setFields","editField","setEditField","err","setErr","setError","useFetch","saveCollection","post","updateCollection","put","tableName","loading","length","undefined","then","success","catch","JSON","stringify","readOnly","prev","DynamicForm","prefill","collectionFields","_fields","set_fields","f","typeError","phone","min","errorMessage","reduce","p","getValues","addVariant","_edit","addNew","moment","optionValue","variants","setTimeout","_prefill","sort","a","b","ProductFilterForm","NestedObjectTable","multiple","thumbnail","dateWindow","disabledDates","multipleRanges","autoFocus","optionLabel","marker","autoComplete","some","Variants","setVariants","price","images","VariantForm","newObj","selectedClassName","uploadFilePath","startsWith","URL","createObjectURL","renderItem","src","siteConfig","useContext","SiteContext","config","orderFields","e","stopPropagation","variant","title","currency","qty","toLocaleString","filterType","max","array","text","ProductFilterFieldsForm","formValues","keys","split","fieldName","subLabel","saveData","updateData","payload","findProperties","obj","FormData","file","append","filters","setFilters","business","checkPermission","templateData","setTemplateData","addData","setAddData","setCollection","setProductCollection","navigate","useNavigate","table","useParams","getCollection","get","gettingCollection","getProductCollection","deleteData","remove","_template","Date","toISOString","substring","toFixed","getTime","push","window","innerWidth","exportUrl","importUrl","paths","pagination","params","newData","description","whatsappNumber","schema_id","schemas","setSchemas","getSchemas","saveSchema","savingSchema","addCollection","setAddCollection","importSchema","setImportSchema","setCollections","getCollections","deleteCollection","deleting","fetchRecords","target","tagName","newCollection","t"],"sourceRoot":""}