{"version":3,"file":"static/js/791.c6caec85.chunk.js","mappings":"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","sources":["webpack://cash-app/./src/Views/Dashboard/AdminBusinesses/sales.module.scss?13a3","Views/Dashboard/AdminBusinesses/BusinessForm.js","Views/Dashboard/AdminBusinesses/index.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"content\":\"sales_content__Kz3Z8\",\"sales\":\"sales_sales__QhOx8\",\"addSaleForm\":\"sales_addSaleForm__SFVwQ\",\"itemForm\":\"sales_itemForm__BLJdR\",\"itemName\":\"sales_itemName__339eN\",\"mainForm\":\"sales_mainForm__Jy4by\",\"print\":\"sales_print__JF35w\"};","import { useEffect, useState } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { Input, Select } from \"Components/elements\";\nimport { useYup, useFetch } from \"hooks\";\nimport { Prompt } from \"Components/modal\";\nimport * as yup from \"yup\";\nimport s from \"./sales.module.scss\";\nimport { endpoints } from \"config\";\n\nconst Form = ({ edit, onSuccess }) => {\n  const [next, setNext] = useState(false);\n  const {\n    control,\n    handleSubmit,\n    register,\n    reset,\n    formState: { errors },\n  } = useForm({\n    resolver: useYup(\n      yup.object({\n        name: yup.string().required(),\n        phone: yup.string().required(),\n        password: edit ? yup.string() : yup.string().required(),\n        subPlan: yup.string().required(),\n      })\n    ),\n  });\n\n  const {\n    post: saveBusiness,\n    put: updateBusiness,\n    loading,\n  } = useFetch(endpoints.businesses + `/${edit?._id || \"\"}`);\n\n  useEffect(() => {\n    reset({\n      name: edit?.name || \"\",\n      phone: edit?.phone || \"\",\n      password: \"\",\n      subPlan: edit?.subscription?.plan?._id || \"\",\n    });\n  }, [edit]);\n  return (\n    <div className={`grid gap-1 p-1 ${s.addRoleForm}`}>\n      <form\n        autoComplete=\"new-password\"\n        onSubmit={handleSubmit((values) => {\n          if (!values.password) {\n            delete values.password;\n          }\n          (edit ? updateBusiness : saveBusiness)(values)\n            .then(({ data }) => {\n              if (!data.success) {\n                return Prompt({ type: \"error\", message: data.message });\n              }\n              onSuccess(data.data, next);\n            })\n            .catch((err) => Prompt({ type: \"error\", message: err.message }));\n        })}\n        className={`${s.mainForm} grid gap-1`}\n      >\n        <Input\n          label=\"Name\"\n          {...register(\"name\")}\n          required\n          error={errors.name}\n        />\n\n        <Input\n          label=\"Phone\"\n          {...register(\"phone\")}\n          required\n          error={errors.phone}\n        />\n\n        <Input\n          label=\"Password\"\n          type=\"password\"\n          {...register(\"password\")}\n          required={!edit}\n          error={errors.password}\n        />\n\n        <Select\n          control={control}\n          label=\"Subscription Plan*\"\n          name=\"subPlan\"\n          url={endpoints.subPlans}\n          getQuery={(inputValue, selected) => ({\n            name: inputValue,\n            _id: selected,\n          })}\n          handleData={(item) => ({\n            label: item.name,\n            value: item._id,\n          })}\n        />\n\n        <div className=\"btns\">\n          <button className=\"btn\" disabled={loading}>\n            {edit ? \"Update\" : \"Submit\"}\n          </button>\n          {!edit && (\n            <button\n              className=\"btn\"\n              disabled={loading}\n              onClick={() => {\n                setNext(true);\n              }}\n            >\n              Next\n            </button>\n          )}\n        </div>\n      </form>\n    </div>\n  );\n};\n\nexport default Form;\n","import { useContext, useEffect, useState } from \"react\";\nimport { SiteContext } from \"SiteContext\";\nimport { Table, TableActions } from \"Components/elements\";\nimport s from \"./sales.module.scss\";\nimport { Modal, Prompt } from \"Components/modal\";\nimport { useFetch } from \"hooks\";\nimport { endpoints } from \"config\";\nimport BusinessForm from \"./BusinessForm\";\nimport { useNavigate } from \"react-router-dom\";\nimport { paths } from \"config\";\nimport { FaPencilAlt } from \"react-icons/fa\";\n\nconst Businesses = () => {\n  const { setBusiness, setConfig } = useContext(SiteContext);\n  const [businesses, setBusinesses] = useState([]);\n  const [addBusiness, setAddBusiness] = useState(false);\n  const navigate = useNavigate();\n\n  const { get: getBusinesses } = useFetch(endpoints.findBusinesses);\n\n  useEffect(() => {\n    getBusinesses()\n      .then(({ data }) => {\n        if (data.success) {\n          setBusinesses(data.data);\n        } else {\n          Prompt({ type: \"error\", message: data.message });\n        }\n      })\n      .catch((err) => Prompt({ type: \"error\", message: err.message }));\n  }, []);\n\n  return (\n    <div className={`${s.content} grid gap-1 m-a p-1`}>\n      <div className=\"flex\">\n        <h2>All Businesses</h2>\n        <button className=\"btn m-a mr-0\" onClick={() => setAddBusiness(true)}>\n          Add Business\n        </button>\n      </div>\n      <Table\n        className={s.sales}\n        columns={[\n          { label: \"Business\" },\n          { label: \"Plan\" },\n          { label: \"Actions\" },\n        ]}\n      >\n        {businesses.map((item) => (\n          <tr\n            onClick={(e) => {\n              if ([\"TR\", \"TD\"].includes(e.target.nodeName)) {\n                setBusiness({ business: item });\n                setConfig(item.config);\n              }\n            }}\n            style={{ cursor: \"pointer\" }}\n            key={item._id}\n          >\n            <td>{item.name}</td>\n            <td>{item.subscription?.plan?.name}</td>\n            <TableActions\n              className={s.actions}\n              actions={[\n                {\n                  icon: <FaPencilAlt />,\n                  label: \"Edit\",\n                  callBack: () => {\n                    setAddBusiness(item);\n                  },\n                },\n              ]}\n            />\n          </tr>\n        ))}\n      </Table>\n      <Modal\n        open={!!addBusiness}\n        head\n        label={`${addBusiness?._id ? \"View / Update\" : \"Add\"} Business`}\n        className={s.addBusinessFormModal}\n        setOpen={() => {\n          setAddBusiness(null);\n        }}\n      >\n        <BusinessForm\n          edit={addBusiness?._id ? addBusiness : null}\n          onSuccess={(newBusiness, next) => {\n            if (addBusiness?._id) {\n              setBusinesses((prev) =>\n                prev.map((item) =>\n                  item._id === newBusiness._id ? newBusiness : item\n                )\n              );\n            } else {\n              setBusinesses((prev) => [...prev, newBusiness]);\n            }\n            setAddBusiness(null);\n            if (next) {\n              setBusiness({ business: newBusiness });\n              setConfig(newBusiness.config);\n              navigate(\n                paths.dashboard.replace(\"*\", \"\") +\n                  paths.settings.baseUrl.replace(\"*\", \"\") +\n                  paths.settings.businessInformation,\n                { state: { next } }\n              );\n            }\n          }}\n        />\n      </Modal>\n    </div>\n  );\n};\n\nexport default Businesses;\n"],"names":["edit","onSuccess","useState","next","setNext","useForm","resolver","useYup","yup","name","required","phone","password","subPlan","control","handleSubmit","register","reset","errors","formState","useFetch","endpoints","_id","saveBusiness","post","updateBusiness","put","loading","useEffect","subscription","plan","className","s","autoComplete","onSubmit","values","then","data","success","Prompt","type","message","catch","err","label","error","url","getQuery","inputValue","selected","handleData","item","value","disabled","onClick","useContext","SiteContext","setBusiness","setConfig","businesses","setBusinesses","addBusiness","setAddBusiness","navigate","useNavigate","getBusinesses","get","columns","map","e","includes","target","nodeName","business","config","style","cursor","actions","icon","callBack","open","head","setOpen","BusinessForm","newBusiness","prev","paths","state"],"sourceRoot":""}