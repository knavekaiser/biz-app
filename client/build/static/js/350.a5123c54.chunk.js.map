{"version":3,"file":"static/js/350.a5123c54.chunk.js","mappings":"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","sources":["webpack://cash-app/./src/Views/Dashboard/SubPlans/subPlans.module.scss?8e2b","Views/Dashboard/SubPlans/SubPlanForm.js","Views/Dashboard/SubPlans/index.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"content\":\"subPlans_content__YbSmA\",\"subPlans\":\"subPlans_subPlans__5xMRL\",\"addSubPlanFormModal\":\"subPlans_addSubPlanFormModal__EOAlu\"};","import { useEffect } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { Input } from \"Components/elements\";\nimport { useYup, useFetch } from \"hooks\";\nimport { Prompt } from \"Components/modal\";\nimport * as yup from \"yup\";\nimport { endpoints } from \"config\";\n\nconst schema = yup.object({\n  name: yup.string().required(),\n  price: yup\n    .number()\n    .min(0, \"Price Can't be less than 0\")\n    .required()\n    .typeError(\"Please enter a valid number\"),\n  duration: yup\n    .number()\n    .min(1, \"Please enter more than 0\")\n    .required()\n    .typeError(\"Please enter a valid number\"),\n  maxProduct: yup\n    .number()\n    .min(1, \"Please enter more than 0\")\n    .required()\n    .typeError(\"Please enter a valid number\"),\n  maxAiChatToken: yup\n    .number()\n    .min(1, \"Please enter more than 0\")\n    .required()\n    .typeError(\"Please enter a valid number\"),\n  maxAiChatContextToken: yup\n    .number()\n    .min(1, \"Please enter more than 0\")\n    .required()\n    .typeError(\"Please enter a valid number\"),\n});\n\nconst Form = ({ edit, onSuccess }) => {\n  const {\n    handleSubmit,\n    register,\n    reset,\n    formState: { errors },\n  } = useForm({\n    resolver: useYup(schema),\n  });\n\n  const {\n    post: save,\n    put: update,\n    loading,\n  } = useFetch(endpoints.subPlans + `/${edit?._id || \"\"}`);\n\n  useEffect(() => {\n    reset({\n      ...edit,\n      maxProduct: edit?.features?.maxProduct,\n      maxAiChatToken: edit?.features?.maxAiChatToken,\n      maxAiChatContextToken: edit?.features?.maxAiChatContextToken,\n    });\n  }, [edit]);\n  return (\n    <form\n      onSubmit={handleSubmit((values) => {\n        values.features = {\n          maxProduct: values.maxProduct,\n          maxAiChatToken: values.maxAiChatToken,\n          maxAiChatContextToken: values.maxAiChatContextToken,\n        };\n        delete values.maxProduct;\n        (edit ? update : save)({ ...values })\n          .then(({ data }) => {\n            if (!data.success) {\n              return Prompt({ type: \"error\", message: data.message });\n            }\n            onSuccess(data.data);\n          })\n          .catch((err) => Prompt({ type: \"error\", message: err.message }));\n      })}\n      className={`grid gap-1 p-1`}\n    >\n      <Input label=\"Name\" {...register(\"name\")} required error={errors.name} />\n      <Input\n        label=\"Price\"\n        {...register(\"price\")}\n        type=\"number\"\n        required\n        error={errors.price}\n      />\n      <Input\n        label=\"Duration\"\n        {...register(\"duration\")}\n        type=\"number\"\n        required\n        error={errors.duration}\n      />\n      <h3>Features</h3>\n      <Input\n        label=\"Max number of Products\"\n        {...register(\"maxProduct\")}\n        type=\"number\"\n        required\n        error={errors.maxProduct}\n      />\n      <Input\n        label=\"Max AI Chat Token\"\n        {...register(\"maxAiChatToken\")}\n        type=\"number\"\n        required\n        error={errors.maxAiChatToken}\n      />\n      <Input\n        label=\"Max AI Chat Context Token\"\n        {...register(\"maxAiChatContextToken\")}\n        type=\"number\"\n        required\n        error={errors.maxAiChatContextToken}\n      />\n      <div className=\"btns\">\n        <button className=\"btn\" disabled={loading}>\n          {edit ? \"Update\" : \"Submit\"}\n        </button>\n      </div>\n    </form>\n  );\n};\n\nexport default Form;\n","import { useState, useEffect, useContext } from \"react\";\nimport { SiteContext } from \"SiteContext\";\nimport { Table, TableActions } from \"Components/elements\";\nimport { FaPencilAlt, FaRegTrashAlt } from \"react-icons/fa\";\nimport { Prompt, Modal } from \"Components/modal\";\nimport s from \"./subPlans.module.scss\";\nimport { useFetch } from \"hooks\";\nimport { endpoints } from \"config\";\n\nimport SubPlanForm from \"./SubPlanForm\";\n\nconst SubPlans = () => {\n  const { checkPermission } = useContext(SiteContext);\n  const [subPlans, setSubPlans] = useState([]);\n  const [subPlan, setSubPlan] = useState(null);\n  const [addSubPlan, setAddSubPlan] = useState(false);\n\n  const { get: getSubPlans, loading } = useFetch(endpoints.subPlans);\n  const { remove: deleteSubPlan } = useFetch(endpoints.subPlans + \"/{ID}\");\n\n  useEffect(() => {\n    getSubPlans()\n      .then(({ data }) => {\n        if (data.success) {\n          return setSubPlans(data.data);\n        }\n      })\n      .catch((err) => Prompt({ type: \"error\", message: err.message }));\n  }, []);\n  return (\n    <div className={`${s.content} grid gap-1 m-a p-1`}>\n      <div className=\"flex\">\n        <h2>All Subscription Plans</h2>\n        {checkPermission(\"sub_plan_create\") && (\n          <button className=\"btn m-a mr-0\" onClick={() => setAddSubPlan(true)}>\n            Add Plan\n          </button>\n        )}\n      </div>\n      <Table\n        loading={loading}\n        className={s.subPlans}\n        columns={[\n          { label: \"Name\" },\n          { label: \"Duration\" },\n          { label: \"Price\" },\n          { label: \"Action\" },\n        ]}\n      >\n        {subPlans.map((item) => (\n          <tr\n            onClick={() => {\n              setSubPlan(item);\n              setAddSubPlan(true);\n            }}\n            style={{ cursor: \"pointer\" }}\n            key={item._id}\n          >\n            <td>{item.name}</td>\n            <td>{item.duration.toLocaleString()} days</td>\n            <td>{item.price.toLocaleString()}</td>\n            <TableActions\n              className={s.actions}\n              actions={[\n                {\n                  icon: <FaPencilAlt />,\n                  label: \"Edit\",\n                  callBack: () => {\n                    setSubPlan(item);\n                    setAddSubPlan(true);\n                  },\n                },\n                ...(checkPermission(\"sub_plan_delete\")\n                  ? [\n                      {\n                        icon: <FaRegTrashAlt />,\n                        label: \"Delete\",\n                        callBack: () =>\n                          Prompt({\n                            type: \"confirmation\",\n                            message: `Are you sure you want to remove this Plan?`,\n                            callback: () => {\n                              deleteSubPlan(\n                                {},\n                                { params: { \"{ID}\": item._id } }\n                              ).then(({ data }) => {\n                                if (data.success) {\n                                  setSubPlans((prev) =>\n                                    prev.filter((plan) => plan._id !== item._id)\n                                  );\n                                } else {\n                                  Prompt({\n                                    type: \"error\",\n                                    message: data.message,\n                                  });\n                                }\n                              });\n                            },\n                          }),\n                      },\n                    ]\n                  : []),\n              ]}\n            />\n          </tr>\n        ))}\n      </Table>\n      <Modal\n        open={addSubPlan}\n        head\n        label={`${subPlan ? \"View / Update\" : \"Add\"} Subscription Plan`}\n        className={s.addSubPlanFormModal}\n        setOpen={() => {\n          setSubPlan(null);\n          setAddSubPlan(false);\n        }}\n      >\n        <SubPlanForm\n          edit={subPlan}\n          onSuccess={(newCat) => {\n            if (subPlan) {\n              setSubPlans((prev) =>\n                prev.map((item) => (item._id === newCat._id ? newCat : item))\n              );\n              setSubPlan(null);\n            } else {\n              setSubPlans((prev) => [...prev, newCat]);\n            }\n            setAddSubPlan(false);\n          }}\n        />\n      </Modal>\n    </div>\n  );\n};\n\nexport default SubPlans;\n"],"names":["schema","yup","name","required","price","min","typeError","duration","maxProduct","maxAiChatToken","maxAiChatContextToken","edit","onSuccess","useForm","resolver","useYup","handleSubmit","register","reset","errors","formState","useFetch","endpoints","_id","save","post","update","put","loading","useEffect","features","onSubmit","values","then","data","success","Prompt","type","message","catch","err","className","label","error","disabled","checkPermission","useContext","SiteContext","useState","subPlans","setSubPlans","subPlan","setSubPlan","addSubPlan","setAddSubPlan","getSubPlans","get","deleteSubPlan","remove","s","onClick","columns","map","item","style","cursor","toLocaleString","actions","icon","callBack","callback","params","prev","filter","plan","open","head","setOpen","SubPlanForm","newCat"],"sourceRoot":""}