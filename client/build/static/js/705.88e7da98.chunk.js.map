{"version":3,"file":"static/js/705.88e7da98.chunk.js","mappings":"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","sources":["webpack://cash-app/./src/Views/Dashboard/dashboard.module.scss?4603","Views/Dashboard/index.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"container\":\"dashboard_container__-vEcK\",\"tabs\":\"dashboard_tabs__Lh0mB\",\"tab\":\"dashboard_tab__InnYO\",\"content\":\"dashboard_content__tKnXw\",\"loading\":\"dashboard_loading__D9xzU\",\"header\":\"dashboard_header__8enPf\",\"title\":\"dashboard_title__AMw3j\",\"btns\":\"dashboard_btns__O0TN5\",\"btn\":\"dashboard_btn__1MBji\",\"head\":\"dashboard_head__tmHCp\",\"col\":\"dashboard_col__8qy-c\",\"body\":\"dashboard_body__kjp45\",\"row\":\"dashboard_row__tCOwx\",\"settingsLoading\":\"dashboard_settingsLoading__X-DbH\",\"sq\":\"dashboard_sq__pxkU-\"};","import { Suspense, lazy, useContext, useEffect } from \"react\";\nimport { SiteContext } from \"SiteContext\";\nimport { Routes, Route, useNavigate } from \"react-router-dom\";\nimport { Tabs } from \"Components/elements\";\nimport { paths } from \"config\";\nimport { Header, Footer } from \"Components/ui\";\n\nimport s from \"./dashboard.module.scss\";\n\nconst Settings = lazy(() => import(\"./Settings\"));\nconst AdminSettings = lazy(() => import(\"./AdminSettings\"));\nconst Businesses = lazy(() => import(\"./Businesses\"));\nconst AdminBusinesses = lazy(() => import(\"./AdminBusinesses\"));\nconst Invoices = lazy(() => import(\"./Sales\"));\nconst Orders = lazy(() => import(\"./Orders\"));\nconst Quotes = lazy(() => import(\"./Quotes\"));\nconst Purchases = lazy(() => import(\"./Purchases\"));\nconst Receipts = lazy(() => import(\"./Receipts\"));\nconst Payments = lazy(() => import(\"./Payments\"));\nconst DynamicTables = lazy(() => import(\"./DynamicTables\"));\nconst AdminDynamicTables = lazy(() => import(\"./AdminDynamicTables\"));\nconst Roles = lazy(() => import(\"./Roles\"));\nconst Employees = lazy(() => import(\"./Employees\"));\nconst StoreListings = lazy(() => import(\"./Stores\"));\nconst SubCategories = lazy(() => import(\"./SubCategories\"));\nconst SubPlans = lazy(() => import(\"./SubPlans\"));\nconst Chats = lazy(() => import(\"./Chats\"));\n\nconst Dashboard = () => {\n  const { user, business, userType, checkPermission } = useContext(SiteContext);\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    if (!user) {\n      navigate(paths.signIn);\n    }\n  }, []);\n\n  if (userType === \"admin\" && !business) {\n    return (\n      <div className={s.container}>\n        <Header />\n        <div className={s.tabs}>\n          <Tabs\n            className={s.tab}\n            tabs={[\n              { label: \"Businesses\", path: paths.businesses },\n              { label: \"Stores\", path: paths.storeListings },\n              { label: \"Subscription Plans\", path: paths.subPlans },\n              // { label: \"Categories\", path: paths.categories },\n              // { label: \"Sub Categories\", path: paths.subCategories },\n              { label: \"Chats\", path: paths.chats },\n              {\n                label: \"Manage Data\",\n                path: paths.dynamicTables.replace(\"/*\", \"\"),\n              },\n              { label: \"Settings\", path: paths.settings.baseUrl },\n            ]}\n          />\n        </div>\n        <Routes>\n          {/* <Route path={paths.stores} element={<Stores />} /> */}\n          {/* <Route\n            path={paths.subCategories}\n            element={\n              <Suspense fallback={<LoadingSaklleton />}>\n                <SubCategories />\n              </Suspense>\n            }\n          /> */}\n          <Route\n            path={paths.subPlans}\n            element={\n              <Suspense fallback={<LoadingSaklleton />}>\n                <SubPlans />\n              </Suspense>\n            }\n          />\n          <Route\n            path={paths.storeListings}\n            element={\n              <Suspense fallback={<LoadingSaklleton />}>\n                <StoreListings />\n              </Suspense>\n            }\n          />\n          {/* <Route path={paths.categories} element={<Categories />} /> */}\n          <Route\n            path={paths.businesses}\n            element={\n              <Suspense fallback={<LoadingSaklleton />}>\n                <AdminBusinesses />\n              </Suspense>\n            }\n          />\n          <Route\n            path={paths.settings.baseUrl}\n            element={\n              <Suspense fallback={<LoadingSaklleton />}>\n                <AdminSettings />\n              </Suspense>\n            }\n          />\n          <Route\n            path={paths.dynamicTables}\n            element={\n              <Suspense fallback={<LoadingSaklleton />}>\n                <AdminDynamicTables />\n              </Suspense>\n            }\n          />\n          <Route\n            path={paths.chats}\n            element={\n              <Suspense fallback={<LoadingSaklleton />}>\n                <Chats />\n              </Suspense>\n            }\n          />\n        </Routes>\n        <Footer />\n      </div>\n    );\n  }\n  if (localStorage.getItem(\"userType\") === \"staff\" && !business) {\n    return (\n      <div className={s.container}>\n        <Header />\n        <div className={s.tabs}>\n          <Tabs\n            className={s.tab}\n            tabs={[\n              { label: \"Businesses\", path: paths.businesses },\n              // { label: \"Settings\", path: paths.settings },\n            ]}\n          />\n        </div>\n        <Routes>\n          <Route\n            path={paths.businesses}\n            element={\n              <Suspense fallback={<LoadingSaklleton />}>\n                <Businesses />\n              </Suspense>\n            }\n          />\n        </Routes>\n        <Footer />\n      </div>\n    );\n  }\n  return (\n    <div className={s.container}>\n      <Header />\n      <div className={s.tabs}>\n        <Tabs\n          className={s.tab}\n          tabs={[\n            ...(checkPermission(\"quote_read\")\n              ? [{ label: \"Quotes\", path: paths.quotes }]\n              : []),\n            ...(checkPermission(\"order_read\")\n              ? [{ label: \"Orders\", path: paths.orders }]\n              : []),\n            ...(checkPermission(\"invoice_read\")\n              ? [{ label: \"Invoices\", path: paths.sales }]\n              : []),\n            ...(checkPermission(\"purchase_read\")\n              ? [{ label: \"Purchases\", path: paths.purchases }]\n              : []),\n            ...(checkPermission(\"reciept_read\")\n              ? [{ label: \"Receipts\", path: paths.receipts }]\n              : []),\n            ...(checkPermission(\"payment_read\")\n              ? [{ label: \"Payments\", path: paths.payments }]\n              : []),\n            ...(checkPermission(\"dynamic_table_read\")\n              ? [\n                  {\n                    label: \"Manage Data\",\n                    path: paths.dynamicTables.replace(\"/*\", \"\"),\n                  },\n                ]\n              : []),\n            ...(checkPermission(\"chat_read\")\n              ? [{ label: \"Chats\", path: paths.chats }]\n              : []),\n            ...(checkPermission(\"role_read\")\n              ? [{ label: \"Roles\", path: paths.roles }]\n              : []),\n            ...(checkPermission(\"employee_read\")\n              ? [{ label: \"Staffs\", path: paths.employees }]\n              : []),\n            ...([\"business\", \"admin\"].includes(userType)\n              ? [{ label: \"Settings\", path: paths.settings.baseUrl }]\n              : []),\n            ...([\"staff\", \"admin\"].includes(userType)\n              ? [{ label: \"Businesses\", path: paths.businesses }]\n              : []),\n          ]}\n        />\n      </div>\n      <Routes>\n        {checkPermission(\"quote_read\") && (\n          <Route\n            path={paths.quotes}\n            element={\n              <Suspense fallback={<LoadingSaklleton />}>\n                <Quotes />\n              </Suspense>\n            }\n          />\n        )}\n        {checkPermission(\"order_read\") && (\n          <Route\n            path={paths.orders}\n            element={\n              <Suspense fallback={<LoadingSaklleton />}>\n                <Orders />\n              </Suspense>\n            }\n          />\n        )}\n        {checkPermission(\"invoice_read\") && (\n          <Route\n            path={paths.sales}\n            element={\n              <Suspense fallback={<LoadingSaklleton />}>\n                <Invoices />\n              </Suspense>\n            }\n          />\n        )}\n        {checkPermission(\"purchase_read\") && (\n          <Route\n            path={paths.purchases}\n            element={\n              <Suspense fallback={<LoadingSaklleton />}>\n                <Purchases />\n              </Suspense>\n            }\n          />\n        )}\n        {checkPermission(\"reciept_read\") && (\n          <Route\n            path={paths.receipts}\n            element={\n              <Suspense fallback={<LoadingSaklleton />}>\n                <Receipts />\n              </Suspense>\n            }\n          />\n        )}\n        {checkPermission(\"payment_read\") && (\n          <Route\n            path={paths.payments}\n            element={\n              <Suspense fallback={<LoadingSaklleton />}>\n                <Payments />\n              </Suspense>\n            }\n          />\n        )}\n        {checkPermission(\"dynamic_table_read\") && (\n          <Route\n            path={paths.dynamicTables}\n            element={\n              <Suspense fallback={<LoadingSaklleton />}>\n                <DynamicTables />\n              </Suspense>\n            }\n          />\n        )}\n        {checkPermission(\"role_read\") && (\n          <Route\n            path={paths.roles}\n            element={\n              <Suspense fallback={<LoadingSaklleton />}>\n                <Roles />\n              </Suspense>\n            }\n          />\n        )}\n        {checkPermission(\"employee_read\") && (\n          <Route\n            path={paths.employees}\n            element={\n              <Suspense fallback={<LoadingSaklleton />}>\n                <Employees />\n              </Suspense>\n            }\n          />\n        )}\n        {checkPermission(\"chat_read\") && (\n          <Route\n            path={paths.chats}\n            element={\n              <Suspense fallback={<LoadingSaklleton />}>\n                <Chats />\n              </Suspense>\n            }\n          />\n        )}\n        {userType === \"staff\" && (\n          <Route\n            path={paths.businesses}\n            element={\n              <Suspense fallback={<LoadingSaklleton />}>\n                <Businesses />\n              </Suspense>\n            }\n          />\n        )}\n        {userType === \"admin\" && (\n          <Route\n            path={paths.businesses}\n            element={\n              <Suspense fallback={<LoadingSaklleton />}>\n                <AdminBusinesses />\n              </Suspense>\n            }\n          />\n        )}\n        {[\"business\", \"admin\"].includes(userType) && (\n          <Route\n            path={paths.settings.baseUrl}\n            element={\n              <Suspense fallback={<SettingLoading />}>\n                <Settings />\n              </Suspense>\n            }\n          />\n        )}\n      </Routes>\n      <Footer />\n    </div>\n  );\n};\n\nconst LoadingSaklleton = () => {\n  return (\n    <div className={s.loading}>\n      <div className={`${s.header} flex align-center justify-space-between`}>\n        <div className={`${s.title} skl-loading`} />\n        <div className={`${s.btns} flex gap_5`}>\n          <div className={`${s.btn} skl-loading`} />\n          <div className={`${s.btn} skl-loading`} />\n        </div>\n      </div>\n      <div className={s.content}>\n        <div className={s.head}>\n          {Array(3)\n            .fill(null)\n            .map((item, i) => (\n              <div\n                key={i}\n                style={{\n                  width: `${Math.floor(Math.random() * (75 - 25 + 1)) + 25}%`,\n                }}\n                className={`${s.col} skl-loading`}\n              />\n            ))}\n          <div className={`${s.col} skl-loading`} />\n        </div>\n        <div className={s.body}>\n          {Array(4)\n            .fill(null)\n            .map((item, i) => (\n              <div key={i} className={s.row}>\n                <div\n                  style={{\n                    width: `${Math.floor(Math.random() * (75 - 25 + 1)) + 25}%`,\n                  }}\n                  className={`${s.col} skl-loading`}\n                />\n                <div\n                  style={{\n                    width: `${Math.floor(Math.random() * (75 - 25 + 1)) + 25}%`,\n                  }}\n                  className={`${s.col} skl-loading`}\n                />\n                <div\n                  style={{\n                    width: `${Math.floor(Math.random() * (75 - 25 + 1)) + 25}%`,\n                  }}\n                  className={`${s.col} skl-loading`}\n                />\n              </div>\n            ))}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nconst SettingLoading = () => {\n  return (\n    <div className={s.settingsLoading}>\n      <div className={`${s.tabs} flex wrap gap_5`}>\n        {Array(5)\n          .fill(null)\n          .map((item, i) => (\n            <div key={i} className={`${s.tab} skl-loading`} />\n          ))}\n      </div>\n      <div className={`${s.title} skl-loading`} />\n      <div className={`${s.sq} skl-loading`} />\n      <div className={`${s.title} skl-loading`} />\n      <div className={`${s.title} skl-loading`} />\n      <div className={`${s.title} skl-loading`} />\n    </div>\n  );\n};\n\nexport default Dashboard;\n"],"names":["Settings","lazy","AdminSettings","Businesses","AdminBusinesses","Invoices","Orders","Quotes","Purchases","Receipts","Payments","DynamicTables","AdminDynamicTables","Roles","Employees","StoreListings","SubPlans","Chats","LoadingSaklleton","className","s","Array","fill","map","item","i","style","width","Math","floor","random","SettingLoading","useContext","SiteContext","user","business","userType","checkPermission","navigate","useNavigate","useEffect","paths","localStorage","getItem","tabs","label","path","includes","element","Suspense","fallback"],"sourceRoot":""}